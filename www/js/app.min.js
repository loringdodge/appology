angular.module("app",["ionic","app.AgentFactory","app.AuthFactory","app.ChecklistFactory","app.LocationFactory","app.ProposalFactory","app.RequestFactory","app.AgentsController","app.AgentController","app.LoginController","app.LogoutController","app.SignUpController","app.CardController","app.CardsController","app.ChecklistController","app.ChecklistAddController","app.ChecklistDetailController","app.LocationController","app.ProposalController","app.ProposalInterviewController","app.ProposalQuestionsController","app.ProposalsController","app.BellController","app.RequestController","app.SplashController","app.CommissionDirective","app.LocationDirective","app.NoScrollDirective","app.ProposalFeesDirective","app.ReviewImgDirective","app.StarDirective","d3Module","ngLodash","ngMessages","ionic.utils","ionic.contrib.ui.tinderCards","ngCordova"]).run(["$ionicPlatform",function(n){n.ready(function(){window.cordova&&window.cordova.plugins.Keyboard&&cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),window.StatusBar&&StatusBar.styleDefault()})}]).config(["$stateProvider","$urlRouterProvider","$ionicConfigProvider",function(n,t,e){n.state("splash",{url:"/splash",templateUrl:"js/splash/splash.view.html",controller:"SplashController"}).state("tab",{url:"/tab","abstract":!0,templateUrl:"templates/tabs.html",controller:"LoginController"}).state("tab.home",{url:"/home",views:{"tab-home":{templateUrl:"templates/tab-home.html"}}}).state("tab.request",{url:"/request",views:{"tab-request":{templateUrl:"js/request/request-tab.view.html",controller:"BellController"}}}).state("tab.request-submit",{url:"/request/submit",views:{"tab-request":{templateUrl:"js/request/request-submit.view.html",controller:"RequestController"}}}).state("tab.checklist",{url:"/checklist",views:{"tab-checklist":{templateUrl:"js/checklist/checklist-tab.view.html",controller:"ChecklistController"}}}).state("tab.checklist-detail",{url:"/checklist/:checklistId",params:{item:null},views:{"tab-checklist":{templateUrl:"js/checklist/checklist-detail.view.html",controller:"ChecklistDetailController"}}}).state("tab.checklist-add",{url:"/checklist/add/:category",views:{"tab-checklist":{templateUrl:"js/checklist/checklist-add.view.html",controller:"ChecklistAddController"}}}).state("tab.proposals",{url:"/proposals/:userId",views:{"tab-proposals":{templateUrl:"js/proposal/proposals-tab.view.html",controller:"ProposalsController"}}}).state("tab.proposal",{url:"/proposal/:proposalId",views:{"tab-proposals":{templateUrl:"js/proposal/proposal.view.html",controller:"ProposalController"}}}).state("tab.proposal.fees",{url:"/fees",views:{"proposal-view":{templateUrl:"js/proposal/proposal-fees.view.html",controller:"ProposalController"}}}).state("tab.proposal.services",{url:"/services",views:{"proposal-view":{templateUrl:"js/proposal/proposal-services.view.html",controller:"ProposalController"}}}).state("tab.proposal.questions",{url:"/questions",views:{"proposal-view":{templateUrl:"js/proposal/proposal-questions.view.html",controller:"ProposalQuestionsController"}}}).state("tab.proposal-interview",{url:"/interview/:proposalId",params:{proposalId:null},views:{"tab-proposals":{templateUrl:"js/proposal/proposal-interview.view.html",controller:"ProposalInterviewController"}}}).state("tab.agents",{url:"/agents",views:{"tab-agents":{templateUrl:"js/agent/agents-tab.view.html",controller:"AgentsController"}}}).state("tab.agent",{url:"/agent/:agentId",views:{"tab-agents":{templateUrl:"js/agent/agent.view.html",controller:"AgentController"}}}).state("tab.agent.info",{url:"/info",views:{"profile-view":{templateUrl:"js/agent/agent-info.view.html",controller:"AgentController"}}}).state("tab.agent.reviews",{url:"/reviews",views:{"profile-view":{templateUrl:"js/agent/agent-reviews.view.html",controller:"AgentController"}}}),t.otherwise("/splash"),e.backButton.previousTitleText(!1).text("&emsp;&emsp;")}]),angular.module("app",["ionic","app.AgentFactory","app.AuthFactory","app.ChecklistFactory","app.LocationFactory","app.ProposalFactory","app.RequestFactory","app.AgentsController","app.AgentController","app.LoginController","app.LogoutController","app.SignUpController","app.CardController","app.CardsController","app.ChecklistController","app.ChecklistAddController","app.ChecklistDetailController","app.LocationController","app.ProposalController","app.ProposalInterviewController","app.ProposalQuestionsController","app.ProposalsController","app.BellController","app.RequestController","app.SplashController","app.CommissionDirective","app.LocationDirective","app.NoScrollDirective","app.ProposalFeesDirective","app.ReviewImgDirective","app.StarDirective","d3Module","ngLodash","ngMessages","ionic.utils","ionic.contrib.ui.tinderCards","ngCordova"]).run(["$ionicPlatform",function(n){n.ready(function(){window.cordova&&window.cordova.plugins.Keyboard&&cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),window.StatusBar&&StatusBar.styleDefault()})}]).config(["$stateProvider","$urlRouterProvider","$ionicConfigProvider",function(n,t,e){n.state("splash",{url:"/splash",templateUrl:"js/splash/splash.view.html",controller:"SplashController"}).state("tab",{url:"/tab","abstract":!0,templateUrl:"templates/tabs.html",controller:"LoginController"}).state("tab.home",{url:"/home",views:{"tab-home":{templateUrl:"templates/tab-home.html"}}}).state("tab.request",{url:"/request",views:{"tab-request":{templateUrl:"js/request/request-tab.view.html",controller:"BellController"}}}).state("tab.request-submit",{url:"/request/submit",views:{"tab-request":{templateUrl:"js/request/request-submit.view.html",controller:"RequestController"}}}).state("tab.checklist",{url:"/checklist",views:{"tab-checklist":{templateUrl:"js/checklist/checklist-tab.view.html",controller:"ChecklistController"}}}).state("tab.checklist-detail",{url:"/checklist/:checklistId",params:{item:null},views:{"tab-checklist":{templateUrl:"js/checklist/checklist-detail.view.html",controller:"ChecklistDetailController"}}}).state("tab.checklist-add",{url:"/checklist/add/:category",views:{"tab-checklist":{templateUrl:"js/checklist/checklist-add.view.html",controller:"ChecklistAddController"}}}).state("tab.proposals",{url:"/proposals/:userId",views:{"tab-proposals":{templateUrl:"js/proposal/proposals-tab.view.html",controller:"ProposalsController"}}}).state("tab.proposal",{url:"/proposal/:proposalId",views:{"tab-proposals":{templateUrl:"js/proposal/proposal.view.html",controller:"ProposalController"}}}).state("tab.proposal.fees",{url:"/fees",views:{"proposal-view":{templateUrl:"js/proposal/proposal-fees.view.html",controller:"ProposalController"}}}).state("tab.proposal.services",{url:"/services",views:{"proposal-view":{templateUrl:"js/proposal/proposal-services.view.html",controller:"ProposalController"}}}).state("tab.proposal.questions",{url:"/questions",views:{"proposal-view":{templateUrl:"js/proposal/proposal-questions.view.html",controller:"ProposalQuestionsController"}}}).state("tab.proposal-interview",{url:"/interview/:proposalId",params:{proposalId:null},views:{"tab-proposals":{templateUrl:"js/proposal/proposal-interview.view.html",controller:"ProposalInterviewController"}}}).state("tab.agents",{url:"/agents",views:{"tab-agents":{templateUrl:"js/agent/agents-tab.view.html",controller:"AgentsController"}}}).state("tab.agent",{url:"/agent/:agentId",views:{"tab-agents":{templateUrl:"js/agent/agent.view.html",controller:"AgentController"}}}).state("tab.agent.info",{url:"/info",views:{"profile-view":{templateUrl:"js/agent/agent-info.view.html",controller:"AgentController"}}}).state("tab.agent.reviews",{url:"/reviews",views:{"profile-view":{templateUrl:"js/agent/agent-reviews.view.html",controller:"AgentController"}}}),t.otherwise("/splash"),e.backButton.previousTitleText(!1).text("&emsp;&emsp;")}]),angular.module("app.AgentController",[]).controller("AgentController",["$scope","$stateParams","AgentFactory",function(n,t,e){e.getAgent(t.agentId).then(function(t){n.agent=t})["catch"](function(n){console.log("ERR on getAgent",n)})}]),angular.module("app.AgentFactory",[]).factory("AgentFactory",["$http",function(n){var t=function(){return n.get("http://localhost:8888/api/agents").then(function(n){return n.data})["catch"](function(n){console.log(n)})},e=function(t){return n.get("http://localhost:8888/api/agent/"+t).then(function(n){return n.data})["catch"](function(n){console.log(n)})};return{getAgents:t,getAgent:e}}]),angular.module("app.AgentsController",[]).controller("AgentsController",["$scope","AgentFactory",function(n,t){n.agents=[],t.getAgents().then(function(t){n.agents=t})["catch"](function(n){console.log("ERR on getDirectory",n)})}]),angular.module("app.ChecklistAddController",[]).controller("ChecklistAddController",["$scope","$stateParams","$localStorage","$ionicHistory","lodash","ChecklistFactory",function(n,t,e,r,o,i){n.checklistAdd={title:"",description:""};var a=e.getObject("checklist");n.category=t.category,n.submitChecklistAdd=function(n){if(n.$valid){var e={title:n.title,description:n.description},i=o.find(a,{category:t.category});i.list.push(e),console.log(e),r.goBack()}else console.log("not valid")}}]),angular.module("app.ChecklistDetailController",[]).controller("ChecklistDetailController",["$scope","$stateParams","ChecklistFactory",function(n,t,e){n.item=t.item,n.checkItem=e.checkItem}]),angular.module("app.ChecklistController",[]).controller("ChecklistController",["$scope","$ionicModal","$ionicListDelegate","ChecklistFactory",function(n,t,e,r){var o={"Preparing Home":"checklist-section-red","While Escrow":"checklist-section-blue","Expenses At Closing":"checklist-section-green","Expenses At Opening":"checklist-section-yellow"};n.checklist=r.getChecklist(),n.item={},n.moveItem=r.moveItem,n.onItemDelete=r.onItemDelete,n.addItem=function(t){r.addItem(t),n.modal.hide()},n.applySectionClass=function(n){return o[n]}}]),angular.module("app.ChecklistFactory",[]).factory("ChecklistFactory",["$http","$ionicListDelegate","$localStorage",function(n,t,e){var r=[{category:"Preparing Home",list:[{id:11,name:"Updating your home for sale",checked:!1},{id:12,name:"Clean, declutter & de-personalize",checked:!1},{id:13,name:"Dates for photos and open houses",checked:!1},{id:14,name:"Staging or not staging?",checked:!1}]},{category:"While Escrow",list:[{id:21,name:"Home Insurance",checked:!1},{id:22,name:"Utilities, newspapers, or magazines",checked:!1},{id:23,name:"House keys, remotes, gate keys, and ...",checked:!1},{id:24,name:"Appliance, manual, receipts, and",checked:!1},{id:25,name:"Final checks",checked:!1},{id:26,name:"Real estate agent commissions",checked:!1}]},{category:"Expenses At Closing",list:[{id:31,name:"Real estate agent commissions",checked:!1},{id:32,name:"Transfer tax",checked:!1},{id:33,name:"Closing costs or credit to the buyer",checked:!1},{id:34,name:"Capital gains tax",checked:!1},{id:35,name:"Home warranty for the buyer",checked:!1},{id:36,name:"Real estate agent commissions",checked:!1}]},{category:"Expenses At Opening",list:[{id:41,name:"Real estate agent commissions",checked:!1},{id:42,name:"Transfer tax",checked:!1},{id:43,name:"Closing costs or credit to the buyer",checked:!1},{id:44,name:"Capital gains tax",checked:!1},{id:45,name:"Home warranty for the buyer",checked:!1},{id:46,name:"Real estate agent commissions",checked:!1}]}];e.setObject("checklist",r);var o=e.getObject("checklist"),i=function(){return o},a=function(n){n.checked=!n.checked},u=function(n,t,e){o.splice(t,1),o.splice(e,0,n)},l=function(n){o.splice(o.indexOf(n),1)},c=function(n){o.push(n)};return{getChecklist:i,checkItem:a,moveItem:u,onItemDelete:l,addItem:c}}]),angular.module("app.CardController",[]).controller("CardController",["$scope","TDCardDelegate",function(n,t){}]),angular.module("app.CardsController",[]).controller("CardsController",["$scope","TDCardDelegate","$timeout",function(n,t,e){n.cardDestroyed=function(t){n.cards.splice(t,1)},n.refreshCards=function(){n.cards=null,e(function(){n.cards=Array.prototype.slice.call(n.cardsMaster,0)})},n.$on("getCards",function(t,e){n.cards=Array.prototype.slice.call(e,0),n.cardsMaster=Array.prototype.slice.call(e,0)}),n.$on("removeCard",function(t,e,r){n.cardsMaster.splice(n.cardsMaster.indexOf(r),1)})}]),angular.module("app.AuthFactory",[]).factory("AuthFactory",["$http",function(n){var t=function(t){return n.post("/login",t).then(function(n){return n.data})["catch"](function(n){console.log(n)})},e=function(){},r=function(){return n.post("/signup",data).then(function(n){return n.data})["catch"](function(n){console.log(n)})};return{login:t,logout:e,signup:r}}]),angular.module("app.LoginController",[]).controller("LoginController",["$scope","$ionicModal","$timeout","AuthFactory",function(n,t,e,r){t.fromTemplateUrl("js/auth/login.view.html",{scope:n}).then(function(t){n.modal=t}),n.closeLogin=function(){n.modal.hide()},n.login=function(){n.modal.show()},n.submitLogin=function(t){if(t.$valid){var e={username:t.username,password:t.password};r.login(e).then(function(t){console.log("submitLogin: success",t),n.closeLogin()})["catch"](function(t){console.log(t),n.closeLogin()})}else console.log("not valid")}}]),angular.module("app.LogoutController",[]).controller("LogoutController",["$scope","$ionicModal","$timeout",function(n,t,e){}]),angular.module("app.SignUpController",[]).controller("SignUpController",["$scope","$ionicModal","$timeout",function(n,t,e){}]),angular.module("app.InterviewController",[]).controller("InterviewController",["$scope","$stateParams",function(n,t){}]),angular.module("app.InterviewFactory",[]).factory("InterviewFactory",["$http",function(n){return{}}]),angular.module("app.ModalController",[]).controller("ModalController",["$scope","$stateParams",function(n,t){}]),angular.module("app.LocationController",[]).controller("LocationController",["$scope","$ionicModal","$timeout",function(n,t,e){n.location={}}]),angular.module("app.LocationDirective",[]).directive("locationSuggestion",["$ionicModal","LocationFactory",function(n,t){var e=function(e,r){e.search={},e.search.suggestions=[],e.search.query="",n.fromTemplateUrl("js/location/location.view.html",{scope:e,focusFirstInput:!0,animation:"slide-in-up"}).then(function(n){e.modal=n}),e.open=function(){e.modal.show()},e.close=function(){e.modal.hide()},e.$on("$destroy",function(){e.modal.remove()}),e.$on("modal.hide",function(){}),e.$on("modal.removed",function(){}),e.choosePlace=function(n){t.getDetails(n.place_id).then(function(n){e.location=n,e.close()})},r[0].addEventListener("focus",function(n){e.open()}),e.$watch("search.query",function(n){n&&t.searchAddress(n).then(function(n){e.search.error=null,e.search.suggestions=n},function(n){e.search.error="There was an error :( "+n})})};return{restrict:"A",scope:{location:"="},link:e}}]),angular.module("app.LocationFactory",[]).factory("LocationFactory",["$http","$q",function(n,t){var e=new google.maps.places.AutocompleteService,r=new google.maps.places.PlacesService(document.createElement("input")),o=function(n){var r=t.defer();return e.getPlacePredictions({input:n},function(n,t){t==google.maps.places.PlacesServiceStatus.OK?(console.log(t),r.resolve(n)):r.reject(t)}),r.promise},i=function(n){var e=t.defer();return r.getDetails({placeId:n},function(n){e.resolve(n)}),e.promise};return{searchAddress:o,getDetails:i}}]),angular.module("app.CommissionDirective",[]).directive("commissionDirective",["$timeout",function(n){var t=function(t,e,r){var o=e.children(".commission-flex"),i=o.children("commission-bar"),a=e.children()[0],u=function(n,t){return Math.floor(Math.random()*(t-n+1))+n};angular.forEach(i,function(t,e){n(function(){angular.element(t).addClass("commission-bar-animate-up").css({height:u(5,80)+"%"})},100*u(0,i.length))}),n(function(){angular.element(a).addClass("commission-dot-animate-wide")},100)};return{restrict:"A",templateUrl:"js/directives/commission.view.html",scope:{},replace:!0,link:t}}]),angular.module("app.NoScrollDirective",[]).directive("noScrollDirective",["$document",function(n){var t=function(t,e,r){n.on("touchmove",function(n){n.preventDefault()})};return{restrict:"A",link:t}}]),angular.module("app.ProposalFeesDirective",["ionic","d3Module"]).directive("proposalFeesDirective",["$ionicGesture","$window","d3",function(n,t,e){return{restrict:"EA",scope:{},link:function(n,r,o){window.onresize=function(){n.$apply()},n.data=[{label:"Greg",value:53245},{label:"Ari",value:28479},{label:"Q",value:19697},{label:"Loser",value:24037}],n.$watch(function(){return angular.element(t)[0].innerWidth},function(){n.render(n.data)}),n.render=function(t){function i(n){return n.startAngle+(n.endAngle-n.startAngle)/2}if(t){var a=(parseInt(o.margin)||20,parseInt(o.barHeight)||20,parseInt(o.barPadding)||5,window.innerWidth),u=300,l=Math.min(a,u)/2,c=e.select(r[0]).append("svg").attr("width","100%").attr("height",300);c.append("g").attr("class","slices").attr("transform","translate("+a/2+","+u/2+")"),c.append("g").attr("class","labels").attr("transform","translate("+a/2+","+u/2+")"),c.append("g").attr("class","lines").attr("transform","translate("+a/2+","+u/2+")");var s=e.scale.category20(),f=function(n){return n.data.label},h=e.layout.pie().value(function(n){return n.value}).sort(null),g=e.svg.arc().outerRadius(.8*l).innerRadius(.4*l),p=e.svg.arc().innerRadius(.9*l).outerRadius(.9*l),d=(c.select(".slices").selectAll("path.slice").data(h(n.data),f).enter().append("path").attr("fill",function(n,t){return s(t)}).attr("class","slices").transition().ease("exp").duration(500).attrTween("d",function(n){var t=e.interpolate(n.startAngle+.1,n.endAngle);return function(e){return n.endAngle=t(e),g(n)}}),c.select(".labels").selectAll("text").data(h(n.data),f).enter().append("text").attr("dy",".35em").attr("fill","#000000").text(function(n){return console.log("in"),n.data.label}));d.transition().duration(1e3).attrTween("transform",function(n){this._current=this._current||n;var t=e.interpolate(this._current,n);return this._current=t(0),function(n){var e=t(n),r=p.centroid(e);return r[0]=l*(i(e)<Math.PI?1:-1),"translate("+r+")"}}).styleTween("text-anchor",function(n){this._current=this._current||n;var t=e.interpolate(this._current,n);return this._current=t(0),function(n){var e=t(n);return i(e)<Math.PI?"start":"end"}});var m=c.select(".lines").selectAll("polyline").data(h(n.data),f).enter().append("polyline").attr("opacity","0.2").attr("stroke","black").attr("stroke-width","2px").attr("fill","none");m.transition().duration(1e3).attrTween("points",function(n){this._current=this._current||n;var t=e.interpolate(this._current,n);return this._current=t(0),function(n){var e=t(n),r=p.centroid(e);return r[0]=.95*l*(i(e)<Math.PI?1:-1),[g.centroid(e),p.centroid(e),r]}})}}}}}]),angular.module("app.ReviewImgDirective",[]).directive("reviewImgDirective",function(){var n=function(n){var t=function(n){return n.length>0},e=function(n,t){return Math.floor(Math.random()*(t-n+1))+n},r=function(n){return n.split(" ").map(function(n){return n.charAt(0).toUpperCase()}).slice(0,2).join("")},o=function(){var n=["red","blue","green"];return n[e(0,2)]};n.isImage=t,n.initials=r(n.name),n.randomColorClass=o};return n.$inject=["$scope"],{restrict:"E",templateUrl:"js/directives/review-img.view.html",scope:{image:"=",name:"="},replace:!0,controller:n}}),angular.module("app.StarDirective",[]).directive("starDirective",["$timeout",function(n){var t=function(n){var t=function(n){return new Array(Math.round(n))};n.parseStars=t};return t.$inject=["$scope"],{restrict:"E",templateUrl:"js/directives/star.view.html",scope:{rating:"="},replace:!0,controller:t}}]),angular.module("d3Module",[]).factory("d3",[function(){function n(n){return n&&(n.ownerDocument||n.document||n).documentElement}function t(n){return n&&(n.ownerDocument&&n.ownerDocument.defaultView||n.document&&n||n.defaultView)}function e(n,t){return t>n?-1:n>t?1:n>=t?0:0/0}function r(n){return null===n?0/0:+n}function o(n){return!isNaN(n)}function i(n){return{left:function(t,e,r,o){for(arguments.length<3&&(r=0),arguments.length<4&&(o=t.length);o>r;){var i=r+o>>>1;n(t[i],e)<0?r=i+1:o=i}return r},right:function(t,e,r,o){for(arguments.length<3&&(r=0),arguments.length<4&&(o=t.length);o>r;){var i=r+o>>>1;n(t[i],e)>0?o=i:r=i+1}return r}}}function a(n){return n.length}function u(n){for(var t=1;n*t%1;)t*=10;return t}function l(n,t){for(var e in t)Object.defineProperty(n.prototype,e,{value:t[e],enumerable:!1})}function c(){this._=Object.create(null)}function s(n){return(n+="")===da||n[0]===ma?ma+n:n}function f(n){return(n+="")[0]===ma?n.slice(1):n}function h(n){return s(n)in this._}function g(n){return(n=s(n))in this._&&delete this._[n]}function p(){var n=[];for(var t in this._)n.push(f(t));return n}function d(){var n=0;for(var t in this._)++n;return n}function m(){for(var n in this._)return!1;return!0}function v(){this._=Object.create(null)}function y(n){return n}function M(n,t,e){return function(){var r=e.apply(t,arguments);return r===t?n:r}}function x(n,t){if(t in n)return t;t=t.charAt(0).toUpperCase()+t.slice(1);for(var e=0,r=va.length;r>e;++e){var o=va[e]+t;if(o in n)return o}}function w(){}function b(){}function _(n){function t(){for(var t,r=e,o=-1,i=r.length;++o<i;)(t=r[o].on)&&t.apply(this,arguments);return n}var e=[],r=new c;return t.on=function(t,o){var i,a=r.get(t);return arguments.length<2?a&&a.on:(a&&(a.on=null,e=e.slice(0,i=e.indexOf(a)).concat(e.slice(i+1)),r.remove(t)),o&&e.push(r.set(t,{on:o})),n)},t}function k(){ea.event.preventDefault()}function C(){for(var n,t=ea.event;n=t.sourceEvent;)t=n;return t}function S(n){for(var t=new b,e=0,r=arguments.length;++e<r;)t[arguments[e]]=_(t);return t.of=function(e,r){return function(o){try{var i=o.sourceEvent=ea.event;o.target=n,ea.event=o,t[o.type].apply(e,r)}finally{ea.event=i}}},t}function A(n){return Ma(n,_a),n}function E(n){return"function"==typeof n?n:function(){return xa(n,this)}}function q(n){return"function"==typeof n?n:function(){return wa(n,this)}}function N(n,t){function e(){this.removeAttribute(n)}function r(){this.removeAttributeNS(n.space,n.local)}function o(){this.setAttribute(n,t)}function i(){this.setAttributeNS(n.space,n.local,t)}function a(){var e=t.apply(this,arguments);null==e?this.removeAttribute(n):this.setAttribute(n,e)}function u(){var e=t.apply(this,arguments);null==e?this.removeAttributeNS(n.space,n.local):this.setAttributeNS(n.space,n.local,e)}return n=ea.ns.qualify(n),null==t?n.local?r:e:"function"==typeof t?n.local?u:a:n.local?i:o}function L(n){return n.trim().replace(/\s+/g," ")}function D(n){return new RegExp("(?:^|\\s+)"+ea.requote(n)+"(?:\\s+|$)","g")}function P(n){return(n+"").trim().split(/^|\s+/)}function T(n,t){function e(){for(var e=-1;++e<o;)n[e](this,t)}function r(){for(var e=-1,r=t.apply(this,arguments);++e<o;)n[e](this,r)}n=P(n).map(z);var o=n.length;return"function"==typeof t?r:e}function z(n){var t=D(n);return function(e,r){if(o=e.classList)return r?o.add(n):o.remove(n);var o=e.getAttribute("class")||"";r?(t.lastIndex=0,t.test(o)||e.setAttribute("class",L(o+" "+n))):e.setAttribute("class",L(o.replace(t," ")))}}function R(n,t,e){function r(){this.style.removeProperty(n)}function o(){this.style.setProperty(n,t,e)}function i(){var r=t.apply(this,arguments);null==r?this.style.removeProperty(n):this.style.setProperty(n,r,e)}return null==t?r:"function"==typeof t?i:o}function $(n,t){function e(){delete this[n]}function r(){this[n]=t}function o(){var e=t.apply(this,arguments);null==e?delete this[n]:this[n]=e}return null==t?e:"function"==typeof t?o:r}function U(n){function t(){var t=this.ownerDocument,e=this.namespaceURI;return e?t.createElementNS(e,n):t.createElement(n)}function e(){return this.ownerDocument.createElementNS(n.space,n.local)}return"function"==typeof n?n:(n=ea.ns.qualify(n)).local?e:t}function j(){var n=this.parentNode;n&&n.removeChild(this)}function I(n){return{__data__:n}}function F(n){return function(){return ba(this,n)}}function O(n){return arguments.length||(n=e),function(t,e){return t&&e?n(t.__data__,e.__data__):!t-!e}}function H(n,t){for(var e=0,r=n.length;r>e;e++)for(var o,i=n[e],a=0,u=i.length;u>a;a++)(o=i[a])&&t(o,a,e);return n}function Y(n){return Ma(n,Ca),n}function B(n){var t,e;return function(r,o,i){var a,u=n[i].update,l=u.length;for(i!=e&&(e=i,t=0),o>=t&&(t=o+1);!(a=u[t])&&++t<l;);return a}}function Z(n,t,e){function r(){var t=this[a];t&&(this.removeEventListener(n,t,t.$),delete this[a])}function o(){var o=l(t,oa(arguments));r.call(this),this.addEventListener(n,this[a]=o,o.$=e),o._=t}function i(){var t,e=new RegExp("^__on([^.]+)"+ea.requote(n)+"$");for(var r in this)if(t=r.match(e)){var o=this[r];this.removeEventListener(t[1],o,o.$),delete this[r]}}var a="__on"+n,u=n.indexOf("."),l=V;u>0&&(n=n.slice(0,u));var c=Sa.get(n);return c&&(n=c,l=X),u?t?o:r:t?w:i}function V(n,t){return function(e){var r=ea.event;ea.event=e,t[0]=this.__data__;try{n.apply(this,t)}finally{ea.event=r}}}function X(n,t){var e=V(n,t);return function(n){var t=this,r=n.relatedTarget;r&&(r===t||8&r.compareDocumentPosition(t))||e.call(t,n)}}function W(e){var r=".dragsuppress-"+ ++Ea,o="click"+r,i=ea.select(t(e)).on("touchmove"+r,k).on("dragstart"+r,k).on("selectstart"+r,k);if(null==Aa&&(Aa="onselectstart"in e?!1:x(e.style,"userSelect")),Aa){var a=n(e).style,u=a[Aa];a[Aa]="none"}return function(n){if(i.on(r,null),Aa&&(a[Aa]=u),n){var t=function(){i.on(o,null)};i.on(o,function(){k(),t()},!0),setTimeout(t,0)}}}function G(n,e){e.changedTouches&&(e=e.changedTouches[0]);var r=n.ownerSVGElement||n;if(r.createSVGPoint){var o=r.createSVGPoint();if(0>qa){var i=t(n);if(i.scrollX||i.scrollY){r=ea.select("body").append("svg").style({position:"absolute",top:0,left:0,margin:0,padding:0,border:"none"},"important");var a=r[0][0].getScreenCTM();qa=!(a.f||a.e),r.remove()}}return qa?(o.x=e.pageX,o.y=e.pageY):(o.x=e.clientX,o.y=e.clientY),o=o.matrixTransform(n.getScreenCTM().inverse()),[o.x,o.y]}var u=n.getBoundingClientRect();return[e.clientX-u.left-n.clientLeft,e.clientY-u.top-n.clientTop]}function J(){return ea.event.changedTouches[0].identifier}function K(n){return n>0?1:0>n?-1:0}function Q(n,t,e){return(t[0]-n[0])*(e[1]-n[1])-(t[1]-n[1])*(e[0]-n[0])}function nn(n){return n>1?0:-1>n?Da:Math.acos(n)}function tn(n){return n>1?za:-1>n?-za:Math.asin(n)}function en(n){return((n=Math.exp(n))-1/n)/2}function rn(n){return((n=Math.exp(n))+1/n)/2}function on(n){return((n=Math.exp(2*n))-1)/(n+1)}function an(n){return(n=Math.sin(n/2))*n}function un(){}function ln(n,t,e){return this instanceof ln?(this.h=+n,this.s=+t,void(this.l=+e)):arguments.length<2?n instanceof ln?new ln(n.h,n.s,n.l):bn(""+n,_n,ln):new ln(n,t,e)}function cn(n,t,e){function r(n){return n>360?n-=360:0>n&&(n+=360),60>n?i+(a-i)*n/60:180>n?a:240>n?i+(a-i)*(240-n)/60:i}function o(n){return Math.round(255*r(n))}var i,a;return n=isNaN(n)?0:(n%=360)<0?n+360:n,t=isNaN(t)?0:0>t?0:t>1?1:t,e=0>e?0:e>1?1:e,a=.5>=e?e*(1+t):e+t-e*t,i=2*e-a,new yn(o(n+120),o(n),o(n-120))}function sn(n,t,e){return this instanceof sn?(this.h=+n,this.c=+t,void(this.l=+e)):arguments.length<2?n instanceof sn?new sn(n.h,n.c,n.l):n instanceof hn?pn(n.l,n.a,n.b):pn((n=kn((n=ea.rgb(n)).r,n.g,n.b)).l,n.a,n.b):new sn(n,t,e)}function fn(n,t,e){return isNaN(n)&&(n=0),isNaN(t)&&(t=0),new hn(e,Math.cos(n*=Ra)*t,Math.sin(n)*t)}function hn(n,t,e){return this instanceof hn?(this.l=+n,this.a=+t,void(this.b=+e)):arguments.length<2?n instanceof hn?new hn(n.l,n.a,n.b):n instanceof sn?fn(n.h,n.c,n.l):kn((n=yn(n)).r,n.g,n.b):new hn(n,t,e)}function gn(n,t,e){var r=(n+16)/116,o=r+t/500,i=r-e/200;return o=dn(o)*Va,r=dn(r)*Xa,i=dn(i)*Wa,new yn(vn(3.2404542*o-1.5371385*r-.4985314*i),vn(-.969266*o+1.8760108*r+.041556*i),vn(.0556434*o-.2040259*r+1.0572252*i))}function pn(n,t,e){return n>0?new sn(Math.atan2(e,t)*$a,Math.sqrt(t*t+e*e),n):new sn(0/0,0/0,n)}function dn(n){return n>.206893034?n*n*n:(n-4/29)/7.787037}function mn(n){return n>.008856?Math.pow(n,1/3):7.787037*n+4/29}function vn(n){return Math.round(255*(.00304>=n?12.92*n:1.055*Math.pow(n,1/2.4)-.055))}function yn(n,t,e){return this instanceof yn?(this.r=~~n,this.g=~~t,void(this.b=~~e)):arguments.length<2?n instanceof yn?new yn(n.r,n.g,n.b):bn(""+n,yn,cn):new yn(n,t,e)}function Mn(n){return new yn(n>>16,n>>8&255,255&n)}function xn(n){return Mn(n)+""}function wn(n){return 16>n?"0"+Math.max(0,n).toString(16):Math.min(255,n).toString(16)}function bn(n,t,e){var r,o,i,a=0,u=0,l=0;if(r=/([a-z]+)\((.*)\)/i.exec(n))switch(o=r[2].split(","),r[1]){case"hsl":return e(parseFloat(o[0]),parseFloat(o[1])/100,parseFloat(o[2])/100);case"rgb":return t(Sn(o[0]),Sn(o[1]),Sn(o[2]))}return(i=Ka.get(n.toLowerCase()))?t(i.r,i.g,i.b):(null==n||"#"!==n.charAt(0)||isNaN(i=parseInt(n.slice(1),16))||(4===n.length?(a=(3840&i)>>4,a=a>>4|a,u=240&i,u=u>>4|u,l=15&i,l=l<<4|l):7===n.length&&(a=(16711680&i)>>16,u=(65280&i)>>8,l=255&i)),t(a,u,l))}function _n(n,t,e){var r,o,i=Math.min(n/=255,t/=255,e/=255),a=Math.max(n,t,e),u=a-i,l=(a+i)/2;return u?(o=.5>l?u/(a+i):u/(2-a-i),r=n==a?(t-e)/u+(e>t?6:0):t==a?(e-n)/u+2:(n-t)/u+4,r*=60):(r=0/0,o=l>0&&1>l?0:r),new ln(r,o,l)}function kn(n,t,e){n=Cn(n),t=Cn(t),e=Cn(e);var r=mn((.4124564*n+.3575761*t+.1804375*e)/Va),o=mn((.2126729*n+.7151522*t+.072175*e)/Xa),i=mn((.0193339*n+.119192*t+.9503041*e)/Wa);return hn(116*o-16,500*(r-o),200*(o-i))}function Cn(n){return(n/=255)<=.04045?n/12.92:Math.pow((n+.055)/1.055,2.4)}function Sn(n){var t=parseFloat(n);return"%"===n.charAt(n.length-1)?Math.round(2.55*t):t}function An(n){return"function"==typeof n?n:function(){return n}}function En(n){return function(t,e,r){return 2===arguments.length&&"function"==typeof e&&(r=e,e=null),qn(t,e,n,r)}}function qn(n,t,e,r){function o(){var n,t=l.status;if(!t&&Ln(l)||t>=200&&300>t||304===t){try{n=e.call(i,l)}catch(r){return void a.error.call(i,r)}a.load.call(i,n)}else a.error.call(i,l)}var i={},a=ea.dispatch("beforesend","progress","load","error"),u={},l=new XMLHttpRequest,c=null;return!this.XDomainRequest||"withCredentials"in l||!/^(http(s)?:)?\/\//.test(n)||(l=new XDomainRequest),"onload"in l?l.onload=l.onerror=o:l.onreadystatechange=function(){l.readyState>3&&o()},l.onprogress=function(n){var t=ea.event;ea.event=n;try{a.progress.call(i,l)}finally{ea.event=t}},i.header=function(n,t){return n=(n+"").toLowerCase(),arguments.length<2?u[n]:(null==t?delete u[n]:u[n]=t+"",i)},i.mimeType=function(n){return arguments.length?(t=null==n?null:n+"",i):t},i.responseType=function(n){return arguments.length?(c=n,i):c},i.response=function(n){return e=n,i},["get","post"].forEach(function(n){i[n]=function(){return i.send.apply(i,[n].concat(oa(arguments)))}}),i.send=function(e,r,o){if(2===arguments.length&&"function"==typeof r&&(o=r,r=null),l.open(e,n,!0),null==t||"accept"in u||(u.accept=t+",*/*"),l.setRequestHeader)for(var s in u)l.setRequestHeader(s,u[s]);return null!=t&&l.overrideMimeType&&l.overrideMimeType(t),null!=c&&(l.responseType=c),null!=o&&i.on("error",o).on("load",function(n){o(null,n)}),a.beforesend.call(i,l),l.send(null==r?null:r),i},i.abort=function(){return l.abort(),i},ea.rebind(i,a,"on"),null==r?i:i.get(Nn(r))}function Nn(n){return 1===n.length?function(t,e){n(null==t?e:null)}:n}function Ln(n){var t=n.responseType;return t&&"text"!==t?n.response:n.responseText}function Dn(){var n=Pn(),t=Tn()-n;t>24?(isFinite(t)&&(clearTimeout(eu),eu=setTimeout(Dn,t)),tu=0):(tu=1,ou(Dn))}function Pn(){var n=Date.now();for(ru=Qa;ru;)n>=ru.t&&(ru.f=ru.c(n-ru.t)),ru=ru.n;return n}function Tn(){for(var n,t=Qa,e=1/0;t;)t.f?t=n?n.n=t.n:Qa=t.n:(t.t<e&&(e=t.t),t=(n=t).n);return nu=n,e}function zn(n,t){return t-(n?Math.ceil(Math.log(n)/Math.LN10):1)}function Rn(n,t){var e=Math.pow(10,3*pa(8-t));return{scale:t>8?function(n){return n/e}:function(n){return n*e},symbol:n}}function $n(n){var t=n.decimal,e=n.thousands,r=n.grouping,o=n.currency,i=r&&e?function(n,t){for(var o=n.length,i=[],a=0,u=r[0],l=0;o>0&&u>0&&(l+u+1>t&&(u=Math.max(1,t-l)),i.push(n.substring(o-=u,o+u)),!((l+=u+1)>t));)u=r[a=(a+1)%r.length];return i.reverse().join(e)}:y;return function(n){var e=au.exec(n),r=e[1]||" ",a=e[2]||">",u=e[3]||"-",l=e[4]||"",c=e[5],s=+e[6],f=e[7],h=e[8],g=e[9],p=1,d="",m="",v=!1,y=!0;

switch(h&&(h=+h.substring(1)),(c||"0"===r&&"="===a)&&(c=r="0",a="="),g){case"n":f=!0,g="g";break;case"%":p=100,m="%",g="f";break;case"p":p=100,m="%",g="r";break;case"b":case"o":case"x":case"X":"#"===l&&(d="0"+g.toLowerCase());case"c":y=!1;case"d":v=!0,h=0;break;case"s":p=-1,g="r"}"$"===l&&(d=o[0],m=o[1]),"r"!=g||h||(g="g"),null!=h&&("g"==g?h=Math.max(1,Math.min(21,h)):("e"==g||"f"==g)&&(h=Math.max(0,Math.min(20,h)))),g=uu.get(g)||Un;var M=c&&f;return function(n){var e=m;if(v&&n%1)return"";var o=0>n||0===n&&0>1/n?(n=-n,"-"):"-"===u?"":u;if(0>p){var l=ea.formatPrefix(n,h);n=l.scale(n),e=l.symbol+m}else n*=p;n=g(n,h);var x,w,b=n.lastIndexOf(".");if(0>b){var _=y?n.lastIndexOf("e"):-1;0>_?(x=n,w=""):(x=n.substring(0,_),w=n.substring(_))}else x=n.substring(0,b),w=t+n.substring(b+1);!c&&f&&(x=i(x,1/0));var k=d.length+x.length+w.length+(M?0:o.length),C=s>k?new Array(k=s-k+1).join(r):"";return M&&(x=i(C+x,C.length?s-w.length:1/0)),o+=d,n=x+w,("<"===a?o+n+C:">"===a?C+o+n:"^"===a?C.substring(0,k>>=1)+o+n+C.substring(k):o+(M?n:C+n))+e}}}function Un(n){return n+""}function jn(){this._=new Date(arguments.length>1?Date.UTC.apply(this,arguments):arguments[0])}function In(n,t,e){function r(t){var e=n(t),r=i(e,1);return r-t>t-e?e:r}function o(e){return t(e=n(new cu(e-1)),1),e}function i(n,e){return t(n=new cu(+n),e),n}function a(n,r,i){var a=o(n),u=[];if(i>1)for(;r>a;)e(a)%i||u.push(new Date(+a)),t(a,1);else for(;r>a;)u.push(new Date(+a)),t(a,1);return u}function u(n,t,e){try{cu=jn;var r=new jn;return r._=n,a(r,t,e)}finally{cu=Date}}n.floor=n,n.round=r,n.ceil=o,n.offset=i,n.range=a;var l=n.utc=Fn(n);return l.floor=l,l.round=Fn(r),l.ceil=Fn(o),l.offset=Fn(i),l.range=u,n}function Fn(n){return function(t,e){try{cu=jn;var r=new jn;return r._=t,n(r,e)._}finally{cu=Date}}}function On(n){function t(n){function t(t){for(var e,o,i,a=[],u=-1,l=0;++u<r;)37===n.charCodeAt(u)&&(a.push(n.slice(l,u)),null!=(o=fu[e=n.charAt(++u)])&&(e=n.charAt(++u)),(i=E[e])&&(e=i(t,null==o?"e"===e?" ":"0":o)),a.push(e),l=u+1);return a.push(n.slice(l,u)),a.join("")}var r=n.length;return t.parse=function(t){var r={y:1900,m:0,d:1,H:0,M:0,S:0,L:0,Z:null},o=e(r,n,t,0);if(o!=t.length)return null;"p"in r&&(r.H=r.H%12+12*r.p);var i=null!=r.Z&&cu!==jn,a=new(i?jn:cu);return"j"in r?a.setFullYear(r.y,0,r.j):"w"in r&&("W"in r||"U"in r)?(a.setFullYear(r.y,0,1),a.setFullYear(r.y,0,"W"in r?(r.w+6)%7+7*r.W-(a.getDay()+5)%7:r.w+7*r.U-(a.getDay()+6)%7)):a.setFullYear(r.y,r.m,r.d),a.setHours(r.H+(r.Z/100|0),r.M+r.Z%100,r.S,r.L),i?a._:a},t.toString=function(){return n},t}function e(n,t,e,r){for(var o,i,a,u=0,l=t.length,c=e.length;l>u;){if(r>=c)return-1;if(o=t.charCodeAt(u++),37===o){if(a=t.charAt(u++),i=q[a in fu?t.charAt(u++):a],!i||(r=i(n,e,r))<0)return-1}else if(o!=e.charCodeAt(r++))return-1}return r}function r(n,t,e){b.lastIndex=0;var r=b.exec(t.slice(e));return r?(n.w=_.get(r[0].toLowerCase()),e+r[0].length):-1}function o(n,t,e){x.lastIndex=0;var r=x.exec(t.slice(e));return r?(n.w=w.get(r[0].toLowerCase()),e+r[0].length):-1}function i(n,t,e){S.lastIndex=0;var r=S.exec(t.slice(e));return r?(n.m=A.get(r[0].toLowerCase()),e+r[0].length):-1}function a(n,t,e){k.lastIndex=0;var r=k.exec(t.slice(e));return r?(n.m=C.get(r[0].toLowerCase()),e+r[0].length):-1}function u(n,t,r){return e(n,E.c.toString(),t,r)}function l(n,t,r){return e(n,E.x.toString(),t,r)}function c(n,t,r){return e(n,E.X.toString(),t,r)}function s(n,t,e){var r=M.get(t.slice(e,e+=2).toLowerCase());return null==r?-1:(n.p=r,e)}var f=n.dateTime,h=n.date,g=n.time,p=n.periods,d=n.days,m=n.shortDays,v=n.months,y=n.shortMonths;t.utc=function(n){function e(n){try{cu=jn;var t=new cu;return t._=n,r(t)}finally{cu=Date}}var r=t(n);return e.parse=function(n){try{cu=jn;var t=r.parse(n);return t&&t._}finally{cu=Date}},e.toString=r.toString,e},t.multi=t.utc.multi=lt;var M=ea.map(),x=Yn(d),w=Bn(d),b=Yn(m),_=Bn(m),k=Yn(v),C=Bn(v),S=Yn(y),A=Bn(y);p.forEach(function(n,t){M.set(n.toLowerCase(),t)});var E={a:function(n){return m[n.getDay()]},A:function(n){return d[n.getDay()]},b:function(n){return y[n.getMonth()]},B:function(n){return v[n.getMonth()]},c:t(f),d:function(n,t){return Hn(n.getDate(),t,2)},e:function(n,t){return Hn(n.getDate(),t,2)},H:function(n,t){return Hn(n.getHours(),t,2)},I:function(n,t){return Hn(n.getHours()%12||12,t,2)},j:function(n,t){return Hn(1+lu.dayOfYear(n),t,3)},L:function(n,t){return Hn(n.getMilliseconds(),t,3)},m:function(n,t){return Hn(n.getMonth()+1,t,2)},M:function(n,t){return Hn(n.getMinutes(),t,2)},p:function(n){return p[+(n.getHours()>=12)]},S:function(n,t){return Hn(n.getSeconds(),t,2)},U:function(n,t){return Hn(lu.sundayOfYear(n),t,2)},w:function(n){return n.getDay()},W:function(n,t){return Hn(lu.mondayOfYear(n),t,2)},x:t(h),X:t(g),y:function(n,t){return Hn(n.getFullYear()%100,t,2)},Y:function(n,t){return Hn(n.getFullYear()%1e4,t,4)},Z:at,"%":function(){return"%"}},q={a:r,A:o,b:i,B:a,c:u,d:nt,e:nt,H:et,I:et,j:tt,L:it,m:Qn,M:rt,p:s,S:ot,U:Vn,w:Zn,W:Xn,x:l,X:c,y:Gn,Y:Wn,Z:Jn,"%":ut};return t}function Hn(n,t,e){var r=0>n?"-":"",o=(r?-n:n)+"",i=o.length;return r+(e>i?new Array(e-i+1).join(t)+o:o)}function Yn(n){return new RegExp("^(?:"+n.map(ea.requote).join("|")+")","i")}function Bn(n){for(var t=new c,e=-1,r=n.length;++e<r;)t.set(n[e].toLowerCase(),e);return t}function Zn(n,t,e){hu.lastIndex=0;var r=hu.exec(t.slice(e,e+1));return r?(n.w=+r[0],e+r[0].length):-1}function Vn(n,t,e){hu.lastIndex=0;var r=hu.exec(t.slice(e));return r?(n.U=+r[0],e+r[0].length):-1}function Xn(n,t,e){hu.lastIndex=0;var r=hu.exec(t.slice(e));return r?(n.W=+r[0],e+r[0].length):-1}function Wn(n,t,e){hu.lastIndex=0;var r=hu.exec(t.slice(e,e+4));return r?(n.y=+r[0],e+r[0].length):-1}function Gn(n,t,e){hu.lastIndex=0;var r=hu.exec(t.slice(e,e+2));return r?(n.y=Kn(+r[0]),e+r[0].length):-1}function Jn(n,t,e){return/^[+-]\d{4}$/.test(t=t.slice(e,e+5))?(n.Z=-t,e+5):-1}function Kn(n){return n+(n>68?1900:2e3)}function Qn(n,t,e){hu.lastIndex=0;var r=hu.exec(t.slice(e,e+2));return r?(n.m=r[0]-1,e+r[0].length):-1}function nt(n,t,e){hu.lastIndex=0;var r=hu.exec(t.slice(e,e+2));return r?(n.d=+r[0],e+r[0].length):-1}function tt(n,t,e){hu.lastIndex=0;var r=hu.exec(t.slice(e,e+3));return r?(n.j=+r[0],e+r[0].length):-1}function et(n,t,e){hu.lastIndex=0;var r=hu.exec(t.slice(e,e+2));return r?(n.H=+r[0],e+r[0].length):-1}function rt(n,t,e){hu.lastIndex=0;var r=hu.exec(t.slice(e,e+2));return r?(n.M=+r[0],e+r[0].length):-1}function ot(n,t,e){hu.lastIndex=0;var r=hu.exec(t.slice(e,e+2));return r?(n.S=+r[0],e+r[0].length):-1}function it(n,t,e){hu.lastIndex=0;var r=hu.exec(t.slice(e,e+3));return r?(n.L=+r[0],e+r[0].length):-1}function at(n){var t=n.getTimezoneOffset(),e=t>0?"-":"+",r=pa(t)/60|0,o=pa(t)%60;return e+Hn(r,"0",2)+Hn(o,"0",2)}function ut(n,t,e){gu.lastIndex=0;var r=gu.exec(t.slice(e,e+1));return r?e+r[0].length:-1}function lt(n){for(var t=n.length,e=-1;++e<t;)n[e][0]=this(n[e][0]);return function(t){for(var e=0,r=n[e];!r[1](t);)r=n[++e];return r[0](t)}}function ct(){}function st(n,t,e){var r=e.s=n+t,o=r-n,i=r-o;e.t=n-i+(t-o)}function ft(n,t){n&&vu.hasOwnProperty(n.type)&&vu[n.type](n,t)}function ht(n,t,e){var r,o=-1,i=n.length-e;for(t.lineStart();++o<i;)r=n[o],t.point(r[0],r[1],r[2]);t.lineEnd()}function gt(n,t){var e=-1,r=n.length;for(t.polygonStart();++e<r;)ht(n[e],t,1);t.polygonEnd()}function pt(){function n(n,t){n*=Ra,t=t*Ra/2+Da/4;var e=n-r,a=e>=0?1:-1,u=a*e,l=Math.cos(t),c=Math.sin(t),s=i*c,f=o*l+s*Math.cos(u),h=s*a*Math.sin(u);Mu.add(Math.atan2(h,f)),r=n,o=l,i=c}var t,e,r,o,i;xu.point=function(a,u){xu.point=n,r=(t=a)*Ra,o=Math.cos(u=(e=u)*Ra/2+Da/4),i=Math.sin(u)},xu.lineEnd=function(){n(t,e)}}function dt(n){var t=n[0],e=n[1],r=Math.cos(e);return[r*Math.cos(t),r*Math.sin(t),Math.sin(e)]}function mt(n,t){return n[0]*t[0]+n[1]*t[1]+n[2]*t[2]}function vt(n,t){return[n[1]*t[2]-n[2]*t[1],n[2]*t[0]-n[0]*t[2],n[0]*t[1]-n[1]*t[0]]}function yt(n,t){n[0]+=t[0],n[1]+=t[1],n[2]+=t[2]}function Mt(n,t){return[n[0]*t,n[1]*t,n[2]*t]}function xt(n){var t=Math.sqrt(n[0]*n[0]+n[1]*n[1]+n[2]*n[2]);n[0]/=t,n[1]/=t,n[2]/=t}function wt(n){return[Math.atan2(n[1],n[0]),tn(n[2])]}function bt(n,t){return pa(n[0]-t[0])<Na&&pa(n[1]-t[1])<Na}function _t(n,t){n*=Ra;var e=Math.cos(t*=Ra);kt(e*Math.cos(n),e*Math.sin(n),Math.sin(t))}function kt(n,t,e){++wu,_u+=(n-_u)/wu,ku+=(t-ku)/wu,Cu+=(e-Cu)/wu}function Ct(){function n(n,o){n*=Ra;var i=Math.cos(o*=Ra),a=i*Math.cos(n),u=i*Math.sin(n),l=Math.sin(o),c=Math.atan2(Math.sqrt((c=e*l-r*u)*c+(c=r*a-t*l)*c+(c=t*u-e*a)*c),t*a+e*u+r*l);bu+=c,Su+=c*(t+(t=a)),Au+=c*(e+(e=u)),Eu+=c*(r+(r=l)),kt(t,e,r)}var t,e,r;Du.point=function(o,i){o*=Ra;var a=Math.cos(i*=Ra);t=a*Math.cos(o),e=a*Math.sin(o),r=Math.sin(i),Du.point=n,kt(t,e,r)}}function St(){Du.point=_t}function At(){function n(n,t){n*=Ra;var e=Math.cos(t*=Ra),a=e*Math.cos(n),u=e*Math.sin(n),l=Math.sin(t),c=o*l-i*u,s=i*a-r*l,f=r*u-o*a,h=Math.sqrt(c*c+s*s+f*f),g=r*a+o*u+i*l,p=h&&-nn(g)/h,d=Math.atan2(h,g);qu+=p*c,Nu+=p*s,Lu+=p*f,bu+=d,Su+=d*(r+(r=a)),Au+=d*(o+(o=u)),Eu+=d*(i+(i=l)),kt(r,o,i)}var t,e,r,o,i;Du.point=function(a,u){t=a,e=u,Du.point=n,a*=Ra;var l=Math.cos(u*=Ra);r=l*Math.cos(a),o=l*Math.sin(a),i=Math.sin(u),kt(r,o,i)},Du.lineEnd=function(){n(t,e),Du.lineEnd=St,Du.point=_t}}function Et(n,t){function e(e,r){return e=n(e,r),t(e[0],e[1])}return n.invert&&t.invert&&(e.invert=function(e,r){return e=t.invert(e,r),e&&n.invert(e[0],e[1])}),e}function qt(){return!0}function Nt(n,t,e,r,o){var i=[],a=[];if(n.forEach(function(n){if(!((t=n.length-1)<=0)){var t,e=n[0],r=n[t];if(bt(e,r)){o.lineStart();for(var u=0;t>u;++u)o.point((e=n[u])[0],e[1]);return void o.lineEnd()}var l=new Dt(e,n,null,!0),c=new Dt(e,null,l,!1);l.o=c,i.push(l),a.push(c),l=new Dt(r,n,null,!1),c=new Dt(r,null,l,!0),l.o=c,i.push(l),a.push(c)}}),a.sort(t),Lt(i),Lt(a),i.length){for(var u=0,l=e,c=a.length;c>u;++u)a[u].e=l=!l;for(var s,f,h=i[0];;){for(var g=h,p=!0;g.v;)if((g=g.n)===h)return;s=g.z,o.lineStart();do{if(g.v=g.o.v=!0,g.e){if(p)for(var u=0,c=s.length;c>u;++u)o.point((f=s[u])[0],f[1]);else r(g.x,g.n.x,1,o);g=g.n}else{if(p){s=g.p.z;for(var u=s.length-1;u>=0;--u)o.point((f=s[u])[0],f[1])}else r(g.x,g.p.x,-1,o);g=g.p}g=g.o,s=g.z,p=!p}while(!g.v);o.lineEnd()}}}function Lt(n){if(t=n.length){for(var t,e,r=0,o=n[0];++r<t;)o.n=e=n[r],e.p=o,o=e;o.n=e=n[0],e.p=o}}function Dt(n,t,e,r){this.x=n,this.z=t,this.o=e,this.e=r,this.v=!1,this.n=this.p=null}function Pt(n,t,e,r){return function(o,i){function a(t,e){var r=o(t,e);n(t=r[0],e=r[1])&&i.point(t,e)}function u(n,t){var e=o(n,t);m.point(e[0],e[1])}function l(){y.point=u,m.lineStart()}function c(){y.point=a,m.lineEnd()}function s(n,t){d.push([n,t]);var e=o(n,t);x.point(e[0],e[1])}function f(){x.lineStart(),d=[]}function h(){s(d[0][0],d[0][1]),x.lineEnd();var n,t=x.clean(),e=M.buffer(),r=e.length;if(d.pop(),p.push(d),d=null,r)if(1&t){n=e[0];var o,r=n.length-1,a=-1;if(r>0){for(w||(i.polygonStart(),w=!0),i.lineStart();++a<r;)i.point((o=n[a])[0],o[1]);i.lineEnd()}}else r>1&&2&t&&e.push(e.pop().concat(e.shift())),g.push(e.filter(Tt))}var g,p,d,m=t(i),v=o.invert(r[0],r[1]),y={point:a,lineStart:l,lineEnd:c,polygonStart:function(){y.point=s,y.lineStart=f,y.lineEnd=h,g=[],p=[]},polygonEnd:function(){y.point=a,y.lineStart=l,y.lineEnd=c,g=ea.merge(g);var n=It(v,p);g.length?(w||(i.polygonStart(),w=!0),Nt(g,Rt,n,e,i)):n&&(w||(i.polygonStart(),w=!0),i.lineStart(),e(null,null,1,i),i.lineEnd()),w&&(i.polygonEnd(),w=!1),g=p=null},sphere:function(){i.polygonStart(),i.lineStart(),e(null,null,1,i),i.lineEnd(),i.polygonEnd()}},M=zt(),x=t(M),w=!1;return y}}function Tt(n){return n.length>1}function zt(){var n,t=[];return{lineStart:function(){t.push(n=[])},point:function(t,e){n.push([t,e])},lineEnd:w,buffer:function(){var e=t;return t=[],n=null,e},rejoin:function(){t.length>1&&t.push(t.pop().concat(t.shift()))}}}function Rt(n,t){return((n=n.x)[0]<0?n[1]-za-Na:za-n[1])-((t=t.x)[0]<0?t[1]-za-Na:za-t[1])}function $t(n){var t,e=0/0,r=0/0,o=0/0;return{lineStart:function(){n.lineStart(),t=1},point:function(i,a){var u=i>0?Da:-Da,l=pa(i-e);pa(l-Da)<Na?(n.point(e,r=(r+a)/2>0?za:-za),n.point(o,r),n.lineEnd(),n.lineStart(),n.point(u,r),n.point(i,r),t=0):o!==u&&l>=Da&&(pa(e-o)<Na&&(e-=o*Na),pa(i-u)<Na&&(i-=u*Na),r=Ut(e,r,i,a),n.point(o,r),n.lineEnd(),n.lineStart(),n.point(u,r),t=0),n.point(e=i,r=a),o=u},lineEnd:function(){n.lineEnd(),e=r=0/0},clean:function(){return 2-t}}}function Ut(n,t,e,r){var o,i,a=Math.sin(n-e);return pa(a)>Na?Math.atan((Math.sin(t)*(i=Math.cos(r))*Math.sin(e)-Math.sin(r)*(o=Math.cos(t))*Math.sin(n))/(o*i*a)):(t+r)/2}function jt(n,t,e,r){var o;if(null==n)o=e*za,r.point(-Da,o),r.point(0,o),r.point(Da,o),r.point(Da,0),r.point(Da,-o),r.point(0,-o),r.point(-Da,-o),r.point(-Da,0),r.point(-Da,o);else if(pa(n[0]-t[0])>Na){var i=n[0]<t[0]?Da:-Da;o=e*i/2,r.point(-i,o),r.point(0,o),r.point(i,o)}else r.point(t[0],t[1])}function It(n,t){var e=n[0],r=n[1],o=[Math.sin(e),-Math.cos(e),0],i=0,a=0;Mu.reset();for(var u=0,l=t.length;l>u;++u){var c=t[u],s=c.length;if(s)for(var f=c[0],h=f[0],g=f[1]/2+Da/4,p=Math.sin(g),d=Math.cos(g),m=1;;){m===s&&(m=0),n=c[m];var v=n[0],y=n[1]/2+Da/4,M=Math.sin(y),x=Math.cos(y),w=v-h,b=w>=0?1:-1,_=b*w,k=_>Da,C=p*M;if(Mu.add(Math.atan2(C*b*Math.sin(_),d*x+C*Math.cos(_))),i+=k?w+b*Pa:w,k^h>=e^v>=e){var S=vt(dt(f),dt(n));xt(S);var A=vt(o,S);xt(A);var E=(k^w>=0?-1:1)*tn(A[2]);(r>E||r===E&&(S[0]||S[1]))&&(a+=k^w>=0?1:-1)}if(!m++)break;h=v,p=M,d=x,f=n}}return(-Na>i||Na>i&&0>Mu)^1&a}function Ft(n){function t(n,t){return Math.cos(n)*Math.cos(t)>i}function e(n){var e,i,l,c,s;return{lineStart:function(){c=l=!1,s=1},point:function(f,h){var g,p=[f,h],d=t(f,h),m=a?d?0:o(f,h):d?o(f+(0>f?Da:-Da),h):0;if(!e&&(c=l=d)&&n.lineStart(),d!==l&&(g=r(e,p),(bt(e,g)||bt(p,g))&&(p[0]+=Na,p[1]+=Na,d=t(p[0],p[1]))),d!==l)s=0,d?(n.lineStart(),g=r(p,e),n.point(g[0],g[1])):(g=r(e,p),n.point(g[0],g[1]),n.lineEnd()),e=g;else if(u&&e&&a^d){var v;m&i||!(v=r(p,e,!0))||(s=0,a?(n.lineStart(),n.point(v[0][0],v[0][1]),n.point(v[1][0],v[1][1]),n.lineEnd()):(n.point(v[1][0],v[1][1]),n.lineEnd(),n.lineStart(),n.point(v[0][0],v[0][1])))}!d||e&&bt(e,p)||n.point(p[0],p[1]),e=p,l=d,i=m},lineEnd:function(){l&&n.lineEnd(),e=null},clean:function(){return s|(c&&l)<<1}}}function r(n,t,e){var r=dt(n),o=dt(t),a=[1,0,0],u=vt(r,o),l=mt(u,u),c=u[0],s=l-c*c;if(!s)return!e&&n;var f=i*l/s,h=-i*c/s,g=vt(a,u),p=Mt(a,f),d=Mt(u,h);yt(p,d);var m=g,v=mt(p,m),y=mt(m,m),M=v*v-y*(mt(p,p)-1);if(!(0>M)){var x=Math.sqrt(M),w=Mt(m,(-v-x)/y);if(yt(w,p),w=wt(w),!e)return w;var b,_=n[0],k=t[0],C=n[1],S=t[1];_>k&&(b=_,_=k,k=b);var A=k-_,E=pa(A-Da)<Na,q=E||Na>A;if(!E&&C>S&&(b=C,C=S,S=b),q?E?C+S>0^w[1]<(pa(w[0]-_)<Na?C:S):C<=w[1]&&w[1]<=S:A>Da^(_<=w[0]&&w[0]<=k)){var N=Mt(m,(-v+x)/y);return yt(N,p),[w,wt(N)]}}}function o(t,e){var r=a?n:Da-n,o=0;return-r>t?o|=1:t>r&&(o|=2),-r>e?o|=4:e>r&&(o|=8),o}var i=Math.cos(n),a=i>0,u=pa(i)>Na,l=pe(n,6*Ra);return Pt(t,e,l,a?[0,-n]:[-Da,n-Da])}function Ot(n,t,e,r){return function(o){var i,a=o.a,u=o.b,l=a.x,c=a.y,s=u.x,f=u.y,h=0,g=1,p=s-l,d=f-c;if(i=n-l,p||!(i>0)){if(i/=p,0>p){if(h>i)return;g>i&&(g=i)}else if(p>0){if(i>g)return;i>h&&(h=i)}if(i=e-l,p||!(0>i)){if(i/=p,0>p){if(i>g)return;i>h&&(h=i)}else if(p>0){if(h>i)return;g>i&&(g=i)}if(i=t-c,d||!(i>0)){if(i/=d,0>d){if(h>i)return;g>i&&(g=i)}else if(d>0){if(i>g)return;i>h&&(h=i)}if(i=r-c,d||!(0>i)){if(i/=d,0>d){if(i>g)return;i>h&&(h=i)}else if(d>0){if(h>i)return;g>i&&(g=i)}return h>0&&(o.a={x:l+h*p,y:c+h*d}),1>g&&(o.b={x:l+g*p,y:c+g*d}),o}}}}}}function Ht(n,t,e,r){function o(r,o){return pa(r[0]-n)<Na?o>0?0:3:pa(r[0]-e)<Na?o>0?2:1:pa(r[1]-t)<Na?o>0?1:0:o>0?3:2}function i(n,t){return a(n.x,t.x)}function a(n,t){var e=o(n,1),r=o(t,1);return e!==r?e-r:0===e?t[1]-n[1]:1===e?n[0]-t[0]:2===e?n[1]-t[1]:t[0]-n[0]}return function(u){function l(n){for(var t=0,e=m.length,r=n[1],o=0;e>o;++o)for(var i,a=1,u=m[o],l=u.length,c=u[0];l>a;++a)i=u[a],c[1]<=r?i[1]>r&&Q(c,i,n)>0&&++t:i[1]<=r&&Q(c,i,n)<0&&--t,c=i;return 0!==t}function c(i,u,l,c){var s=0,f=0;if(null==i||(s=o(i,l))!==(f=o(u,l))||a(i,u)<0^l>0){do c.point(0===s||3===s?n:e,s>1?r:t);while((s=(s+l+4)%4)!==f)}else c.point(u[0],u[1])}function s(o,i){return o>=n&&e>=o&&i>=t&&r>=i}function f(n,t){s(n,t)&&u.point(n,t)}function h(){q.point=p,m&&m.push(v=[]),k=!0,_=!1,w=b=0/0}function g(){d&&(p(y,M),x&&_&&A.rejoin(),d.push(A.buffer())),q.point=f,_&&u.lineEnd()}function p(n,t){n=Math.max(-Tu,Math.min(Tu,n)),t=Math.max(-Tu,Math.min(Tu,t));var e=s(n,t);if(m&&v.push([n,t]),k)y=n,M=t,x=e,k=!1,e&&(u.lineStart(),u.point(n,t));else if(e&&_)u.point(n,t);else{var r={a:{x:w,y:b},b:{x:n,y:t}};E(r)?(_||(u.lineStart(),u.point(r.a.x,r.a.y)),u.point(r.b.x,r.b.y),e||u.lineEnd(),C=!1):e&&(u.lineStart(),u.point(n,t),C=!1)}w=n,b=t,_=e}var d,m,v,y,M,x,w,b,_,k,C,S=u,A=zt(),E=Ot(n,t,e,r),q={point:f,lineStart:h,lineEnd:g,polygonStart:function(){u=A,d=[],m=[],C=!0},polygonEnd:function(){u=S,d=ea.merge(d);var t=l([n,r]),e=C&&t,o=d.length;(e||o)&&(u.polygonStart(),e&&(u.lineStart(),c(null,null,1,u),u.lineEnd()),o&&Nt(d,i,t,c,u),u.polygonEnd()),d=m=v=null}};return q}}function Yt(n){var t=0,e=Da/3,r=ae(n),o=r(t,e);return o.parallels=function(n){return arguments.length?r(t=n[0]*Da/180,e=n[1]*Da/180):[t/Da*180,e/Da*180]},o}function Bt(n,t){function e(n,t){var e=Math.sqrt(i-2*o*Math.sin(t))/o;return[e*Math.sin(n*=o),a-e*Math.cos(n)]}var r=Math.sin(n),o=(r+Math.sin(t))/2,i=1+r*(2*o-r),a=Math.sqrt(i)/o;return e.invert=function(n,t){var e=a-t;return[Math.atan2(n,e)/o,tn((i-(n*n+e*e)*o*o)/(2*o))]},e}function Zt(){function n(n,t){Ru+=o*n-r*t,r=n,o=t}var t,e,r,o;Fu.point=function(i,a){Fu.point=n,t=r=i,e=o=a},Fu.lineEnd=function(){n(t,e)}}function Vt(n,t){$u>n&&($u=n),n>ju&&(ju=n),Uu>t&&(Uu=t),t>Iu&&(Iu=t)}function Xt(){function n(n,t){a.push("M",n,",",t,i)}function t(n,t){a.push("M",n,",",t),u.point=e}function e(n,t){a.push("L",n,",",t)}function r(){u.point=n}function o(){a.push("Z")}var i=Wt(4.5),a=[],u={point:n,lineStart:function(){u.point=t},lineEnd:r,polygonStart:function(){u.lineEnd=o},polygonEnd:function(){u.lineEnd=r,u.point=n},pointRadius:function(n){return i=Wt(n),u},result:function(){if(a.length){var n=a.join("");return a=[],n}}};return u}function Wt(n){return"m0,"+n+"a"+n+","+n+" 0 1,1 0,"+-2*n+"a"+n+","+n+" 0 1,1 0,"+2*n+"z"}function Gt(n,t){_u+=n,ku+=t,++Cu}function Jt(){function n(n,r){var o=n-t,i=r-e,a=Math.sqrt(o*o+i*i);Su+=a*(t+n)/2,Au+=a*(e+r)/2,Eu+=a,Gt(t=n,e=r)}var t,e;Hu.point=function(r,o){Hu.point=n,Gt(t=r,e=o)}}function Kt(){Hu.point=Gt}function Qt(){function n(n,t){var e=n-r,i=t-o,a=Math.sqrt(e*e+i*i);Su+=a*(r+n)/2,Au+=a*(o+t)/2,Eu+=a,a=o*n-r*t,qu+=a*(r+n),Nu+=a*(o+t),Lu+=3*a,Gt(r=n,o=t)}var t,e,r,o;Hu.point=function(i,a){Hu.point=n,Gt(t=r=i,e=o=a)},Hu.lineEnd=function(){n(t,e)}}function ne(n){function t(t,e){n.moveTo(t+a,e),n.arc(t,e,a,0,Pa)}function e(t,e){n.moveTo(t,e),u.point=r}function r(t,e){n.lineTo(t,e)}function o(){u.point=t}function i(){n.closePath()}var a=4.5,u={point:t,lineStart:function(){u.point=e},lineEnd:o,polygonStart:function(){u.lineEnd=i},polygonEnd:function(){u.lineEnd=o,u.point=t},pointRadius:function(n){return a=n,u},result:w};return u}function te(n){function t(n){return(u?r:e)(n)}function e(t){return oe(t,function(e,r){e=n(e,r),t.point(e[0],e[1])})}function r(t){function e(e,r){e=n(e,r),t.point(e[0],e[1])}function r(){M=0/0,k.point=i,t.lineStart()}function i(e,r){var i=dt([e,r]),a=n(e,r);o(M,x,y,w,b,_,M=a[0],x=a[1],y=e,w=i[0],b=i[1],_=i[2],u,t),t.point(M,x)}function a(){k.point=e,t.lineEnd()}function l(){r(),k.point=c,k.lineEnd=s}function c(n,t){i(f=n,h=t),g=M,p=x,d=w,m=b,v=_,k.point=i}function s(){o(M,x,y,w,b,_,g,p,f,d,m,v,u,t),k.lineEnd=a,a()}var f,h,g,p,d,m,v,y,M,x,w,b,_,k={point:e,lineStart:r,lineEnd:a,polygonStart:function(){t.polygonStart(),k.lineStart=l},polygonEnd:function(){t.polygonEnd(),k.lineStart=r}};return k}function o(t,e,r,u,l,c,s,f,h,g,p,d,m,v){var y=s-t,M=f-e,x=y*y+M*M;if(x>4*i&&m--){var w=u+g,b=l+p,_=c+d,k=Math.sqrt(w*w+b*b+_*_),C=Math.asin(_/=k),S=pa(pa(_)-1)<Na||pa(r-h)<Na?(r+h)/2:Math.atan2(b,w),A=n(S,C),E=A[0],q=A[1],N=E-t,L=q-e,D=M*N-y*L;(D*D/x>i||pa((y*N+M*L)/x-.5)>.3||a>u*g+l*p+c*d)&&(o(t,e,r,u,l,c,E,q,S,w/=k,b/=k,_,m,v),v.point(E,q),o(E,q,S,w,b,_,s,f,h,g,p,d,m,v))}}var i=.5,a=Math.cos(30*Ra),u=16;return t.precision=function(n){return arguments.length?(u=(i=n*n)>0&&16,t):Math.sqrt(i)},t}function ee(n){var t=te(function(t,e){return n([t*$a,e*$a])});return function(n){return ue(t(n))}}function re(n){this.stream=n}function oe(n,t){return{point:t,sphere:function(){n.sphere()},lineStart:function(){n.lineStart()},lineEnd:function(){n.lineEnd()},polygonStart:function(){n.polygonStart()},polygonEnd:function(){n.polygonEnd()}}}function ie(n){return ae(function(){return n})()}function ae(n){function t(n){return n=u(n[0]*Ra,n[1]*Ra),[n[0]*h+l,c-n[1]*h]}function e(n){return n=u.invert((n[0]-l)/h,(c-n[1])/h),n&&[n[0]*$a,n[1]*$a]}function r(){u=Et(a=se(v,M,x),i);var n=i(d,m);return l=g-n[0]*h,c=p+n[1]*h,o()}function o(){return s&&(s.valid=!1,s=null),t}var i,a,u,l,c,s,f=te(function(n,t){return n=i(n,t),[n[0]*h+l,c-n[1]*h]}),h=150,g=480,p=250,d=0,m=0,v=0,M=0,x=0,w=Pu,b=y,_=null,k=null;return t.stream=function(n){return s&&(s.valid=!1),s=ue(w(a,f(b(n)))),s.valid=!0,s},t.clipAngle=function(n){return arguments.length?(w=null==n?(_=n,Pu):Ft((_=+n)*Ra),o()):_},t.clipExtent=function(n){return arguments.length?(k=n,b=n?Ht(n[0][0],n[0][1],n[1][0],n[1][1]):y,o()):k},t.scale=function(n){return arguments.length?(h=+n,r()):h},t.translate=function(n){return arguments.length?(g=+n[0],p=+n[1],r()):[g,p]},t.center=function(n){return arguments.length?(d=n[0]%360*Ra,m=n[1]%360*Ra,r()):[d*$a,m*$a]},t.rotate=function(n){return arguments.length?(v=n[0]%360*Ra,M=n[1]%360*Ra,x=n.length>2?n[2]%360*Ra:0,r()):[v*$a,M*$a,x*$a]},ea.rebind(t,f,"precision"),function(){return i=n.apply(this,arguments),t.invert=i.invert&&e,r()}}function ue(n){return oe(n,function(t,e){n.point(t*Ra,e*Ra)})}function le(n,t){return[n,t]}function ce(n,t){return[n>Da?n-Pa:-Da>n?n+Pa:n,t]}function se(n,t,e){return n?t||e?Et(he(n),ge(t,e)):he(n):t||e?ge(t,e):ce}function fe(n){return function(t,e){return t+=n,[t>Da?t-Pa:-Da>t?t+Pa:t,e]}}function he(n){var t=fe(n);return t.invert=fe(-n),t}function ge(n,t){function e(n,t){var e=Math.cos(t),u=Math.cos(n)*e,l=Math.sin(n)*e,c=Math.sin(t),s=c*r+u*o;return[Math.atan2(l*i-s*a,u*r-c*o),tn(s*i+l*a)]}var r=Math.cos(n),o=Math.sin(n),i=Math.cos(t),a=Math.sin(t);return e.invert=function(n,t){var e=Math.cos(t),u=Math.cos(n)*e,l=Math.sin(n)*e,c=Math.sin(t),s=c*i-l*a;return[Math.atan2(l*i+c*a,u*r+s*o),tn(s*r-u*o)]},e}function pe(n,t){var e=Math.cos(n),r=Math.sin(n);return function(o,i,a,u){var l=a*t;null!=o?(o=de(e,o),i=de(e,i),(a>0?i>o:o>i)&&(o+=a*Pa)):(o=n+a*Pa,i=n-.5*l);for(var c,s=o;a>0?s>i:i>s;s-=l)u.point((c=wt([e,-r*Math.cos(s),-r*Math.sin(s)]))[0],c[1])}}function de(n,t){var e=dt(t);e[0]-=n,xt(e);var r=nn(-e[1]);return((-e[2]<0?-r:r)+2*Math.PI-Na)%(2*Math.PI)}function me(n,t,e){var r=ea.range(n,t-Na,e).concat(t);return function(n){return r.map(function(t){return[n,t]})}}function ve(n,t,e){var r=ea.range(n,t-Na,e).concat(t);return function(n){return r.map(function(t){return[t,n]})}}function ye(n){return n.source}function Me(n){return n.target}function xe(n,t,e,r){var o=Math.cos(t),i=Math.sin(t),a=Math.cos(r),u=Math.sin(r),l=o*Math.cos(n),c=o*Math.sin(n),s=a*Math.cos(e),f=a*Math.sin(e),h=2*Math.asin(Math.sqrt(an(r-t)+o*a*an(e-n))),g=1/Math.sin(h),p=h?function(n){var t=Math.sin(n*=h)*g,e=Math.sin(h-n)*g,r=e*l+t*s,o=e*c+t*f,a=e*i+t*u;return[Math.atan2(o,r)*$a,Math.atan2(a,Math.sqrt(r*r+o*o))*$a]}:function(){return[n*$a,t*$a]};return p.distance=h,p}function we(){function n(n,o){var i=Math.sin(o*=Ra),a=Math.cos(o),u=pa((n*=Ra)-t),l=Math.cos(u);Yu+=Math.atan2(Math.sqrt((u=a*Math.sin(u))*u+(u=r*i-e*a*l)*u),e*i+r*a*l),t=n,e=i,r=a}var t,e,r;Bu.point=function(o,i){t=o*Ra,e=Math.sin(i*=Ra),r=Math.cos(i),Bu.point=n},Bu.lineEnd=function(){Bu.point=Bu.lineEnd=w}}function be(n,t){function e(t,e){var r=Math.cos(t),o=Math.cos(e),i=n(r*o);return[i*o*Math.sin(t),i*Math.sin(e)]}return e.invert=function(n,e){var r=Math.sqrt(n*n+e*e),o=t(r),i=Math.sin(o),a=Math.cos(o);return[Math.atan2(n*i,r*a),Math.asin(r&&e*i/r)]},e}function _e(n,t){function e(n,t){a>0?-za+Na>t&&(t=-za+Na):t>za-Na&&(t=za-Na);var e=a/Math.pow(o(t),i);return[e*Math.sin(i*n),a-e*Math.cos(i*n)]}var r=Math.cos(n),o=function(n){return Math.tan(Da/4+n/2)},i=n===t?Math.sin(n):Math.log(r/Math.cos(t))/Math.log(o(t)/o(n)),a=r*Math.pow(o(n),i)/i;return i?(e.invert=function(n,t){var e=a-t,r=K(i)*Math.sqrt(n*n+e*e);return[Math.atan2(n,e)/i,2*Math.atan(Math.pow(a/r,1/i))-za]},e):Ce}function ke(n,t){function e(n,t){var e=i-t;return[e*Math.sin(o*n),i-e*Math.cos(o*n)]}var r=Math.cos(n),o=n===t?Math.sin(n):(r-Math.cos(t))/(t-n),i=r/o+n;return pa(o)<Na?le:(e.invert=function(n,t){var e=i-t;return[Math.atan2(n,e)/o,i-K(o)*Math.sqrt(n*n+e*e)]},e)}function Ce(n,t){return[n,Math.log(Math.tan(Da/4+t/2))]}function Se(n){var t,e=ie(n),r=e.scale,o=e.translate,i=e.clipExtent;return e.scale=function(){var n=r.apply(e,arguments);return n===e?t?e.clipExtent(null):e:n},e.translate=function(){var n=o.apply(e,arguments);return n===e?t?e.clipExtent(null):e:n},e.clipExtent=function(n){var a=i.apply(e,arguments);if(a===e){if(t=null==n){var u=Da*r(),l=o();i([[l[0]-u,l[1]-u],[l[0]+u,l[1]+u]])}}else t&&(a=null);return a},e.clipExtent(null)}function Ae(n,t){return[Math.log(Math.tan(Da/4+t/2)),-n]}function Ee(n){return n[0]}function qe(n){return n[1]}function Ne(n){for(var t=n.length,e=[0,1],r=2,o=2;t>o;o++){for(;r>1&&Q(n[e[r-2]],n[e[r-1]],n[o])<=0;)--r;e[r++]=o}return e.slice(0,r)}function Le(n,t){return n[0]-t[0]||n[1]-t[1]}function De(n,t,e){return(e[0]-t[0])*(n[1]-t[1])<(e[1]-t[1])*(n[0]-t[0])}function Pe(n,t,e,r){var o=n[0],i=e[0],a=t[0]-o,u=r[0]-i,l=n[1],c=e[1],s=t[1]-l,f=r[1]-c,h=(u*(l-c)-f*(o-i))/(f*a-u*s);return[o+h*a,l+h*s]}function Te(n){var t=n[0],e=n[n.length-1];return!(t[0]-e[0]||t[1]-e[1])}function ze(){er(this),this.edge=this.site=this.circle=null}function Re(n){var t=rl.pop()||new ze;return t.site=n,t}function $e(n){Ve(n),nl.remove(n),rl.push(n),er(n)}function Ue(n){var t=n.circle,e=t.x,r=t.cy,o={x:e,y:r},i=n.P,a=n.N,u=[n];$e(n);for(var l=i;l.circle&&pa(e-l.circle.x)<Na&&pa(r-l.circle.cy)<Na;)i=l.P,u.unshift(l),$e(l),l=i;u.unshift(l),Ve(l);for(var c=a;c.circle&&pa(e-c.circle.x)<Na&&pa(r-c.circle.cy)<Na;)a=c.N,u.push(c),$e(c),c=a;u.push(c),Ve(c);var s,f=u.length;for(s=1;f>s;++s)c=u[s],l=u[s-1],Qe(c.edge,l.site,c.site,o);l=u[0],c=u[f-1],c.edge=Je(l.site,c.site,null,o),Ze(l),Ze(c)}function je(n){for(var t,e,r,o,i=n.x,a=n.y,u=nl._;u;)if(r=Ie(u,a)-i,r>Na)u=u.L;else{if(o=i-Fe(u,a),!(o>Na)){r>-Na?(t=u.P,e=u):o>-Na?(t=u,e=u.N):t=e=u;break}if(!u.R){t=u;break}u=u.R}var l=Re(n);if(nl.insert(t,l),t||e){if(t===e)return Ve(t),e=Re(t.site),nl.insert(l,e),l.edge=e.edge=Je(t.site,l.site),Ze(t),void Ze(e);if(!e)return void(l.edge=Je(t.site,l.site));Ve(t),Ve(e);var c=t.site,s=c.x,f=c.y,h=n.x-s,g=n.y-f,p=e.site,d=p.x-s,m=p.y-f,v=2*(h*m-g*d),y=h*h+g*g,M=d*d+m*m,x={x:(m*y-g*M)/v+s,y:(h*M-d*y)/v+f};Qe(e.edge,c,p,x),l.edge=Je(c,n,null,x),e.edge=Je(n,p,null,x),Ze(t),Ze(e)}}function Ie(n,t){var e=n.site,r=e.x,o=e.y,i=o-t;if(!i)return r;var a=n.P;if(!a)return-(1/0);e=a.site;var u=e.x,l=e.y,c=l-t;if(!c)return u;var s=u-r,f=1/i-1/c,h=s/c;return f?(-h+Math.sqrt(h*h-2*f*(s*s/(-2*c)-l+c/2+o-i/2)))/f+r:(r+u)/2}function Fe(n,t){var e=n.N;if(e)return Ie(e,t);var r=n.site;return r.y===t?r.x:1/0}function Oe(n){this.site=n,this.edges=[]}function He(n){for(var t,e,r,o,i,a,u,l,c,s,f=n[0][0],h=n[1][0],g=n[0][1],p=n[1][1],d=Qu,m=d.length;m--;)if(i=d[m],i&&i.prepare())for(u=i.edges,l=u.length,a=0;l>a;)s=u[a].end(),r=s.x,o=s.y,c=u[++a%l].start(),t=c.x,e=c.y,(pa(r-t)>Na||pa(o-e)>Na)&&(u.splice(a,0,new nr(Ke(i.site,s,pa(r-f)<Na&&p-o>Na?{x:f,y:pa(t-f)<Na?e:p}:pa(o-p)<Na&&h-r>Na?{x:pa(e-p)<Na?t:h,y:p}:pa(r-h)<Na&&o-g>Na?{x:h,y:pa(t-h)<Na?e:g}:pa(o-g)<Na&&r-f>Na?{x:pa(e-g)<Na?t:f,y:g}:null),i.site,null)),++l)}function Ye(n,t){return t.angle-n.angle}function Be(){er(this),this.x=this.y=this.arc=this.site=this.cy=null}function Ze(n){var t=n.P,e=n.N;if(t&&e){var r=t.site,o=n.site,i=e.site;if(r!==i){var a=o.x,u=o.y,l=r.x-a,c=r.y-u,s=i.x-a,f=i.y-u,h=2*(l*f-c*s);if(!(h>=-La)){var g=l*l+c*c,p=s*s+f*f,d=(f*g-c*p)/h,m=(l*p-s*g)/h,f=m+u,v=ol.pop()||new Be;v.arc=n,v.site=o,v.x=d+a,v.y=f+Math.sqrt(d*d+m*m),v.cy=f,n.circle=v;for(var y=null,M=el._;M;)if(v.y<M.y||v.y===M.y&&v.x<=M.x){if(!M.L){y=M.P;break}M=M.L}else{if(!M.R){y=M;break}M=M.R}el.insert(y,v),y||(tl=v)}}}}function Ve(n){var t=n.circle;t&&(t.P||(tl=t.N),el.remove(t),ol.push(t),er(t),n.circle=null)}function Xe(n){for(var t,e=Ku,r=Ot(n[0][0],n[0][1],n[1][0],n[1][1]),o=e.length;o--;)t=e[o],(!We(t,n)||!r(t)||pa(t.a.x-t.b.x)<Na&&pa(t.a.y-t.b.y)<Na)&&(t.a=t.b=null,e.splice(o,1))}function We(n,t){var e=n.b;if(e)return!0;var r,o,i=n.a,a=t[0][0],u=t[1][0],l=t[0][1],c=t[1][1],s=n.l,f=n.r,h=s.x,g=s.y,p=f.x,d=f.y,m=(h+p)/2,v=(g+d)/2;if(d===g){if(a>m||m>=u)return;if(h>p){if(i){if(i.y>=c)return}else i={x:m,y:l};e={x:m,y:c}}else{if(i){if(i.y<l)return}else i={x:m,y:c};e={x:m,y:l}}}else if(r=(h-p)/(d-g),o=v-r*m,-1>r||r>1)if(h>p){if(i){if(i.y>=c)return}else i={x:(l-o)/r,y:l};e={x:(c-o)/r,y:c}}else{if(i){if(i.y<l)return}else i={x:(c-o)/r,y:c};e={x:(l-o)/r,y:l}}else if(d>g){if(i){if(i.x>=u)return}else i={x:a,y:r*a+o};e={x:u,y:r*u+o}}else{if(i){if(i.x<a)return}else i={x:u,y:r*u+o};e={x:a,y:r*a+o}}return n.a=i,n.b=e,!0}function Ge(n,t){this.l=n,this.r=t,this.a=this.b=null}function Je(n,t,e,r){var o=new Ge(n,t);return Ku.push(o),e&&Qe(o,n,t,e),r&&Qe(o,t,n,r),Qu[n.i].edges.push(new nr(o,n,t)),Qu[t.i].edges.push(new nr(o,t,n)),o}function Ke(n,t,e){var r=new Ge(n,null);return r.a=t,r.b=e,Ku.push(r),r}function Qe(n,t,e,r){n.a||n.b?n.l===e?n.b=r:n.a=r:(n.a=r,n.l=t,n.r=e)}function nr(n,t,e){var r=n.a,o=n.b;this.edge=n,this.site=t,this.angle=e?Math.atan2(e.y-t.y,e.x-t.x):n.l===t?Math.atan2(o.x-r.x,r.y-o.y):Math.atan2(r.x-o.x,o.y-r.y)}function tr(){this._=null}function er(n){n.U=n.C=n.L=n.R=n.P=n.N=null}function rr(n,t){var e=t,r=t.R,o=e.U;o?o.L===e?o.L=r:o.R=r:n._=r,r.U=o,e.U=r,e.R=r.L,e.R&&(e.R.U=e),r.L=e}function or(n,t){var e=t,r=t.L,o=e.U;o?o.L===e?o.L=r:o.R=r:n._=r,r.U=o,e.U=r,e.L=r.R,e.L&&(e.L.U=e),r.R=e}function ir(n){for(;n.L;)n=n.L;return n}function ar(n,t){var e,r,o,i=n.sort(ur).pop();for(Ku=[],Qu=new Array(n.length),nl=new tr,el=new tr;;)if(o=tl,i&&(!o||i.y<o.y||i.y===o.y&&i.x<o.x))(i.x!==e||i.y!==r)&&(Qu[i.i]=new Oe(i),je(i),e=i.x,r=i.y),i=n.pop();else{if(!o)break;Ue(o.arc)}t&&(Xe(t),He(t));var a={cells:Qu,edges:Ku};return nl=el=Ku=Qu=null,a}function ur(n,t){return t.y-n.y||t.x-n.x}function lr(n,t,e){return(n.x-e.x)*(t.y-n.y)-(n.x-t.x)*(e.y-n.y)}function cr(n){return n.x}function sr(n){return n.y}function fr(){return{leaf:!0,nodes:[],point:null,x:null,y:null}}function hr(n,t,e,r,o,i){if(!n(t,e,r,o,i)){var a=.5*(e+o),u=.5*(r+i),l=t.nodes;l[0]&&hr(n,l[0],e,r,a,u),l[1]&&hr(n,l[1],a,r,o,u),l[2]&&hr(n,l[2],e,u,a,i),l[3]&&hr(n,l[3],a,u,o,i)}}function gr(n,t,e,r,o,i,a){var u,l=1/0;return function c(n,s,f,h,g){if(!(s>i||f>a||r>h||o>g)){if(p=n.point){var p,d=t-n.x,m=e-n.y,v=d*d+m*m;if(l>v){var y=Math.sqrt(l=v);r=t-y,o=e-y,i=t+y,a=e+y,u=p}}for(var M=n.nodes,x=.5*(s+h),w=.5*(f+g),b=t>=x,_=e>=w,k=_<<1|b,C=k+4;C>k;++k)if(n=M[3&k])switch(3&k){case 0:c(n,s,f,x,w);break;case 1:c(n,x,f,h,w);break;case 2:c(n,s,w,x,g);break;case 3:c(n,x,w,h,g)}}}(n,r,o,i,a),u}function pr(n,t){n=ea.rgb(n),t=ea.rgb(t);var e=n.r,r=n.g,o=n.b,i=t.r-e,a=t.g-r,u=t.b-o;return function(n){return"#"+wn(Math.round(e+i*n))+wn(Math.round(r+a*n))+wn(Math.round(o+u*n))}}function dr(n,t){var e,r={},o={};for(e in n)e in t?r[e]=yr(n[e],t[e]):o[e]=n[e];for(e in t)e in n||(o[e]=t[e]);return function(n){for(e in r)o[e]=r[e](n);return o}}function mr(n,t){return n=+n,t=+t,function(e){return n*(1-e)+t*e}}function vr(n,t){var e,r,o,i=al.lastIndex=ul.lastIndex=0,a=-1,u=[],l=[];for(n+="",t+="";(e=al.exec(n))&&(r=ul.exec(t));)(o=r.index)>i&&(o=t.slice(i,o),u[a]?u[a]+=o:u[++a]=o),(e=e[0])===(r=r[0])?u[a]?u[a]+=r:u[++a]=r:(u[++a]=null,l.push({i:a,x:mr(e,r)})),i=ul.lastIndex;return i<t.length&&(o=t.slice(i),u[a]?u[a]+=o:u[++a]=o),u.length<2?l[0]?(t=l[0].x,function(n){return t(n)+"";

}):function(){return t}:(t=l.length,function(n){for(var e,r=0;t>r;++r)u[(e=l[r]).i]=e.x(n);return u.join("")})}function yr(n,t){for(var e,r=ea.interpolators.length;--r>=0&&!(e=ea.interpolators[r](n,t)););return e}function Mr(n,t){var e,r=[],o=[],i=n.length,a=t.length,u=Math.min(n.length,t.length);for(e=0;u>e;++e)r.push(yr(n[e],t[e]));for(;i>e;++e)o[e]=n[e];for(;a>e;++e)o[e]=t[e];return function(n){for(e=0;u>e;++e)o[e]=r[e](n);return o}}function xr(n){return function(t){return 0>=t?0:t>=1?1:n(t)}}function wr(n){return function(t){return 1-n(1-t)}}function br(n){return function(t){return.5*(.5>t?n(2*t):2-n(2-2*t))}}function _r(n){return n*n}function kr(n){return n*n*n}function Cr(n){if(0>=n)return 0;if(n>=1)return 1;var t=n*n,e=t*n;return 4*(.5>n?e:3*(n-t)+e-.75)}function Sr(n){return function(t){return Math.pow(t,n)}}function Ar(n){return 1-Math.cos(n*za)}function Er(n){return Math.pow(2,10*(n-1))}function qr(n){return 1-Math.sqrt(1-n*n)}function Nr(n,t){var e;return arguments.length<2&&(t=.45),arguments.length?e=t/Pa*Math.asin(1/n):(n=1,e=t/4),function(r){return 1+n*Math.pow(2,-10*r)*Math.sin((r-e)*Pa/t)}}function Lr(n){return n||(n=1.70158),function(t){return t*t*((n+1)*t-n)}}function Dr(n){return 1/2.75>n?7.5625*n*n:2/2.75>n?7.5625*(n-=1.5/2.75)*n+.75:2.5/2.75>n?7.5625*(n-=2.25/2.75)*n+.9375:7.5625*(n-=2.625/2.75)*n+.984375}function Pr(n,t){n=ea.hcl(n),t=ea.hcl(t);var e=n.h,r=n.c,o=n.l,i=t.h-e,a=t.c-r,u=t.l-o;return isNaN(a)&&(a=0,r=isNaN(r)?t.c:r),isNaN(i)?(i=0,e=isNaN(e)?t.h:e):i>180?i-=360:-180>i&&(i+=360),function(n){return fn(e+i*n,r+a*n,o+u*n)+""}}function Tr(n,t){n=ea.hsl(n),t=ea.hsl(t);var e=n.h,r=n.s,o=n.l,i=t.h-e,a=t.s-r,u=t.l-o;return isNaN(a)&&(a=0,r=isNaN(r)?t.s:r),isNaN(i)?(i=0,e=isNaN(e)?t.h:e):i>180?i-=360:-180>i&&(i+=360),function(n){return cn(e+i*n,r+a*n,o+u*n)+""}}function zr(n,t){n=ea.lab(n),t=ea.lab(t);var e=n.l,r=n.a,o=n.b,i=t.l-e,a=t.a-r,u=t.b-o;return function(n){return gn(e+i*n,r+a*n,o+u*n)+""}}function Rr(n,t){return t-=n,function(e){return Math.round(n+t*e)}}function $r(n){var t=[n.a,n.b],e=[n.c,n.d],r=jr(t),o=Ur(t,e),i=jr(Ir(e,t,-o))||0;t[0]*e[1]<e[0]*t[1]&&(t[0]*=-1,t[1]*=-1,r*=-1,o*=-1),this.rotate=(r?Math.atan2(t[1],t[0]):Math.atan2(-e[0],e[1]))*$a,this.translate=[n.e,n.f],this.scale=[r,i],this.skew=i?Math.atan2(o,i)*$a:0}function Ur(n,t){return n[0]*t[0]+n[1]*t[1]}function jr(n){var t=Math.sqrt(Ur(n,n));return t&&(n[0]/=t,n[1]/=t),t}function Ir(n,t,e){return n[0]+=e*t[0],n[1]+=e*t[1],n}function Fr(n,t){var e,r=[],o=[],i=ea.transform(n),a=ea.transform(t),u=i.translate,l=a.translate,c=i.rotate,s=a.rotate,f=i.skew,h=a.skew,g=i.scale,p=a.scale;return u[0]!=l[0]||u[1]!=l[1]?(r.push("translate(",null,",",null,")"),o.push({i:1,x:mr(u[0],l[0])},{i:3,x:mr(u[1],l[1])})):r.push(l[0]||l[1]?"translate("+l+")":""),c!=s?(c-s>180?s+=360:s-c>180&&(c+=360),o.push({i:r.push(r.pop()+"rotate(",null,")")-2,x:mr(c,s)})):s&&r.push(r.pop()+"rotate("+s+")"),f!=h?o.push({i:r.push(r.pop()+"skewX(",null,")")-2,x:mr(f,h)}):h&&r.push(r.pop()+"skewX("+h+")"),g[0]!=p[0]||g[1]!=p[1]?(e=r.push(r.pop()+"scale(",null,",",null,")"),o.push({i:e-4,x:mr(g[0],p[0])},{i:e-2,x:mr(g[1],p[1])})):(1!=p[0]||1!=p[1])&&r.push(r.pop()+"scale("+p+")"),e=o.length,function(n){for(var t,i=-1;++i<e;)r[(t=o[i]).i]=t.x(n);return r.join("")}}function Or(n,t){return t=(t-=n=+n)||1/t,function(e){return(e-n)/t}}function Hr(n,t){return t=(t-=n=+n)||1/t,function(e){return Math.max(0,Math.min(1,(e-n)/t))}}function Yr(n){for(var t=n.source,e=n.target,r=Zr(t,e),o=[t];t!==r;)t=t.parent,o.push(t);for(var i=o.length;e!==r;)o.splice(i,0,e),e=e.parent;return o}function Br(n){for(var t=[],e=n.parent;null!=e;)t.push(n),n=e,e=e.parent;return t.push(n),t}function Zr(n,t){if(n===t)return n;for(var e=Br(n),r=Br(t),o=e.pop(),i=r.pop(),a=null;o===i;)a=o,o=e.pop(),i=r.pop();return a}function Vr(n){n.fixed|=2}function Xr(n){n.fixed&=-7}function Wr(n){n.fixed|=4,n.px=n.x,n.py=n.y}function Gr(n){n.fixed&=-5}function Jr(n,t,e){var r=0,o=0;if(n.charge=0,!n.leaf)for(var i,a=n.nodes,u=a.length,l=-1;++l<u;)i=a[l],null!=i&&(Jr(i,t,e),n.charge+=i.charge,r+=i.charge*i.cx,o+=i.charge*i.cy);if(n.point){n.leaf||(n.point.x+=Math.random()-.5,n.point.y+=Math.random()-.5);var c=t*e[n.point.index];n.charge+=n.pointCharge=c,r+=c*n.point.x,o+=c*n.point.y}n.cx=r/n.charge,n.cy=o/n.charge}function Kr(n,t){return ea.rebind(n,t,"sort","children","value"),n.nodes=n,n.links=oo,n}function Qr(n,t){for(var e=[n];null!=(n=e.pop());)if(t(n),(o=n.children)&&(r=o.length))for(var r,o;--r>=0;)e.push(o[r])}function no(n,t){for(var e=[n],r=[];null!=(n=e.pop());)if(r.push(n),(i=n.children)&&(o=i.length))for(var o,i,a=-1;++a<o;)e.push(i[a]);for(;null!=(n=r.pop());)t(n)}function to(n){return n.children}function eo(n){return n.value}function ro(n,t){return t.value-n.value}function oo(n){return ea.merge(n.map(function(n){return(n.children||[]).map(function(t){return{source:n,target:t}})}))}function io(n){return n.x}function ao(n){return n.y}function uo(n,t,e){n.y0=t,n.y=e}function lo(n){return ea.range(n.length)}function co(n){for(var t=-1,e=n[0].length,r=[];++t<e;)r[t]=0;return r}function so(n){for(var t,e=1,r=0,o=n[0][1],i=n.length;i>e;++e)(t=n[e][1])>o&&(r=e,o=t);return r}function fo(n){return n.reduce(ho,0)}function ho(n,t){return n+t[1]}function go(n,t){return po(n,Math.ceil(Math.log(t.length)/Math.LN2+1))}function po(n,t){for(var e=-1,r=+n[0],o=(n[1]-r)/t,i=[];++e<=t;)i[e]=o*e+r;return i}function mo(n){return[ea.min(n),ea.max(n)]}function vo(n,t){return n.value-t.value}function yo(n,t){var e=n._pack_next;n._pack_next=t,t._pack_prev=n,t._pack_next=e,e._pack_prev=t}function Mo(n,t){n._pack_next=t,t._pack_prev=n}function xo(n,t){var e=t.x-n.x,r=t.y-n.y,o=n.r+t.r;return.999*o*o>e*e+r*r}function wo(n){function t(n){s=Math.min(n.x-n.r,s),f=Math.max(n.x+n.r,f),h=Math.min(n.y-n.r,h),g=Math.max(n.y+n.r,g)}if((e=n.children)&&(c=e.length)){var e,r,o,i,a,u,l,c,s=1/0,f=-(1/0),h=1/0,g=-(1/0);if(e.forEach(bo),r=e[0],r.x=-r.r,r.y=0,t(r),c>1&&(o=e[1],o.x=o.r,o.y=0,t(o),c>2))for(i=e[2],Co(r,o,i),t(i),yo(r,i),r._pack_prev=i,yo(i,o),o=r._pack_next,a=3;c>a;a++){Co(r,o,i=e[a]);var p=0,d=1,m=1;for(u=o._pack_next;u!==o;u=u._pack_next,d++)if(xo(u,i)){p=1;break}if(1==p)for(l=r._pack_prev;l!==u._pack_prev&&!xo(l,i);l=l._pack_prev,m++);p?(m>d||d==m&&o.r<r.r?Mo(r,o=u):Mo(r=l,o),a--):(yo(r,i),o=i,t(i))}var v=(s+f)/2,y=(h+g)/2,M=0;for(a=0;c>a;a++)i=e[a],i.x-=v,i.y-=y,M=Math.max(M,i.r+Math.sqrt(i.x*i.x+i.y*i.y));n.r=M,e.forEach(_o)}}function bo(n){n._pack_next=n._pack_prev=n}function _o(n){delete n._pack_next,delete n._pack_prev}function ko(n,t,e,r){var o=n.children;if(n.x=t+=r*n.x,n.y=e+=r*n.y,n.r*=r,o)for(var i=-1,a=o.length;++i<a;)ko(o[i],t,e,r)}function Co(n,t,e){var r=n.r+e.r,o=t.x-n.x,i=t.y-n.y;if(r&&(o||i)){var a=t.r+e.r,u=o*o+i*i;a*=a,r*=r;var l=.5+(r-a)/(2*u),c=Math.sqrt(Math.max(0,2*a*(r+u)-(r-=u)*r-a*a))/(2*u);e.x=n.x+l*o+c*i,e.y=n.y+l*i-c*o}else e.x=n.x+r,e.y=n.y}function So(n,t){return n.parent==t.parent?1:2}function Ao(n){var t=n.children;return t.length?t[0]:n.t}function Eo(n){var t,e=n.children;return(t=e.length)?e[t-1]:n.t}function qo(n,t,e){var r=e/(t.i-n.i);t.c-=r,t.s+=e,n.c+=r,t.z+=e,t.m+=e}function No(n){for(var t,e=0,r=0,o=n.children,i=o.length;--i>=0;)t=o[i],t.z+=e,t.m+=e,e+=t.s+(r+=t.c)}function Lo(n,t,e){return n.a.parent===t.parent?n.a:e}function Do(n){return 1+ea.max(n,function(n){return n.y})}function Po(n){return n.reduce(function(n,t){return n+t.x},0)/n.length}function To(n){var t=n.children;return t&&t.length?To(t[0]):n}function zo(n){var t,e=n.children;return e&&(t=e.length)?zo(e[t-1]):n}function Ro(n){return{x:n.x,y:n.y,dx:n.dx,dy:n.dy}}function $o(n,t){var e=n.x+t[3],r=n.y+t[0],o=n.dx-t[1]-t[3],i=n.dy-t[0]-t[2];return 0>o&&(e+=o/2,o=0),0>i&&(r+=i/2,i=0),{x:e,y:r,dx:o,dy:i}}function Uo(n){var t=n[0],e=n[n.length-1];return e>t?[t,e]:[e,t]}function jo(n){return n.rangeExtent?n.rangeExtent():Uo(n.range())}function Io(n,t,e,r){var o=e(n[0],n[1]),i=r(t[0],t[1]);return function(n){return i(o(n))}}function Fo(n,t){var e,r=0,o=n.length-1,i=n[r],a=n[o];return i>a&&(e=r,r=o,o=e,e=i,i=a,a=e),n[r]=t.floor(i),n[o]=t.ceil(a),n}function Oo(n){return n?{floor:function(t){return Math.floor(t/n)*n},ceil:function(t){return Math.ceil(t/n)*n}}:yl}function Ho(n,t,e,r){var o=[],i=[],a=0,u=Math.min(n.length,t.length)-1;for(n[u]<n[0]&&(n=n.slice().reverse(),t=t.slice().reverse());++a<=u;)o.push(e(n[a-1],n[a])),i.push(r(t[a-1],t[a]));return function(t){var e=ea.bisect(n,t,1,u)-1;return i[e](o[e](t))}}function Yo(n,t,e,r){function o(){var o=Math.min(n.length,t.length)>2?Ho:Io,l=r?Hr:Or;return a=o(n,t,l,e),u=o(t,n,l,yr),i}function i(n){return a(n)}var a,u;return i.invert=function(n){return u(n)},i.domain=function(t){return arguments.length?(n=t.map(Number),o()):n},i.range=function(n){return arguments.length?(t=n,o()):t},i.rangeRound=function(n){return i.range(n).interpolate(Rr)},i.clamp=function(n){return arguments.length?(r=n,o()):r},i.interpolate=function(n){return arguments.length?(e=n,o()):e},i.ticks=function(t){return Xo(n,t)},i.tickFormat=function(t,e){return Wo(n,t,e)},i.nice=function(t){return Zo(n,t),o()},i.copy=function(){return Yo(n,t,e,r)},o()}function Bo(n,t){return ea.rebind(n,t,"range","rangeRound","interpolate","clamp")}function Zo(n,t){return Fo(n,Oo(Vo(n,t)[2]))}function Vo(n,t){null==t&&(t=10);var e=Uo(n),r=e[1]-e[0],o=Math.pow(10,Math.floor(Math.log(r/t)/Math.LN10)),i=t/r*o;return.15>=i?o*=10:.35>=i?o*=5:.75>=i&&(o*=2),e[0]=Math.ceil(e[0]/o)*o,e[1]=Math.floor(e[1]/o)*o+.5*o,e[2]=o,e}function Xo(n,t){return ea.range.apply(ea,Vo(n,t))}function Wo(n,t,e){var r=Vo(n,t);if(e){var o=au.exec(e);if(o.shift(),"s"===o[8]){var i=ea.formatPrefix(Math.max(pa(r[0]),pa(r[1])));return o[7]||(o[7]="."+Go(i.scale(r[2]))),o[8]="f",e=ea.format(o.join("")),function(n){return e(i.scale(n))+i.symbol}}o[7]||(o[7]="."+Jo(o[8],r)),e=o.join("")}else e=",."+Go(r[2])+"f";return ea.format(e)}function Go(n){return-Math.floor(Math.log(n)/Math.LN10+.01)}function Jo(n,t){var e=Go(t[2]);return n in Ml?Math.abs(e-Go(Math.max(pa(t[0]),pa(t[1]))))+ +("e"!==n):e-2*("%"===n)}function Ko(n,t,e,r){function o(n){return(e?Math.log(0>n?0:n):-Math.log(n>0?0:-n))/Math.log(t)}function i(n){return e?Math.pow(t,n):-Math.pow(t,-n)}function a(t){return n(o(t))}return a.invert=function(t){return i(n.invert(t))},a.domain=function(t){return arguments.length?(e=t[0]>=0,n.domain((r=t.map(Number)).map(o)),a):r},a.base=function(e){return arguments.length?(t=+e,n.domain(r.map(o)),a):t},a.nice=function(){var t=Fo(r.map(o),e?Math:wl);return n.domain(t),r=t.map(i),a},a.ticks=function(){var n=Uo(r),a=[],u=n[0],l=n[1],c=Math.floor(o(u)),s=Math.ceil(o(l)),f=t%1?2:t;if(isFinite(s-c)){if(e){for(;s>c;c++)for(var h=1;f>h;h++)a.push(i(c)*h);a.push(i(c))}else for(a.push(i(c));c++<s;)for(var h=f-1;h>0;h--)a.push(i(c)*h);for(c=0;a[c]<u;c++);for(s=a.length;a[s-1]>l;s--);a=a.slice(c,s)}return a},a.tickFormat=function(n,t){if(!arguments.length)return xl;arguments.length<2?t=xl:"function"!=typeof t&&(t=ea.format(t));var r,u=Math.max(.1,n/a.ticks().length),l=e?(r=1e-12,Math.ceil):(r=-1e-12,Math.floor);return function(n){return n/i(l(o(n)+r))<=u?t(n):""}},a.copy=function(){return Ko(n.copy(),t,e,r)},Bo(a,n)}function Qo(n,t,e){function r(t){return n(o(t))}var o=ni(t),i=ni(1/t);return r.invert=function(t){return i(n.invert(t))},r.domain=function(t){return arguments.length?(n.domain((e=t.map(Number)).map(o)),r):e},r.ticks=function(n){return Xo(e,n)},r.tickFormat=function(n,t){return Wo(e,n,t)},r.nice=function(n){return r.domain(Zo(e,n))},r.exponent=function(a){return arguments.length?(o=ni(t=a),i=ni(1/t),n.domain(e.map(o)),r):t},r.copy=function(){return Qo(n.copy(),t,e)},Bo(r,n)}function ni(n){return function(t){return 0>t?-Math.pow(-t,n):Math.pow(t,n)}}function ti(n,t){function e(e){return i[((o.get(e)||("range"===t.t?o.set(e,n.push(e)):0/0))-1)%i.length]}function r(t,e){return ea.range(n.length).map(function(n){return t+e*n})}var o,i,a;return e.domain=function(r){if(!arguments.length)return n;n=[],o=new c;for(var i,a=-1,u=r.length;++a<u;)o.has(i=r[a])||o.set(i,n.push(i));return e[t.t].apply(e,t.a)},e.range=function(n){return arguments.length?(i=n,a=0,t={t:"range",a:arguments},e):i},e.rangePoints=function(o,u){arguments.length<2&&(u=0);var l=o[0],c=o[1],s=n.length<2?(l=(l+c)/2,0):(c-l)/(n.length-1+u);return i=r(l+s*u/2,s),a=0,t={t:"rangePoints",a:arguments},e},e.rangeRoundPoints=function(o,u){arguments.length<2&&(u=0);var l=o[0],c=o[1],s=n.length<2?(l=c=Math.round((l+c)/2),0):(c-l)/(n.length-1+u)|0;return i=r(l+Math.round(s*u/2+(c-l-(n.length-1+u)*s)/2),s),a=0,t={t:"rangeRoundPoints",a:arguments},e},e.rangeBands=function(o,u,l){arguments.length<2&&(u=0),arguments.length<3&&(l=u);var c=o[1]<o[0],s=o[c-0],f=o[1-c],h=(f-s)/(n.length-u+2*l);return i=r(s+h*l,h),c&&i.reverse(),a=h*(1-u),t={t:"rangeBands",a:arguments},e},e.rangeRoundBands=function(o,u,l){arguments.length<2&&(u=0),arguments.length<3&&(l=u);var c=o[1]<o[0],s=o[c-0],f=o[1-c],h=Math.floor((f-s)/(n.length-u+2*l));return i=r(s+Math.round((f-s-(n.length-u)*h)/2),h),c&&i.reverse(),a=Math.round(h*(1-u)),t={t:"rangeRoundBands",a:arguments},e},e.rangeBand=function(){return a},e.rangeExtent=function(){return Uo(t.a[0])},e.copy=function(){return ti(n,t)},e.domain(n)}function ei(n,t){function i(){var e=0,r=t.length;for(u=[];++e<r;)u[e-1]=ea.quantile(n,e/r);return a}function a(n){return isNaN(n=+n)?void 0:t[ea.bisect(u,n)]}var u;return a.domain=function(t){return arguments.length?(n=t.map(r).filter(o).sort(e),i()):n},a.range=function(n){return arguments.length?(t=n,i()):t},a.quantiles=function(){return u},a.invertExtent=function(e){return e=t.indexOf(e),0>e?[0/0,0/0]:[e>0?u[e-1]:n[0],e<u.length?u[e]:n[n.length-1]]},a.copy=function(){return ei(n,t)},i()}function ri(n,t,e){function r(t){return e[Math.max(0,Math.min(a,Math.floor(i*(t-n))))]}function o(){return i=e.length/(t-n),a=e.length-1,r}var i,a;return r.domain=function(e){return arguments.length?(n=+e[0],t=+e[e.length-1],o()):[n,t]},r.range=function(n){return arguments.length?(e=n,o()):e},r.invertExtent=function(t){return t=e.indexOf(t),t=0>t?0/0:t/i+n,[t,t+1/i]},r.copy=function(){return ri(n,t,e)},o()}function oi(n,t){function e(e){return e>=e?t[ea.bisect(n,e)]:void 0}return e.domain=function(t){return arguments.length?(n=t,e):n},e.range=function(n){return arguments.length?(t=n,e):t},e.invertExtent=function(e){return e=t.indexOf(e),[n[e-1],n[e]]},e.copy=function(){return oi(n,t)},e}function ii(n){function t(n){return+n}return t.invert=t,t.domain=t.range=function(e){return arguments.length?(n=e.map(t),t):n},t.ticks=function(t){return Xo(n,t)},t.tickFormat=function(t,e){return Wo(n,t,e)},t.copy=function(){return ii(n)},t}function ai(){return 0}function ui(n){return n.innerRadius}function li(n){return n.outerRadius}function ci(n){return n.startAngle}function si(n){return n.endAngle}function fi(n){return n&&n.padAngle}function hi(n,t,e,r){return(n-e)*t-(t-r)*n>0?0:1}function gi(n,t,e,r,o){var i=n[0]-t[0],a=n[1]-t[1],u=(o?r:-r)/Math.sqrt(i*i+a*a),l=u*a,c=-u*i,s=n[0]+l,f=n[1]+c,h=t[0]+l,g=t[1]+c,p=(s+h)/2,d=(f+g)/2,m=h-s,v=g-f,y=m*m+v*v,M=e-r,x=s*g-h*f,w=(0>v?-1:1)*Math.sqrt(M*M*y-x*x),b=(x*v-m*w)/y,_=(-x*m-v*w)/y,k=(x*v+m*w)/y,C=(-x*m+v*w)/y,S=b-p,A=_-d,E=k-p,q=C-d;return S*S+A*A>E*E+q*q&&(b=k,_=C),[[b-l,_-c],[b*e/M,_*e/M]]}function pi(n){function t(t){function a(){c.push("M",i(n(s),u))}for(var l,c=[],s=[],f=-1,h=t.length,g=An(e),p=An(r);++f<h;)o.call(this,l=t[f],f)?s.push([+g.call(this,l,f),+p.call(this,l,f)]):s.length&&(a(),s=[]);return s.length&&a(),c.length?c.join(""):null}var e=Ee,r=qe,o=qt,i=di,a=i.key,u=.7;return t.x=function(n){return arguments.length?(e=n,t):e},t.y=function(n){return arguments.length?(r=n,t):r},t.defined=function(n){return arguments.length?(o=n,t):o},t.interpolate=function(n){return arguments.length?(a="function"==typeof n?i=n:(i=Al.get(n)||di).key,t):a},t.tension=function(n){return arguments.length?(u=n,t):u},t}function di(n){return n.join("L")}function mi(n){return di(n)+"Z"}function vi(n){for(var t=0,e=n.length,r=n[0],o=[r[0],",",r[1]];++t<e;)o.push("H",(r[0]+(r=n[t])[0])/2,"V",r[1]);return e>1&&o.push("H",r[0]),o.join("")}function yi(n){for(var t=0,e=n.length,r=n[0],o=[r[0],",",r[1]];++t<e;)o.push("V",(r=n[t])[1],"H",r[0]);return o.join("")}function Mi(n){for(var t=0,e=n.length,r=n[0],o=[r[0],",",r[1]];++t<e;)o.push("H",(r=n[t])[0],"V",r[1]);return o.join("")}function xi(n,t){return n.length<4?di(n):n[1]+_i(n.slice(1,-1),ki(n,t))}function wi(n,t){return n.length<3?di(n):n[0]+_i((n.push(n[0]),n),ki([n[n.length-2]].concat(n,[n[1]]),t))}function bi(n,t){return n.length<3?di(n):n[0]+_i(n,ki(n,t))}function _i(n,t){if(t.length<1||n.length!=t.length&&n.length!=t.length+2)return di(n);var e=n.length!=t.length,r="",o=n[0],i=n[1],a=t[0],u=a,l=1;if(e&&(r+="Q"+(i[0]-2*a[0]/3)+","+(i[1]-2*a[1]/3)+","+i[0]+","+i[1],o=n[1],l=2),t.length>1){u=t[1],i=n[l],l++,r+="C"+(o[0]+a[0])+","+(o[1]+a[1])+","+(i[0]-u[0])+","+(i[1]-u[1])+","+i[0]+","+i[1];for(var c=2;c<t.length;c++,l++)i=n[l],u=t[c],r+="S"+(i[0]-u[0])+","+(i[1]-u[1])+","+i[0]+","+i[1]}if(e){var s=n[l];r+="Q"+(i[0]+2*u[0]/3)+","+(i[1]+2*u[1]/3)+","+s[0]+","+s[1]}return r}function ki(n,t){for(var e,r=[],o=(1-t)/2,i=n[0],a=n[1],u=1,l=n.length;++u<l;)e=i,i=a,a=n[u],r.push([o*(a[0]-e[0]),o*(a[1]-e[1])]);return r}function Ci(n){if(n.length<3)return di(n);var t=1,e=n.length,r=n[0],o=r[0],i=r[1],a=[o,o,o,(r=n[1])[0]],u=[i,i,i,r[1]],l=[o,",",i,"L",qi(Nl,a),",",qi(Nl,u)];for(n.push(n[e-1]);++t<=e;)r=n[t],a.shift(),a.push(r[0]),u.shift(),u.push(r[1]),Ni(l,a,u);return n.pop(),l.push("L",r),l.join("")}function Si(n){if(n.length<4)return di(n);for(var t,e=[],r=-1,o=n.length,i=[0],a=[0];++r<3;)t=n[r],i.push(t[0]),a.push(t[1]);for(e.push(qi(Nl,i)+","+qi(Nl,a)),--r;++r<o;)t=n[r],i.shift(),i.push(t[0]),a.shift(),a.push(t[1]),Ni(e,i,a);return e.join("")}function Ai(n){for(var t,e,r=-1,o=n.length,i=o+4,a=[],u=[];++r<4;)e=n[r%o],a.push(e[0]),u.push(e[1]);for(t=[qi(Nl,a),",",qi(Nl,u)],--r;++r<i;)e=n[r%o],a.shift(),a.push(e[0]),u.shift(),u.push(e[1]),Ni(t,a,u);return t.join("")}function Ei(n,t){var e=n.length-1;if(e)for(var r,o,i=n[0][0],a=n[0][1],u=n[e][0]-i,l=n[e][1]-a,c=-1;++c<=e;)r=n[c],o=c/e,r[0]=t*r[0]+(1-t)*(i+o*u),r[1]=t*r[1]+(1-t)*(a+o*l);return Ci(n)}function qi(n,t){return n[0]*t[0]+n[1]*t[1]+n[2]*t[2]+n[3]*t[3]}function Ni(n,t,e){n.push("C",qi(El,t),",",qi(El,e),",",qi(ql,t),",",qi(ql,e),",",qi(Nl,t),",",qi(Nl,e))}function Li(n,t){return(t[1]-n[1])/(t[0]-n[0])}function Di(n){for(var t=0,e=n.length-1,r=[],o=n[0],i=n[1],a=r[0]=Li(o,i);++t<e;)r[t]=(a+(a=Li(o=i,i=n[t+1])))/2;return r[t]=a,r}function Pi(n){for(var t,e,r,o,i=[],a=Di(n),u=-1,l=n.length-1;++u<l;)t=Li(n[u],n[u+1]),pa(t)<Na?a[u]=a[u+1]=0:(e=a[u]/t,r=a[u+1]/t,o=e*e+r*r,o>9&&(o=3*t/Math.sqrt(o),a[u]=o*e,a[u+1]=o*r));for(u=-1;++u<=l;)o=(n[Math.min(l,u+1)][0]-n[Math.max(0,u-1)][0])/(6*(1+a[u]*a[u])),i.push([o||0,a[u]*o||0]);return i}function Ti(n){return n.length<3?di(n):n[0]+_i(n,Pi(n))}function zi(n){for(var t,e,r,o=-1,i=n.length;++o<i;)t=n[o],e=t[0],r=t[1]-za,t[0]=e*Math.cos(r),t[1]=e*Math.sin(r);return n}function Ri(n){function t(t){function l(){d.push("M",u(n(v),f),s,c(n(m.reverse()),f),"Z")}for(var h,g,p,d=[],m=[],v=[],y=-1,M=t.length,x=An(e),w=An(o),b=e===r?function(){return g}:An(r),_=o===i?function(){return p}:An(i);++y<M;)a.call(this,h=t[y],y)?(m.push([g=+x.call(this,h,y),p=+w.call(this,h,y)]),v.push([+b.call(this,h,y),+_.call(this,h,y)])):m.length&&(l(),m=[],v=[]);return m.length&&l(),d.length?d.join(""):null}var e=Ee,r=Ee,o=0,i=qe,a=qt,u=di,l=u.key,c=u,s="L",f=.7;return t.x=function(n){return arguments.length?(e=r=n,t):r},t.x0=function(n){return arguments.length?(e=n,t):e},t.x1=function(n){return arguments.length?(r=n,t):r},t.y=function(n){return arguments.length?(o=i=n,t):i},t.y0=function(n){return arguments.length?(o=n,t):o},t.y1=function(n){return arguments.length?(i=n,t):i},t.defined=function(n){return arguments.length?(a=n,t):a},t.interpolate=function(n){return arguments.length?(l="function"==typeof n?u=n:(u=Al.get(n)||di).key,c=u.reverse||u,s=u.closed?"M":"L",t):l},t.tension=function(n){return arguments.length?(f=n,t):f},t}function $i(n){return n.radius}function Ui(n){return[n.x,n.y]}function ji(n){return function(){var t=n.apply(this,arguments),e=t[0],r=t[1]-za;return[e*Math.cos(r),e*Math.sin(r)]}}function Ii(){return 64}function Fi(){return"circle"}function Oi(n){var t=Math.sqrt(n/Da);return"M0,"+t+"A"+t+","+t+" 0 1,1 0,"+-t+"A"+t+","+t+" 0 1,1 0,"+t+"Z"}function Hi(n){return function(){var t,e;(t=this[n])&&(e=t[t.active])&&(--t.count?delete t[t.active]:delete this[n],t.active+=.5,e.event&&e.event.interrupt.call(this,this.__data__,e.index))}}function Yi(n,t,e){return Ma(n,$l),n.namespace=t,n.id=e,n}function Bi(n,t,e,r){var o=n.id,i=n.namespace;return H(n,"function"==typeof e?function(n,a,u){n[i][o].tween.set(t,r(e.call(n,n.__data__,a,u)))}:(e=r(e),function(n){n[i][o].tween.set(t,e)}))}function Zi(n){return null==n&&(n=""),function(){this.textContent=n}}function Vi(n){return null==n?"__transition__":"__transition_"+n+"__"}function Xi(n,t,e,r,o){var i=n[e]||(n[e]={active:0,count:0}),a=i[r];if(!a){var u=o.time;a=i[r]={tween:new c,time:u,delay:o.delay,duration:o.duration,ease:o.ease,index:t},o=null,++i.count,ea.timer(function(o){function l(e){if(i.active>r)return s();var o=i[i.active];o&&(--i.count,delete i[i.active],o.event&&o.event.interrupt.call(n,n.__data__,o.index)),i.active=r,a.event&&a.event.start.call(n,n.__data__,t),a.tween.forEach(function(e,r){(r=r.call(n,n.__data__,t))&&d.push(r)}),h=a.ease,f=a.duration,ea.timer(function(){return p.c=c(e||1)?qt:c,1},0,u)}function c(e){if(i.active!==r)return 1;for(var o=e/f,u=h(o),l=d.length;l>0;)d[--l].call(n,u);return o>=1?(a.event&&a.event.end.call(n,n.__data__,t),s()):void 0}function s(){return--i.count?delete i[r]:delete n[e],1}var f,h,g=a.delay,p=ru,d=[];return p.t=g+u,o>=g?l(o-g):void(p.c=l)},0,u)}}function Wi(n,t,e){n.attr("transform",function(n){var r=t(n);return"translate("+(isFinite(r)?r:e(n))+",0)"})}function Gi(n,t,e){n.attr("transform",function(n){var r=t(n);return"translate(0,"+(isFinite(r)?r:e(n))+")"})}function Ji(n){return n.toISOString()}function Ki(n,t,e){function r(t){return n(t)}function o(n,e){var r=n[1]-n[0],o=r/e,i=ea.bisect(Zl,o);return i==Zl.length?[t.year,Vo(n.map(function(n){return n/31536e6}),e)[2]]:i?t[o/Zl[i-1]<Zl[i]/o?i-1:i]:[Wl,Vo(n,e)[2]]}return r.invert=function(t){return Qi(n.invert(t))},r.domain=function(t){return arguments.length?(n.domain(t),r):n.domain().map(Qi)},r.nice=function(n,t){function e(e){return!isNaN(e)&&!n.range(e,Qi(+e+1),t).length}var i=r.domain(),a=Uo(i),u=null==n?o(a,10):"number"==typeof n&&o(a,n);return u&&(n=u[0],t=u[1]),r.domain(Fo(i,t>1?{floor:function(t){for(;e(t=n.floor(t));)t=Qi(t-1);return t},ceil:function(t){for(;e(t=n.ceil(t));)t=Qi(+t+1);return t}}:n))},r.ticks=function(n,t){var e=Uo(r.domain()),i=null==n?o(e,10):"number"==typeof n?o(e,n):!n.range&&[{range:n},t];return i&&(n=i[0],t=i[1]),n.range(e[0],Qi(+e[1]+1),1>t?1:t)},r.tickFormat=function(){return e},r.copy=function(){return Ki(n.copy(),t,e)},Bo(r,n)}function Qi(n){return new Date(n)}function na(n){return JSON.parse(n.responseText)}function ta(n){var t=ia.createRange();return t.selectNode(ia.body),t.createContextualFragment(n.responseText)}var ea={version:"3.5.5"},ra=[].slice,oa=function(n){return ra.call(n)},ia=this.document;if(ia)try{oa(ia.documentElement.childNodes)[0].nodeType}catch(aa){oa=function(n){for(var t=n.length,e=new Array(t);t--;)e[t]=n[t];return e}}if(Date.now||(Date.now=function(){return+new Date}),ia)try{ia.createElement("DIV").style.setProperty("opacity",0,"")}catch(ua){var la=this.Element.prototype,ca=la.setAttribute,sa=la.setAttributeNS,fa=this.CSSStyleDeclaration.prototype,ha=fa.setProperty;la.setAttribute=function(n,t){ca.call(this,n,t+"")},la.setAttributeNS=function(n,t,e){sa.call(this,n,t,e+"")},fa.setProperty=function(n,t,e){ha.call(this,n,t+"",e)}}ea.ascending=e,ea.descending=function(n,t){return n>t?-1:t>n?1:t>=n?0:0/0},ea.min=function(n,t){var e,r,o=-1,i=n.length;if(1===arguments.length){for(;++o<i;)if(null!=(r=n[o])&&r>=r){e=r;break}for(;++o<i;)null!=(r=n[o])&&e>r&&(e=r)}else{for(;++o<i;)if(null!=(r=t.call(n,n[o],o))&&r>=r){e=r;break}for(;++o<i;)null!=(r=t.call(n,n[o],o))&&e>r&&(e=r)}return e},ea.max=function(n,t){var e,r,o=-1,i=n.length;if(1===arguments.length){for(;++o<i;)if(null!=(r=n[o])&&r>=r){e=r;break}for(;++o<i;)null!=(r=n[o])&&r>e&&(e=r)}else{for(;++o<i;)if(null!=(r=t.call(n,n[o],o))&&r>=r){e=r;break}for(;++o<i;)null!=(r=t.call(n,n[o],o))&&r>e&&(e=r)}return e},ea.extent=function(n,t){var e,r,o,i=-1,a=n.length;if(1===arguments.length){for(;++i<a;)if(null!=(r=n[i])&&r>=r){e=o=r;break}for(;++i<a;)null!=(r=n[i])&&(e>r&&(e=r),r>o&&(o=r))}else{for(;++i<a;)if(null!=(r=t.call(n,n[i],i))&&r>=r){e=o=r;break}for(;++i<a;)null!=(r=t.call(n,n[i],i))&&(e>r&&(e=r),r>o&&(o=r))}return[e,o]},ea.sum=function(n,t){var e,r=0,i=n.length,a=-1;if(1===arguments.length)for(;++a<i;)o(e=+n[a])&&(r+=e);else for(;++a<i;)o(e=+t.call(n,n[a],a))&&(r+=e);return r},ea.mean=function(n,t){var e,i=0,a=n.length,u=-1,l=a;if(1===arguments.length)for(;++u<a;)o(e=r(n[u]))?i+=e:--l;else for(;++u<a;)o(e=r(t.call(n,n[u],u)))?i+=e:--l;return l?i/l:void 0},ea.quantile=function(n,t){var e=(n.length-1)*t+1,r=Math.floor(e),o=+n[r-1],i=e-r;return i?o+i*(n[r]-o):o},ea.median=function(n,t){var i,a=[],u=n.length,l=-1;if(1===arguments.length)for(;++l<u;)o(i=r(n[l]))&&a.push(i);else for(;++l<u;)o(i=r(t.call(n,n[l],l)))&&a.push(i);return a.length?ea.quantile(a.sort(e),.5):void 0},ea.variance=function(n,t){var e,i,a=n.length,u=0,l=0,c=-1,s=0;if(1===arguments.length)for(;++c<a;)o(e=r(n[c]))&&(i=e-u,u+=i/++s,l+=i*(e-u));else for(;++c<a;)o(e=r(t.call(n,n[c],c)))&&(i=e-u,u+=i/++s,l+=i*(e-u));return s>1?l/(s-1):void 0},ea.deviation=function(){var n=ea.variance.apply(this,arguments);return n?Math.sqrt(n):n};var ga=i(e);ea.bisectLeft=ga.left,ea.bisect=ea.bisectRight=ga.right,ea.bisector=function(n){return i(1===n.length?function(t,r){return e(n(t),r)}:n)},ea.shuffle=function(n,t,e){(i=arguments.length)<3&&(e=n.length,2>i&&(t=0));for(var r,o,i=e-t;i;)o=Math.random()*i--|0,r=n[i+t],n[i+t]=n[o+t],n[o+t]=r;return n},ea.permute=function(n,t){for(var e=t.length,r=new Array(e);e--;)r[e]=n[t[e]];return r},ea.pairs=function(n){for(var t,e=0,r=n.length-1,o=n[0],i=new Array(0>r?0:r);r>e;)i[e]=[t=o,o=n[++e]];return i},ea.zip=function(){if(!(r=arguments.length))return[];for(var n=-1,t=ea.min(arguments,a),e=new Array(t);++n<t;)for(var r,o=-1,i=e[n]=new Array(r);++o<r;)i[o]=arguments[o][n];return e},ea.transpose=function(n){return ea.zip.apply(ea,n)},ea.keys=function(n){var t=[];for(var e in n)t.push(e);return t},ea.values=function(n){var t=[];for(var e in n)t.push(n[e]);return t},ea.entries=function(n){var t=[];for(var e in n)t.push({key:e,value:n[e]});return t},ea.merge=function(n){for(var t,e,r,o=n.length,i=-1,a=0;++i<o;)a+=n[i].length;for(e=new Array(a);--o>=0;)for(r=n[o],t=r.length;--t>=0;)e[--a]=r[t];return e};var pa=Math.abs;ea.range=function(n,t,e){if(arguments.length<3&&(e=1,arguments.length<2&&(t=n,n=0)),(t-n)/e===1/0)throw new Error("infinite range");var r,o=[],i=u(pa(e)),a=-1;if(n*=i,t*=i,e*=i,0>e)for(;(r=n+e*++a)>t;)o.push(r/i);else for(;(r=n+e*++a)<t;)o.push(r/i);return o},ea.map=function(n,t){var e=new c;if(n instanceof c)n.forEach(function(n,t){e.set(n,t)});else if(Array.isArray(n)){var r,o=-1,i=n.length;if(1===arguments.length)for(;++o<i;)e.set(o,n[o]);else for(;++o<i;)e.set(t.call(n,r=n[o],o),r)}else for(var a in n)e.set(a,n[a]);return e};var da="__proto__",ma="\x00";l(c,{has:h,get:function(n){return this._[s(n)]},set:function(n,t){return this._[s(n)]=t},remove:g,keys:p,values:function(){var n=[];for(var t in this._)n.push(this._[t]);return n},entries:function(){var n=[];for(var t in this._)n.push({key:f(t),value:this._[t]});return n},size:d,empty:m,forEach:function(n){for(var t in this._)n.call(this,f(t),this._[t])}}),ea.nest=function(){function n(t,a,u){if(u>=i.length)return r?r.call(o,a):e?a.sort(e):a;for(var l,s,f,h,g=-1,p=a.length,d=i[u++],m=new c;++g<p;)(h=m.get(l=d(s=a[g])))?h.push(s):m.set(l,[s]);return t?(s=t(),f=function(e,r){s.set(e,n(t,r,u))}):(s={},f=function(e,r){s[e]=n(t,r,u)}),m.forEach(f),s}function t(n,e){if(e>=i.length)return n;var r=[],o=a[e++];return n.forEach(function(n,o){r.push({key:n,values:t(o,e)})}),o?r.sort(function(n,t){return o(n.key,t.key)}):r}var e,r,o={},i=[],a=[];return o.map=function(t,e){return n(e,t,0)},o.entries=function(e){return t(n(ea.map,e,0),0)},o.key=function(n){return i.push(n),o},o.sortKeys=function(n){return a[i.length-1]=n,o},o.sortValues=function(n){return e=n,o},o.rollup=function(n){return r=n,o},o},ea.set=function(n){var t=new v;if(n)for(var e=0,r=n.length;r>e;++e)t.add(n[e]);return t},l(v,{has:h,add:function(n){return this._[s(n+="")]=!0,n},remove:g,values:p,size:d,empty:m,forEach:function(n){for(var t in this._)n.call(this,f(t))}}),ea.behavior={},ea.rebind=function(n,t){for(var e,r=1,o=arguments.length;++r<o;)n[e=arguments[r]]=M(n,t,t[e]);return n};var va=["webkit","ms","moz","Moz","o","O"];ea.dispatch=function(){for(var n=new b,t=-1,e=arguments.length;++t<e;)n[arguments[t]]=_(n);return n},b.prototype.on=function(n,t){var e=n.indexOf("."),r="";if(e>=0&&(r=n.slice(e+1),n=n.slice(0,e)),n)return arguments.length<2?this[n].on(r):this[n].on(r,t);if(2===arguments.length){if(null==t)for(n in this)this.hasOwnProperty(n)&&this[n].on(r,null);return this}},ea.event=null,ea.requote=function(n){return n.replace(ya,"\\$&")};var ya=/[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g,Ma={}.__proto__?function(n,t){n.__proto__=t}:function(n,t){for(var e in t)n[e]=t[e]},xa=function(n,t){return t.querySelector(n)},wa=function(n,t){return t.querySelectorAll(n)},ba=function(n,t){var e=n.matches||n[x(n,"matchesSelector")];return(ba=function(n,t){return e.call(n,t)})(n,t)};"function"==typeof Sizzle&&(xa=function(n,t){return Sizzle(n,t)[0]||null},wa=Sizzle,ba=Sizzle.matchesSelector),ea.selection=function(){return ea.select(ia.documentElement)};var _a=ea.selection.prototype=[];_a.select=function(n){var t,e,r,o,i=[];n=E(n);for(var a=-1,u=this.length;++a<u;){i.push(t=[]),t.parentNode=(r=this[a]).parentNode;for(var l=-1,c=r.length;++l<c;)(o=r[l])?(t.push(e=n.call(o,o.__data__,l,a)),e&&"__data__"in o&&(e.__data__=o.__data__)):t.push(null)}return A(i)},_a.selectAll=function(n){var t,e,r=[];n=q(n);for(var o=-1,i=this.length;++o<i;)for(var a=this[o],u=-1,l=a.length;++u<l;)(e=a[u])&&(r.push(t=oa(n.call(e,e.__data__,u,o))),t.parentNode=e);return A(r)};var ka={svg:"http://www.w3.org/2000/svg",xhtml:"http://www.w3.org/1999/xhtml",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};ea.ns={prefix:ka,qualify:function(n){var t=n.indexOf(":"),e=n;return t>=0&&(e=n.slice(0,t),n=n.slice(t+1)),ka.hasOwnProperty(e)?{space:ka[e],local:n}:n}},_a.attr=function(n,t){if(arguments.length<2){if("string"==typeof n){var e=this.node();return n=ea.ns.qualify(n),n.local?e.getAttributeNS(n.space,n.local):e.getAttribute(n)}for(t in n)this.each(N(t,n[t]));return this}return this.each(N(n,t))},_a.classed=function(n,t){if(arguments.length<2){if("string"==typeof n){var e=this.node(),r=(n=P(n)).length,o=-1;if(t=e.classList){for(;++o<r;)if(!t.contains(n[o]))return!1}else for(t=e.getAttribute("class");++o<r;)if(!D(n[o]).test(t))return!1;return!0}for(t in n)this.each(T(t,n[t]));return this}return this.each(T(n,t))},_a.style=function(n,e,r){var o=arguments.length;if(3>o){if("string"!=typeof n){2>o&&(e="");for(r in n)this.each(R(r,n[r],e));return this}if(2>o){var i=this.node();return t(i).getComputedStyle(i,null).getPropertyValue(n)}r=""}return this.each(R(n,e,r))},_a.property=function(n,t){if(arguments.length<2){if("string"==typeof n)return this.node()[n];for(t in n)this.each($(t,n[t]));return this}return this.each($(n,t))},_a.text=function(n){return arguments.length?this.each("function"==typeof n?function(){var t=n.apply(this,arguments);this.textContent=null==t?"":t}:null==n?function(){this.textContent=""}:function(){this.textContent=n}):this.node().textContent;

},_a.html=function(n){return arguments.length?this.each("function"==typeof n?function(){var t=n.apply(this,arguments);this.innerHTML=null==t?"":t}:null==n?function(){this.innerHTML=""}:function(){this.innerHTML=n}):this.node().innerHTML},_a.append=function(n){return n=U(n),this.select(function(){return this.appendChild(n.apply(this,arguments))})},_a.insert=function(n,t){return n=U(n),t=E(t),this.select(function(){return this.insertBefore(n.apply(this,arguments),t.apply(this,arguments)||null)})},_a.remove=function(){return this.each(j)},_a.data=function(n,t){function e(n,e){var r,o,i,a=n.length,f=e.length,h=Math.min(a,f),g=new Array(f),p=new Array(f),d=new Array(a);if(t){var m,v=new c,y=new Array(a);for(r=-1;++r<a;)v.has(m=t.call(o=n[r],o.__data__,r))?d[r]=o:v.set(m,o),y[r]=m;for(r=-1;++r<f;)(o=v.get(m=t.call(e,i=e[r],r)))?o!==!0&&(g[r]=o,o.__data__=i):p[r]=I(i),v.set(m,!0);for(r=-1;++r<a;)v.get(y[r])!==!0&&(d[r]=n[r])}else{for(r=-1;++r<h;)o=n[r],i=e[r],o?(o.__data__=i,g[r]=o):p[r]=I(i);for(;f>r;++r)p[r]=I(e[r]);for(;a>r;++r)d[r]=n[r]}p.update=g,p.parentNode=g.parentNode=d.parentNode=n.parentNode,u.push(p),l.push(g),s.push(d)}var r,o,i=-1,a=this.length;if(!arguments.length){for(n=new Array(a=(r=this[0]).length);++i<a;)(o=r[i])&&(n[i]=o.__data__);return n}var u=Y([]),l=A([]),s=A([]);if("function"==typeof n)for(;++i<a;)e(r=this[i],n.call(r,r.parentNode.__data__,i));else for(;++i<a;)e(r=this[i],n);return l.enter=function(){return u},l.exit=function(){return s},l},_a.datum=function(n){return arguments.length?this.property("__data__",n):this.property("__data__")},_a.filter=function(n){var t,e,r,o=[];"function"!=typeof n&&(n=F(n));for(var i=0,a=this.length;a>i;i++){o.push(t=[]),t.parentNode=(e=this[i]).parentNode;for(var u=0,l=e.length;l>u;u++)(r=e[u])&&n.call(r,r.__data__,u,i)&&t.push(r)}return A(o)},_a.order=function(){for(var n=-1,t=this.length;++n<t;)for(var e,r=this[n],o=r.length-1,i=r[o];--o>=0;)(e=r[o])&&(i&&i!==e.nextSibling&&i.parentNode.insertBefore(e,i),i=e);return this},_a.sort=function(n){n=O.apply(this,arguments);for(var t=-1,e=this.length;++t<e;)this[t].sort(n);return this.order()},_a.each=function(n){return H(this,function(t,e,r){n.call(t,t.__data__,e,r)})},_a.call=function(n){var t=oa(arguments);return n.apply(t[0]=this,t),this},_a.empty=function(){return!this.node()},_a.node=function(){for(var n=0,t=this.length;t>n;n++)for(var e=this[n],r=0,o=e.length;o>r;r++){var i=e[r];if(i)return i}return null},_a.size=function(){var n=0;return H(this,function(){++n}),n};var Ca=[];ea.selection.enter=Y,ea.selection.enter.prototype=Ca,Ca.append=_a.append,Ca.empty=_a.empty,Ca.node=_a.node,Ca.call=_a.call,Ca.size=_a.size,Ca.select=function(n){for(var t,e,r,o,i,a=[],u=-1,l=this.length;++u<l;){r=(o=this[u]).update,a.push(t=[]),t.parentNode=o.parentNode;for(var c=-1,s=o.length;++c<s;)(i=o[c])?(t.push(r[c]=e=n.call(o.parentNode,i.__data__,c,u)),e.__data__=i.__data__):t.push(null)}return A(a)},Ca.insert=function(n,t){return arguments.length<2&&(t=B(this)),_a.insert.call(this,n,t)},ea.select=function(t){var e;return"string"==typeof t?(e=[xa(t,ia)],e.parentNode=ia.documentElement):(e=[t],e.parentNode=n(t)),A([e])},ea.selectAll=function(n){var t;return"string"==typeof n?(t=oa(wa(n,ia)),t.parentNode=ia.documentElement):(t=n,t.parentNode=null),A([t])},_a.on=function(n,t,e){var r=arguments.length;if(3>r){if("string"!=typeof n){2>r&&(t=!1);for(e in n)this.each(Z(e,n[e],t));return this}if(2>r)return(r=this.node()["__on"+n])&&r._;e=!1}return this.each(Z(n,t,e))};var Sa=ea.map({mouseenter:"mouseover",mouseleave:"mouseout"});ia&&Sa.forEach(function(n){"on"+n in ia&&Sa.remove(n)});var Aa,Ea=0;ea.mouse=function(n){return G(n,C())};var qa=this.navigator&&/WebKit/.test(this.navigator.userAgent)?-1:0;ea.touch=function(n,t,e){if(arguments.length<3&&(e=t,t=C().changedTouches),t)for(var r,o=0,i=t.length;i>o;++o)if((r=t[o]).identifier===e)return G(n,r)},ea.behavior.drag=function(){function n(){this.on("mousedown.drag",i).on("touchstart.drag",a)}function e(n,t,e,i,a){return function(){function u(){var n,e,r=t(h,d);r&&(n=r[0]-M[0],e=r[1]-M[1],p|=n|e,M=r,g({type:"drag",x:r[0]+c[0],y:r[1]+c[1],dx:n,dy:e}))}function l(){t(h,d)&&(v.on(i+m,null).on(a+m,null),y(p&&ea.event.target===f),g({type:"dragend"}))}var c,s=this,f=ea.event.target,h=s.parentNode,g=r.of(s,arguments),p=0,d=n(),m=".drag"+(null==d?"":"-"+d),v=ea.select(e(f)).on(i+m,u).on(a+m,l),y=W(f),M=t(h,d);o?(c=o.apply(s,arguments),c=[c.x-M[0],c.y-M[1]]):c=[0,0],g({type:"dragstart"})}}var r=S(n,"drag","dragstart","dragend"),o=null,i=e(w,ea.mouse,t,"mousemove","mouseup"),a=e(J,ea.touch,y,"touchmove","touchend");return n.origin=function(t){return arguments.length?(o=t,n):o},ea.rebind(n,r,"on")},ea.touches=function(n,t){return arguments.length<2&&(t=C().touches),t?oa(t).map(function(t){var e=G(n,t);return e.identifier=t.identifier,e}):[]};var Na=1e-6,La=Na*Na,Da=Math.PI,Pa=2*Da,Ta=Pa-Na,za=Da/2,Ra=Da/180,$a=180/Da,Ua=Math.SQRT2,ja=2,Ia=4;ea.interpolateZoom=function(n,t){function e(n){var t=n*y;if(v){var e=rn(d),a=i/(ja*h)*(e*on(Ua*t+d)-en(d));return[r+a*c,o+a*s,i*e/rn(Ua*t+d)]}return[r+n*c,o+n*s,i*Math.exp(Ua*t)]}var r=n[0],o=n[1],i=n[2],a=t[0],u=t[1],l=t[2],c=a-r,s=u-o,f=c*c+s*s,h=Math.sqrt(f),g=(l*l-i*i+Ia*f)/(2*i*ja*h),p=(l*l-i*i-Ia*f)/(2*l*ja*h),d=Math.log(Math.sqrt(g*g+1)-g),m=Math.log(Math.sqrt(p*p+1)-p),v=m-d,y=(v||Math.log(l/i))/Ua;return e.duration=1e3*y,e},ea.behavior.zoom=function(){function n(n){n.on(L,f).on(Oa+".zoom",g).on("dblclick.zoom",p).on(T,h)}function e(n){return[(n[0]-C.x)/C.k,(n[1]-C.y)/C.k]}function r(n){return[n[0]*C.k+C.x,n[1]*C.k+C.y]}function o(n){C.k=Math.max(E[0],Math.min(E[1],n))}function i(n,t){t=r(t),C.x+=n[0]-t[0],C.y+=n[1]-t[1]}function a(t,e,r,a){t.__chart__={x:C.x,y:C.y,k:C.k},o(Math.pow(2,a)),i(m=e,r),t=ea.select(t),q>0&&(t=t.transition().duration(q)),t.call(n.event)}function u(){w&&w.domain(x.range().map(function(n){return(n-C.x)/C.k}).map(x.invert)),_&&_.domain(b.range().map(function(n){return(n-C.y)/C.k}).map(b.invert))}function l(n){N++||n({type:"zoomstart"})}function c(n){u(),n({type:"zoom",scale:C.k,translate:[C.x,C.y]})}function s(n){--N||n({type:"zoomend"}),m=null}function f(){function n(){f=1,i(ea.mouse(o),g),c(u)}function r(){h.on(D,null).on(P,null),p(f&&ea.event.target===a),s(u)}var o=this,a=ea.event.target,u=z.of(o,arguments),f=0,h=ea.select(t(o)).on(D,n).on(P,r),g=e(ea.mouse(o)),p=W(o);Rl.call(o),l(u)}function h(){function n(){var n=ea.touches(p);return g=C.k,n.forEach(function(n){n.identifier in m&&(m[n.identifier]=e(n))}),n}function t(){var t=ea.event.target;ea.select(t).on(x,r).on(w,u),b.push(t);for(var e=ea.event.changedTouches,o=0,i=e.length;i>o;++o)m[e[o].identifier]=null;var l=n(),c=Date.now();if(1===l.length){if(500>c-M){var s=l[0];a(p,s,m[s.identifier],Math.floor(Math.log(C.k)/Math.LN2)+1),k()}M=c}else if(l.length>1){var s=l[0],f=l[1],h=s[0]-f[0],g=s[1]-f[1];v=h*h+g*g}}function r(){var n,t,e,r,a=ea.touches(p);Rl.call(p);for(var u=0,l=a.length;l>u;++u,r=null)if(e=a[u],r=m[e.identifier]){if(t)break;n=e,t=r}if(r){var s=(s=e[0]-n[0])*s+(s=e[1]-n[1])*s,f=v&&Math.sqrt(s/v);n=[(n[0]+e[0])/2,(n[1]+e[1])/2],t=[(t[0]+r[0])/2,(t[1]+r[1])/2],o(f*g)}M=null,i(n,t),c(d)}function u(){if(ea.event.touches.length){for(var t=ea.event.changedTouches,e=0,r=t.length;r>e;++e)delete m[t[e].identifier];for(var o in m)return void n()}ea.selectAll(b).on(y,null),_.on(L,f).on(T,h),S(),s(d)}var g,p=this,d=z.of(p,arguments),m={},v=0,y=".zoom-"+ea.event.changedTouches[0].identifier,x="touchmove"+y,w="touchend"+y,b=[],_=ea.select(p),S=W(p);t(),l(d),_.on(L,null).on(T,t)}function g(){var n=z.of(this,arguments);y?clearTimeout(y):(d=e(m=v||ea.mouse(this)),Rl.call(this),l(n)),y=setTimeout(function(){y=null,s(n)},50),k(),o(Math.pow(2,.002*Fa())*C.k),i(m,d),c(n)}function p(){var n=ea.mouse(this),t=Math.log(C.k)/Math.LN2;a(this,n,e(n),ea.event.shiftKey?Math.ceil(t)-1:Math.floor(t)+1)}var d,m,v,y,M,x,w,b,_,C={x:0,y:0,k:1},A=[960,500],E=Ha,q=250,N=0,L="mousedown.zoom",D="mousemove.zoom",P="mouseup.zoom",T="touchstart.zoom",z=S(n,"zoomstart","zoom","zoomend");return Oa||(Oa="onwheel"in ia?(Fa=function(){return-ea.event.deltaY*(ea.event.deltaMode?120:1)},"wheel"):"onmousewheel"in ia?(Fa=function(){return ea.event.wheelDelta},"mousewheel"):(Fa=function(){return-ea.event.detail},"MozMousePixelScroll")),n.event=function(n){n.each(function(){var n=z.of(this,arguments),t=C;Tl?ea.select(this).transition().each("start.zoom",function(){C=this.__chart__||{x:0,y:0,k:1},l(n)}).tween("zoom:zoom",function(){var e=A[0],r=A[1],o=m?m[0]:e/2,i=m?m[1]:r/2,a=ea.interpolateZoom([(o-C.x)/C.k,(i-C.y)/C.k,e/C.k],[(o-t.x)/t.k,(i-t.y)/t.k,e/t.k]);return function(t){var r=a(t),u=e/r[2];this.__chart__=C={x:o-r[0]*u,y:i-r[1]*u,k:u},c(n)}}).each("interrupt.zoom",function(){s(n)}).each("end.zoom",function(){s(n)}):(this.__chart__=C,l(n),c(n),s(n))})},n.translate=function(t){return arguments.length?(C={x:+t[0],y:+t[1],k:C.k},u(),n):[C.x,C.y]},n.scale=function(t){return arguments.length?(C={x:C.x,y:C.y,k:+t},u(),n):C.k},n.scaleExtent=function(t){return arguments.length?(E=null==t?Ha:[+t[0],+t[1]],n):E},n.center=function(t){return arguments.length?(v=t&&[+t[0],+t[1]],n):v},n.size=function(t){return arguments.length?(A=t&&[+t[0],+t[1]],n):A},n.duration=function(t){return arguments.length?(q=+t,n):q},n.x=function(t){return arguments.length?(w=t,x=t.copy(),C={x:0,y:0,k:1},n):w},n.y=function(t){return arguments.length?(_=t,b=t.copy(),C={x:0,y:0,k:1},n):_},ea.rebind(n,z,"on")};var Fa,Oa,Ha=[0,1/0];ea.color=un,un.prototype.toString=function(){return this.rgb()+""},ea.hsl=ln;var Ya=ln.prototype=new un;Ya.brighter=function(n){return n=Math.pow(.7,arguments.length?n:1),new ln(this.h,this.s,this.l/n)},Ya.darker=function(n){return n=Math.pow(.7,arguments.length?n:1),new ln(this.h,this.s,n*this.l)},Ya.rgb=function(){return cn(this.h,this.s,this.l)},ea.hcl=sn;var Ba=sn.prototype=new un;Ba.brighter=function(n){return new sn(this.h,this.c,Math.min(100,this.l+Za*(arguments.length?n:1)))},Ba.darker=function(n){return new sn(this.h,this.c,Math.max(0,this.l-Za*(arguments.length?n:1)))},Ba.rgb=function(){return fn(this.h,this.c,this.l).rgb()},ea.lab=hn;var Za=18,Va=.95047,Xa=1,Wa=1.08883,Ga=hn.prototype=new un;Ga.brighter=function(n){return new hn(Math.min(100,this.l+Za*(arguments.length?n:1)),this.a,this.b)},Ga.darker=function(n){return new hn(Math.max(0,this.l-Za*(arguments.length?n:1)),this.a,this.b)},Ga.rgb=function(){return gn(this.l,this.a,this.b)},ea.rgb=yn;var Ja=yn.prototype=new un;Ja.brighter=function(n){n=Math.pow(.7,arguments.length?n:1);var t=this.r,e=this.g,r=this.b,o=30;return t||e||r?(t&&o>t&&(t=o),e&&o>e&&(e=o),r&&o>r&&(r=o),new yn(Math.min(255,t/n),Math.min(255,e/n),Math.min(255,r/n))):new yn(o,o,o)},Ja.darker=function(n){return n=Math.pow(.7,arguments.length?n:1),new yn(n*this.r,n*this.g,n*this.b)},Ja.hsl=function(){return _n(this.r,this.g,this.b)},Ja.toString=function(){return"#"+wn(this.r)+wn(this.g)+wn(this.b)};var Ka=ea.map({aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074});Ka.forEach(function(n,t){Ka.set(n,Mn(t))}),ea.functor=An,ea.xhr=En(y),ea.dsv=function(n,t){function e(n,e,i){arguments.length<3&&(i=e,e=null);var a=qn(n,t,null==e?r:o(e),i);return a.row=function(n){return arguments.length?a.response(null==(e=n)?r:o(n)):e},a}function r(n){return e.parse(n.responseText)}function o(n){return function(t){return e.parse(t.responseText,n)}}function i(t){return t.map(a).join(n)}function a(n){return u.test(n)?'"'+n.replace(/\"/g,'""')+'"':n}var u=new RegExp('["'+n+"\n]"),l=n.charCodeAt(0);return e.parse=function(n,t){var r;return e.parseRows(n,function(n,e){if(r)return r(n,e-1);var o=new Function("d","return {"+n.map(function(n,t){return JSON.stringify(n)+": d["+t+"]"}).join(",")+"}");r=t?function(n,e){return t(o(n),e)}:o})},e.parseRows=function(n,t){function e(){if(s>=c)return a;if(o)return o=!1,i;var t=s;if(34===n.charCodeAt(t)){for(var e=t;e++<c;)if(34===n.charCodeAt(e)){if(34!==n.charCodeAt(e+1))break;++e}s=e+2;var r=n.charCodeAt(e+1);return 13===r?(o=!0,10===n.charCodeAt(e+2)&&++s):10===r&&(o=!0),n.slice(t+1,e).replace(/""/g,'"')}for(;c>s;){var r=n.charCodeAt(s++),u=1;if(10===r)o=!0;else if(13===r)o=!0,10===n.charCodeAt(s)&&(++s,++u);else if(r!==l)continue;return n.slice(t,s-u)}return n.slice(t)}for(var r,o,i={},a={},u=[],c=n.length,s=0,f=0;(r=e())!==a;){for(var h=[];r!==i&&r!==a;)h.push(r),r=e();t&&null==(h=t(h,f++))||u.push(h)}return u},e.format=function(t){if(Array.isArray(t[0]))return e.formatRows(t);var r=new v,o=[];return t.forEach(function(n){for(var t in n)r.has(t)||o.push(r.add(t))}),[o.map(a).join(n)].concat(t.map(function(t){return o.map(function(n){return a(t[n])}).join(n)})).join("\n")},e.formatRows=function(n){return n.map(i).join("\n")},e},ea.csv=ea.dsv(",","text/csv"),ea.tsv=ea.dsv(" ","text/tab-separated-values");var Qa,nu,tu,eu,ru,ou=this[x(this,"requestAnimationFrame")]||function(n){setTimeout(n,17)};ea.timer=function(n,t,e){var r=arguments.length;2>r&&(t=0),3>r&&(e=Date.now());var o=e+t,i={c:n,t:o,f:!1,n:null};nu?nu.n=i:Qa=i,nu=i,tu||(eu=clearTimeout(eu),tu=1,ou(Dn))},ea.timer.flush=function(){Pn(),Tn()},ea.round=function(n,t){return t?Math.round(n*(t=Math.pow(10,t)))/t:Math.round(n)};var iu=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"].map(Rn);ea.formatPrefix=function(n,t){var e=0;return n&&(0>n&&(n*=-1),t&&(n=ea.round(n,zn(n,t))),e=1+Math.floor(1e-12+Math.log(n)/Math.LN10),e=Math.max(-24,Math.min(24,3*Math.floor((e-1)/3)))),iu[8+e/3]};var au=/(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i,uu=ea.map({b:function(n){return n.toString(2)},c:function(n){return String.fromCharCode(n)},o:function(n){return n.toString(8)},x:function(n){return n.toString(16)},X:function(n){return n.toString(16).toUpperCase()},g:function(n,t){return n.toPrecision(t)},e:function(n,t){return n.toExponential(t)},f:function(n,t){return n.toFixed(t)},r:function(n,t){return(n=ea.round(n,zn(n,t))).toFixed(Math.max(0,Math.min(20,zn(n*(1+1e-15),t))))}}),lu=ea.time={},cu=Date;jn.prototype={getDate:function(){return this._.getUTCDate()},getDay:function(){return this._.getUTCDay()},getFullYear:function(){return this._.getUTCFullYear()},getHours:function(){return this._.getUTCHours()},getMilliseconds:function(){return this._.getUTCMilliseconds()},getMinutes:function(){return this._.getUTCMinutes()},getMonth:function(){return this._.getUTCMonth()},getSeconds:function(){return this._.getUTCSeconds()},getTime:function(){return this._.getTime()},getTimezoneOffset:function(){return 0},valueOf:function(){return this._.valueOf()},setDate:function(){su.setUTCDate.apply(this._,arguments)},setDay:function(){su.setUTCDay.apply(this._,arguments)},setFullYear:function(){su.setUTCFullYear.apply(this._,arguments)},setHours:function(){su.setUTCHours.apply(this._,arguments)},setMilliseconds:function(){su.setUTCMilliseconds.apply(this._,arguments)},setMinutes:function(){su.setUTCMinutes.apply(this._,arguments)},setMonth:function(){su.setUTCMonth.apply(this._,arguments)},setSeconds:function(){su.setUTCSeconds.apply(this._,arguments)},setTime:function(){su.setTime.apply(this._,arguments)}};var su=Date.prototype;lu.year=In(function(n){return n=lu.day(n),n.setMonth(0,1),n},function(n,t){n.setFullYear(n.getFullYear()+t)},function(n){return n.getFullYear()}),lu.years=lu.year.range,lu.years.utc=lu.year.utc.range,lu.day=In(function(n){var t=new cu(2e3,0);return t.setFullYear(n.getFullYear(),n.getMonth(),n.getDate()),t},function(n,t){n.setDate(n.getDate()+t)},function(n){return n.getDate()-1}),lu.days=lu.day.range,lu.days.utc=lu.day.utc.range,lu.dayOfYear=function(n){var t=lu.year(n);return Math.floor((n-t-6e4*(n.getTimezoneOffset()-t.getTimezoneOffset()))/864e5)},["sunday","monday","tuesday","wednesday","thursday","friday","saturday"].forEach(function(n,t){t=7-t;var e=lu[n]=In(function(n){return(n=lu.day(n)).setDate(n.getDate()-(n.getDay()+t)%7),n},function(n,t){n.setDate(n.getDate()+7*Math.floor(t))},function(n){var e=lu.year(n).getDay();return Math.floor((lu.dayOfYear(n)+(e+t)%7)/7)-(e!==t)});lu[n+"s"]=e.range,lu[n+"s"].utc=e.utc.range,lu[n+"OfYear"]=function(n){var e=lu.year(n).getDay();return Math.floor((lu.dayOfYear(n)+(e+t)%7)/7)}}),lu.week=lu.sunday,lu.weeks=lu.sunday.range,lu.weeks.utc=lu.sunday.utc.range,lu.weekOfYear=lu.sundayOfYear;var fu={"-":"",_:" ",0:"0"},hu=/^\s*\d+/,gu=/^%/;ea.locale=function(n){return{numberFormat:$n(n),timeFormat:On(n)}};var pu=ea.locale({decimal:".",thousands:",",grouping:[3],currency:["$",""],dateTime:"%a %b %e %X %Y",date:"%m/%d/%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});ea.format=pu.numberFormat,ea.geo={},ct.prototype={s:0,t:0,add:function(n){st(n,this.t,du),st(du.s,this.s,this),this.s?this.t+=du.t:this.s=du.t},reset:function(){this.s=this.t=0},valueOf:function(){return this.s}};var du=new ct;ea.geo.stream=function(n,t){n&&mu.hasOwnProperty(n.type)?mu[n.type](n,t):ft(n,t)};var mu={Feature:function(n,t){ft(n.geometry,t)},FeatureCollection:function(n,t){for(var e=n.features,r=-1,o=e.length;++r<o;)ft(e[r].geometry,t)}},vu={Sphere:function(n,t){t.sphere()},Point:function(n,t){n=n.coordinates,t.point(n[0],n[1],n[2])},MultiPoint:function(n,t){for(var e=n.coordinates,r=-1,o=e.length;++r<o;)n=e[r],t.point(n[0],n[1],n[2])},LineString:function(n,t){ht(n.coordinates,t,0)},MultiLineString:function(n,t){for(var e=n.coordinates,r=-1,o=e.length;++r<o;)ht(e[r],t,0)},Polygon:function(n,t){gt(n.coordinates,t)},MultiPolygon:function(n,t){for(var e=n.coordinates,r=-1,o=e.length;++r<o;)gt(e[r],t)},GeometryCollection:function(n,t){for(var e=n.geometries,r=-1,o=e.length;++r<o;)ft(e[r],t)}};ea.geo.area=function(n){return yu=0,ea.geo.stream(n,xu),yu};var yu,Mu=new ct,xu={sphere:function(){yu+=4*Da},point:w,lineStart:w,lineEnd:w,polygonStart:function(){Mu.reset(),xu.lineStart=pt},polygonEnd:function(){var n=2*Mu;yu+=0>n?4*Da+n:n,xu.lineStart=xu.lineEnd=xu.point=w}};ea.geo.bounds=function(){function n(n,t){M.push(x=[s=n,h=n]),f>t&&(f=t),t>g&&(g=t)}function t(t,e){var r=dt([t*Ra,e*Ra]);if(v){var o=vt(v,r),i=[o[1],-o[0],0],a=vt(i,o);xt(a),a=wt(a);var l=t-p,c=l>0?1:-1,d=a[0]*$a*c,m=pa(l)>180;if(m^(d>c*p&&c*t>d)){var y=a[1]*$a;y>g&&(g=y)}else if(d=(d+360)%360-180,m^(d>c*p&&c*t>d)){var y=-a[1]*$a;f>y&&(f=y)}else f>e&&(f=e),e>g&&(g=e);m?p>t?u(s,t)>u(s,h)&&(h=t):u(t,h)>u(s,h)&&(s=t):h>=s?(s>t&&(s=t),t>h&&(h=t)):t>p?u(s,t)>u(s,h)&&(h=t):u(t,h)>u(s,h)&&(s=t)}else n(t,e);v=r,p=t}function e(){w.point=t}function r(){x[0]=s,x[1]=h,w.point=n,v=null}function o(n,e){if(v){var r=n-p;y+=pa(r)>180?r+(r>0?360:-360):r}else d=n,m=e;xu.point(n,e),t(n,e)}function i(){xu.lineStart()}function a(){o(d,m),xu.lineEnd(),pa(y)>Na&&(s=-(h=180)),x[0]=s,x[1]=h,v=null}function u(n,t){return(t-=n)<0?t+360:t}function l(n,t){return n[0]-t[0]}function c(n,t){return t[0]<=t[1]?t[0]<=n&&n<=t[1]:n<t[0]||t[1]<n}var s,f,h,g,p,d,m,v,y,M,x,w={point:n,lineStart:e,lineEnd:r,polygonStart:function(){w.point=o,w.lineStart=i,w.lineEnd=a,y=0,xu.polygonStart()},polygonEnd:function(){xu.polygonEnd(),w.point=n,w.lineStart=e,w.lineEnd=r,0>Mu?(s=-(h=180),f=-(g=90)):y>Na?g=90:-Na>y&&(f=-90),x[0]=s,x[1]=h}};return function(n){g=h=-(s=f=1/0),M=[],ea.geo.stream(n,w);var t=M.length;if(t){M.sort(l);for(var e,r=1,o=M[0],i=[o];t>r;++r)e=M[r],c(e[0],o)||c(e[1],o)?(u(o[0],e[1])>u(o[0],o[1])&&(o[1]=e[1]),u(e[0],o[1])>u(o[0],o[1])&&(o[0]=e[0])):i.push(o=e);for(var a,e,p=-(1/0),t=i.length-1,r=0,o=i[t];t>=r;o=e,++r)e=i[r],(a=u(o[1],e[0]))>p&&(p=a,s=e[0],h=o[1])}return M=x=null,s===1/0||f===1/0?[[0/0,0/0],[0/0,0/0]]:[[s,f],[h,g]]}}(),ea.geo.centroid=function(n){wu=bu=_u=ku=Cu=Su=Au=Eu=qu=Nu=Lu=0,ea.geo.stream(n,Du);var t=qu,e=Nu,r=Lu,o=t*t+e*e+r*r;return La>o&&(t=Su,e=Au,r=Eu,Na>bu&&(t=_u,e=ku,r=Cu),o=t*t+e*e+r*r,La>o)?[0/0,0/0]:[Math.atan2(e,t)*$a,tn(r/Math.sqrt(o))*$a]};var wu,bu,_u,ku,Cu,Su,Au,Eu,qu,Nu,Lu,Du={sphere:w,point:_t,lineStart:Ct,lineEnd:St,polygonStart:function(){Du.lineStart=At},polygonEnd:function(){Du.lineStart=Ct}},Pu=Pt(qt,$t,jt,[-Da,-Da/2]),Tu=1e9;ea.geo.clipExtent=function(){var n,t,e,r,o,i,a={stream:function(n){return o&&(o.valid=!1),o=i(n),o.valid=!0,o},extent:function(u){return arguments.length?(i=Ht(n=+u[0][0],t=+u[0][1],e=+u[1][0],r=+u[1][1]),o&&(o.valid=!1,o=null),a):[[n,t],[e,r]]}};return a.extent([[0,0],[960,500]])},(ea.geo.conicEqualArea=function(){return Yt(Bt)}).raw=Bt,ea.geo.albers=function(){return ea.geo.conicEqualArea().rotate([96,0]).center([-.6,38.7]).parallels([29.5,45.5]).scale(1070)},ea.geo.albersUsa=function(){function n(n){var i=n[0],a=n[1];return t=null,e(i,a),t||(r(i,a),t)||o(i,a),t}var t,e,r,o,i=ea.geo.albers(),a=ea.geo.conicEqualArea().rotate([154,0]).center([-2,58.5]).parallels([55,65]),u=ea.geo.conicEqualArea().rotate([157,0]).center([-3,19.9]).parallels([8,18]),l={point:function(n,e){t=[n,e]}};return n.invert=function(n){var t=i.scale(),e=i.translate(),r=(n[0]-e[0])/t,o=(n[1]-e[1])/t;return(o>=.12&&.234>o&&r>=-.425&&-.214>r?a:o>=.166&&.234>o&&r>=-.214&&-.115>r?u:i).invert(n)},n.stream=function(n){var t=i.stream(n),e=a.stream(n),r=u.stream(n);return{point:function(n,o){t.point(n,o),e.point(n,o),r.point(n,o)},sphere:function(){t.sphere(),e.sphere(),r.sphere()},lineStart:function(){t.lineStart(),e.lineStart(),r.lineStart()},lineEnd:function(){t.lineEnd(),e.lineEnd(),r.lineEnd()},polygonStart:function(){t.polygonStart(),e.polygonStart(),r.polygonStart()},polygonEnd:function(){t.polygonEnd(),e.polygonEnd(),r.polygonEnd()}}},n.precision=function(t){return arguments.length?(i.precision(t),a.precision(t),u.precision(t),n):i.precision()},n.scale=function(t){return arguments.length?(i.scale(t),a.scale(.35*t),u.scale(t),n.translate(i.translate())):i.scale()},n.translate=function(t){if(!arguments.length)return i.translate();var c=i.scale(),s=+t[0],f=+t[1];return e=i.translate(t).clipExtent([[s-.455*c,f-.238*c],[s+.455*c,f+.238*c]]).stream(l).point,r=a.translate([s-.307*c,f+.201*c]).clipExtent([[s-.425*c+Na,f+.12*c+Na],[s-.214*c-Na,f+.234*c-Na]]).stream(l).point,o=u.translate([s-.205*c,f+.212*c]).clipExtent([[s-.214*c+Na,f+.166*c+Na],[s-.115*c-Na,f+.234*c-Na]]).stream(l).point,n},n.scale(1070)};var zu,Ru,$u,Uu,ju,Iu,Fu={point:w,lineStart:w,lineEnd:w,polygonStart:function(){Ru=0,Fu.lineStart=Zt},polygonEnd:function(){Fu.lineStart=Fu.lineEnd=Fu.point=w,zu+=pa(Ru/2)}},Ou={point:Vt,lineStart:w,lineEnd:w,polygonStart:w,polygonEnd:w},Hu={point:Gt,lineStart:Jt,lineEnd:Kt,polygonStart:function(){Hu.lineStart=Qt},polygonEnd:function(){Hu.point=Gt,Hu.lineStart=Jt,Hu.lineEnd=Kt}};ea.geo.path=function(){function n(n){return n&&("function"==typeof u&&i.pointRadius(+u.apply(this,arguments)),a&&a.valid||(a=o(i)),ea.geo.stream(n,a)),i.result()}function t(){return a=null,n}var e,r,o,i,a,u=4.5;return n.area=function(n){return zu=0,ea.geo.stream(n,o(Fu)),zu},n.centroid=function(n){return _u=ku=Cu=Su=Au=Eu=qu=Nu=Lu=0,ea.geo.stream(n,o(Hu)),Lu?[qu/Lu,Nu/Lu]:Eu?[Su/Eu,Au/Eu]:Cu?[_u/Cu,ku/Cu]:[0/0,0/0]},n.bounds=function(n){return ju=Iu=-($u=Uu=1/0),ea.geo.stream(n,o(Ou)),[[$u,Uu],[ju,Iu]]},n.projection=function(n){return arguments.length?(o=(e=n)?n.stream||ee(n):y,t()):e},n.context=function(n){return arguments.length?(i=null==(r=n)?new Xt:new ne(n),"function"!=typeof u&&i.pointRadius(u),t()):r},n.pointRadius=function(t){return arguments.length?(u="function"==typeof t?t:(i.pointRadius(+t),+t),n):u},n.projection(ea.geo.albersUsa()).context(null)},ea.geo.transform=function(n){return{stream:function(t){var e=new re(t);for(var r in n)e[r]=n[r];return e}}},re.prototype={point:function(n,t){this.stream.point(n,t)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}},ea.geo.projection=ie,ea.geo.projectionMutator=ae,(ea.geo.equirectangular=function(){return ie(le)}).raw=le.invert=le,ea.geo.rotation=function(n){function t(t){return t=n(t[0]*Ra,t[1]*Ra),t[0]*=$a,t[1]*=$a,t}return n=se(n[0]%360*Ra,n[1]*Ra,n.length>2?n[2]*Ra:0),t.invert=function(t){return t=n.invert(t[0]*Ra,t[1]*Ra),t[0]*=$a,t[1]*=$a,t},t},ce.invert=le,ea.geo.circle=function(){function n(){var n="function"==typeof r?r.apply(this,arguments):r,t=se(-n[0]*Ra,-n[1]*Ra,0).invert,o=[];return e(null,null,1,{point:function(n,e){o.push(n=t(n,e)),n[0]*=$a,n[1]*=$a}}),{type:"Polygon",coordinates:[o]}}var t,e,r=[0,0],o=6;return n.origin=function(t){return arguments.length?(r=t,n):r},n.angle=function(r){return arguments.length?(e=pe((t=+r)*Ra,o*Ra),n):t},n.precision=function(r){return arguments.length?(e=pe(t*Ra,(o=+r)*Ra),n):o},n.angle(90)},ea.geo.distance=function(n,t){var e,r=(t[0]-n[0])*Ra,o=n[1]*Ra,i=t[1]*Ra,a=Math.sin(r),u=Math.cos(r),l=Math.sin(o),c=Math.cos(o),s=Math.sin(i),f=Math.cos(i);return Math.atan2(Math.sqrt((e=f*a)*e+(e=c*s-l*f*u)*e),l*s+c*f*u)},ea.geo.graticule=function(){function n(){return{type:"MultiLineString",coordinates:t()}}function t(){return ea.range(Math.ceil(i/m)*m,o,m).map(h).concat(ea.range(Math.ceil(c/v)*v,l,v).map(g)).concat(ea.range(Math.ceil(r/p)*p,e,p).filter(function(n){return pa(n%m)>Na}).map(s)).concat(ea.range(Math.ceil(u/d)*d,a,d).filter(function(n){return pa(n%v)>Na}).map(f))}var e,r,o,i,a,u,l,c,s,f,h,g,p=10,d=p,m=90,v=360,y=2.5;return n.lines=function(){return t().map(function(n){return{type:"LineString",coordinates:n}})},n.outline=function(){return{type:"Polygon",coordinates:[h(i).concat(g(l).slice(1),h(o).reverse().slice(1),g(c).reverse().slice(1))]}},n.extent=function(t){return arguments.length?n.majorExtent(t).minorExtent(t):n.minorExtent()},n.majorExtent=function(t){return arguments.length?(i=+t[0][0],o=+t[1][0],c=+t[0][1],l=+t[1][1],i>o&&(t=i,i=o,o=t),c>l&&(t=c,c=l,l=t),n.precision(y)):[[i,c],[o,l]]},n.minorExtent=function(t){return arguments.length?(r=+t[0][0],e=+t[1][0],u=+t[0][1],a=+t[1][1],r>e&&(t=r,r=e,e=t),u>a&&(t=u,u=a,a=t),n.precision(y)):[[r,u],[e,a]]},n.step=function(t){return arguments.length?n.majorStep(t).minorStep(t):n.minorStep()},n.majorStep=function(t){return arguments.length?(m=+t[0],v=+t[1],n):[m,v]},n.minorStep=function(t){return arguments.length?(p=+t[0],d=+t[1],n):[p,d]},n.precision=function(t){return arguments.length?(y=+t,s=me(u,a,90),f=ve(r,e,y),h=me(c,l,90),g=ve(i,o,y),n):y},n.majorExtent([[-180,-90+Na],[180,90-Na]]).minorExtent([[-180,-80-Na],[180,80+Na]])},ea.geo.greatArc=function(){function n(){return{type:"LineString",coordinates:[t||r.apply(this,arguments),e||o.apply(this,arguments)]}}var t,e,r=ye,o=Me;return n.distance=function(){return ea.geo.distance(t||r.apply(this,arguments),e||o.apply(this,arguments))},n.source=function(e){return arguments.length?(r=e,t="function"==typeof e?null:e,n):r},n.target=function(t){return arguments.length?(o=t,e="function"==typeof t?null:t,n):o},n.precision=function(){return arguments.length?n:0},n},ea.geo.interpolate=function(n,t){return xe(n[0]*Ra,n[1]*Ra,t[0]*Ra,t[1]*Ra)},ea.geo.length=function(n){return Yu=0,ea.geo.stream(n,Bu),Yu};var Yu,Bu={sphere:w,point:w,lineStart:we,lineEnd:w,polygonStart:w,polygonEnd:w},Zu=be(function(n){return Math.sqrt(2/(1+n))},function(n){return 2*Math.asin(n/2)});(ea.geo.azimuthalEqualArea=function(){return ie(Zu)}).raw=Zu;var Vu=be(function(n){var t=Math.acos(n);return t&&t/Math.sin(t)},y);(ea.geo.azimuthalEquidistant=function(){return ie(Vu)}).raw=Vu,(ea.geo.conicConformal=function(){return Yt(_e)}).raw=_e,(ea.geo.conicEquidistant=function(){return Yt(ke)}).raw=ke;var Xu=be(function(n){return 1/n},Math.atan);(ea.geo.gnomonic=function(){return ie(Xu)}).raw=Xu,Ce.invert=function(n,t){return[n,2*Math.atan(Math.exp(t))-za]},(ea.geo.mercator=function(){return Se(Ce)}).raw=Ce;var Wu=be(function(){return 1},Math.asin);(ea.geo.orthographic=function(){return ie(Wu)}).raw=Wu;var Gu=be(function(n){return 1/(1+n)},function(n){return 2*Math.atan(n)});(ea.geo.stereographic=function(){return ie(Gu)}).raw=Gu,Ae.invert=function(n,t){return[-t,2*Math.atan(Math.exp(n))-za]},(ea.geo.transverseMercator=function(){var n=Se(Ae),t=n.center,e=n.rotate;return n.center=function(n){return n?t([-n[1],n[0]]):(n=t(),[n[1],-n[0]])},n.rotate=function(n){return n?e([n[0],n[1],n.length>2?n[2]+90:90]):(n=e(),[n[0],n[1],n[2]-90])},e([0,0,90])}).raw=Ae,ea.geom={},ea.geom.hull=function(n){function t(n){if(n.length<3)return[];var t,o=An(e),i=An(r),a=n.length,u=[],l=[];for(t=0;a>t;t++)u.push([+o.call(this,n[t],t),+i.call(this,n[t],t),t]);for(u.sort(Le),t=0;a>t;t++)l.push([u[t][0],-u[t][1]]);var c=Ne(u),s=Ne(l),f=s[0]===c[0],h=s[s.length-1]===c[c.length-1],g=[];for(t=c.length-1;t>=0;--t)g.push(n[u[c[t]][2]]);for(t=+f;t<s.length-h;++t)g.push(n[u[s[t]][2]]);return g}var e=Ee,r=qe;return arguments.length?t(n):(t.x=function(n){return arguments.length?(e=n,t):e},t.y=function(n){return arguments.length?(r=n,t):r},t)},ea.geom.polygon=function(n){return Ma(n,Ju),n};var Ju=ea.geom.polygon.prototype=[];Ju.area=function(){for(var n,t=-1,e=this.length,r=this[e-1],o=0;++t<e;)n=r,r=this[t],o+=n[1]*r[0]-n[0]*r[1];return.5*o},Ju.centroid=function(n){var t,e,r=-1,o=this.length,i=0,a=0,u=this[o-1];for(arguments.length||(n=-1/(6*this.area()));++r<o;)t=u,u=this[r],e=t[0]*u[1]-u[0]*t[1],i+=(t[0]+u[0])*e,
a+=(t[1]+u[1])*e;return[i*n,a*n]},Ju.clip=function(n){for(var t,e,r,o,i,a,u=Te(n),l=-1,c=this.length-Te(this),s=this[c-1];++l<c;){for(t=n.slice(),n.length=0,o=this[l],i=t[(r=t.length-u)-1],e=-1;++e<r;)a=t[e],De(a,s,o)?(De(i,s,o)||n.push(Pe(i,a,s,o)),n.push(a)):De(i,s,o)&&n.push(Pe(i,a,s,o)),i=a;u&&n.push(n[0]),s=o}return n};var Ku,Qu,nl,tl,el,rl=[],ol=[];Oe.prototype.prepare=function(){for(var n,t=this.edges,e=t.length;e--;)n=t[e].edge,n.b&&n.a||t.splice(e,1);return t.sort(Ye),t.length},nr.prototype={start:function(){return this.edge.l===this.site?this.edge.a:this.edge.b},end:function(){return this.edge.l===this.site?this.edge.b:this.edge.a}},tr.prototype={insert:function(n,t){var e,r,o;if(n){if(t.P=n,t.N=n.N,n.N&&(n.N.P=t),n.N=t,n.R){for(n=n.R;n.L;)n=n.L;n.L=t}else n.R=t;e=n}else this._?(n=ir(this._),t.P=null,t.N=n,n.P=n.L=t,e=n):(t.P=t.N=null,this._=t,e=null);for(t.L=t.R=null,t.U=e,t.C=!0,n=t;e&&e.C;)r=e.U,e===r.L?(o=r.R,o&&o.C?(e.C=o.C=!1,r.C=!0,n=r):(n===e.R&&(rr(this,e),n=e,e=n.U),e.C=!1,r.C=!0,or(this,r))):(o=r.L,o&&o.C?(e.C=o.C=!1,r.C=!0,n=r):(n===e.L&&(or(this,e),n=e,e=n.U),e.C=!1,r.C=!0,rr(this,r))),e=n.U;this._.C=!1},remove:function(n){n.N&&(n.N.P=n.P),n.P&&(n.P.N=n.N),n.N=n.P=null;var t,e,r,o=n.U,i=n.L,a=n.R;if(e=i?a?ir(a):i:a,o?o.L===n?o.L=e:o.R=e:this._=e,i&&a?(r=e.C,e.C=n.C,e.L=i,i.U=e,e!==a?(o=e.U,e.U=n.U,n=e.R,o.L=n,e.R=a,a.U=e):(e.U=o,o=e,n=e.R)):(r=n.C,n=e),n&&(n.U=o),!r){if(n&&n.C)return void(n.C=!1);do{if(n===this._)break;if(n===o.L){if(t=o.R,t.C&&(t.C=!1,o.C=!0,rr(this,o),t=o.R),t.L&&t.L.C||t.R&&t.R.C){t.R&&t.R.C||(t.L.C=!1,t.C=!0,or(this,t),t=o.R),t.C=o.C,o.C=t.R.C=!1,rr(this,o),n=this._;break}}else if(t=o.L,t.C&&(t.C=!1,o.C=!0,or(this,o),t=o.L),t.L&&t.L.C||t.R&&t.R.C){t.L&&t.L.C||(t.R.C=!1,t.C=!0,rr(this,t),t=o.L),t.C=o.C,o.C=t.L.C=!1,or(this,o),n=this._;break}t.C=!0,n=o,o=o.U}while(!n.C);n&&(n.C=!1)}}},ea.geom.voronoi=function(n){function t(n){var t=new Array(n.length),r=u[0][0],o=u[0][1],i=u[1][0],a=u[1][1];return ar(e(n),u).cells.forEach(function(e,u){var l=e.edges,c=e.site,s=t[u]=l.length?l.map(function(n){var t=n.start();return[t.x,t.y]}):c.x>=r&&c.x<=i&&c.y>=o&&c.y<=a?[[r,a],[i,a],[i,o],[r,o]]:[];s.point=n[u]}),t}function e(n){return n.map(function(n,t){return{x:Math.round(i(n,t)/Na)*Na,y:Math.round(a(n,t)/Na)*Na,i:t}})}var r=Ee,o=qe,i=r,a=o,u=il;return n?t(n):(t.links=function(n){return ar(e(n)).edges.filter(function(n){return n.l&&n.r}).map(function(t){return{source:n[t.l.i],target:n[t.r.i]}})},t.triangles=function(n){var t=[];return ar(e(n)).cells.forEach(function(e,r){for(var o,i,a=e.site,u=e.edges.sort(Ye),l=-1,c=u.length,s=u[c-1].edge,f=s.l===a?s.r:s.l;++l<c;)o=s,i=f,s=u[l].edge,f=s.l===a?s.r:s.l,r<i.i&&r<f.i&&lr(a,i,f)<0&&t.push([n[r],n[i.i],n[f.i]])}),t},t.x=function(n){return arguments.length?(i=An(r=n),t):r},t.y=function(n){return arguments.length?(a=An(o=n),t):o},t.clipExtent=function(n){return arguments.length?(u=null==n?il:n,t):u===il?null:u},t.size=function(n){return arguments.length?t.clipExtent(n&&[[0,0],n]):u===il?null:u&&u[1]},t)};var il=[[-1e6,-1e6],[1e6,1e6]];ea.geom.delaunay=function(n){return ea.geom.voronoi().triangles(n)},ea.geom.quadtree=function(n,t,e,r,o){function i(n){function i(n,t,e,r,o,i,a,u){if(!isNaN(e)&&!isNaN(r))if(n.leaf){var l=n.x,s=n.y;if(null!=l)if(pa(l-e)+pa(s-r)<.01)c(n,t,e,r,o,i,a,u);else{var f=n.point;n.x=n.y=n.point=null,c(n,f,l,s,o,i,a,u),c(n,t,e,r,o,i,a,u)}else n.x=e,n.y=r,n.point=t}else c(n,t,e,r,o,i,a,u)}function c(n,t,e,r,o,a,u,l){var c=.5*(o+u),s=.5*(a+l),f=e>=c,h=r>=s,g=h<<1|f;n.leaf=!1,n=n.nodes[g]||(n.nodes[g]=fr()),f?o=c:u=c,h?a=s:l=s,i(n,t,e,r,o,a,u,l)}var s,f,h,g,p,d,m,v,y,M=An(u),x=An(l);if(null!=t)d=t,m=e,v=r,y=o;else if(v=y=-(d=m=1/0),f=[],h=[],p=n.length,a)for(g=0;p>g;++g)s=n[g],s.x<d&&(d=s.x),s.y<m&&(m=s.y),s.x>v&&(v=s.x),s.y>y&&(y=s.y),f.push(s.x),h.push(s.y);else for(g=0;p>g;++g){var w=+M(s=n[g],g),b=+x(s,g);d>w&&(d=w),m>b&&(m=b),w>v&&(v=w),b>y&&(y=b),f.push(w),h.push(b)}var _=v-d,k=y-m;_>k?y=m+_:v=d+k;var C=fr();if(C.add=function(n){i(C,n,+M(n,++g),+x(n,g),d,m,v,y)},C.visit=function(n){hr(n,C,d,m,v,y)},C.find=function(n){return gr(C,n[0],n[1],d,m,v,y)},g=-1,null==t){for(;++g<p;)i(C,n[g],f[g],h[g],d,m,v,y);--g}else n.forEach(C.add);return f=h=n=s=null,C}var a,u=Ee,l=qe;return(a=arguments.length)?(u=cr,l=sr,3===a&&(o=e,r=t,e=t=0),i(n)):(i.x=function(n){return arguments.length?(u=n,i):u},i.y=function(n){return arguments.length?(l=n,i):l},i.extent=function(n){return arguments.length?(null==n?t=e=r=o=null:(t=+n[0][0],e=+n[0][1],r=+n[1][0],o=+n[1][1]),i):null==t?null:[[t,e],[r,o]]},i.size=function(n){return arguments.length?(null==n?t=e=r=o=null:(t=e=0,r=+n[0],o=+n[1]),i):null==t?null:[r-t,o-e]},i)},ea.interpolateRgb=pr,ea.interpolateObject=dr,ea.interpolateNumber=mr,ea.interpolateString=vr;var al=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,ul=new RegExp(al.source,"g");ea.interpolate=yr,ea.interpolators=[function(n,t){var e=typeof t;return("string"===e?Ka.has(t)||/^(#|rgb\(|hsl\()/.test(t)?pr:vr:t instanceof un?pr:Array.isArray(t)?Mr:"object"===e&&isNaN(t)?dr:mr)(n,t)}],ea.interpolateArray=Mr;var ll=function(){return y},cl=ea.map({linear:ll,poly:Sr,quad:function(){return _r},cubic:function(){return kr},sin:function(){return Ar},exp:function(){return Er},circle:function(){return qr},elastic:Nr,back:Lr,bounce:function(){return Dr}}),sl=ea.map({"in":y,out:wr,"in-out":br,"out-in":function(n){return br(wr(n))}});ea.ease=function(n){var t=n.indexOf("-"),e=t>=0?n.slice(0,t):n,r=t>=0?n.slice(t+1):"in";return e=cl.get(e)||ll,r=sl.get(r)||y,xr(r(e.apply(null,ra.call(arguments,1))))},ea.interpolateHcl=Pr,ea.interpolateHsl=Tr,ea.interpolateLab=zr,ea.interpolateRound=Rr,ea.transform=function(n){var t=ia.createElementNS(ea.ns.prefix.svg,"g");return(ea.transform=function(n){if(null!=n){t.setAttribute("transform",n);var e=t.transform.baseVal.consolidate()}return new $r(e?e.matrix:fl)})(n)},$r.prototype.toString=function(){return"translate("+this.translate+")rotate("+this.rotate+")skewX("+this.skew+")scale("+this.scale+")"};var fl={a:1,b:0,c:0,d:1,e:0,f:0};ea.interpolateTransform=Fr,ea.layout={},ea.layout.bundle=function(){return function(n){for(var t=[],e=-1,r=n.length;++e<r;)t.push(Yr(n[e]));return t}},ea.layout.chord=function(){function n(){var n,c,f,h,g,p={},d=[],m=ea.range(i),v=[];for(e=[],r=[],n=0,h=-1;++h<i;){for(c=0,g=-1;++g<i;)c+=o[h][g];d.push(c),v.push(ea.range(i)),n+=c}for(a&&m.sort(function(n,t){return a(d[n],d[t])}),u&&v.forEach(function(n,t){n.sort(function(n,e){return u(o[t][n],o[t][e])})}),n=(Pa-s*i)/n,c=0,h=-1;++h<i;){for(f=c,g=-1;++g<i;){var y=m[h],M=v[y][g],x=o[y][M],w=c,b=c+=x*n;p[y+"-"+M]={index:y,subindex:M,startAngle:w,endAngle:b,value:x}}r[y]={index:y,startAngle:f,endAngle:c,value:(c-f)/n},c+=s}for(h=-1;++h<i;)for(g=h-1;++g<i;){var _=p[h+"-"+g],k=p[g+"-"+h];(_.value||k.value)&&e.push(_.value<k.value?{source:k,target:_}:{source:_,target:k})}l&&t()}function t(){e.sort(function(n,t){return l((n.source.value+n.target.value)/2,(t.source.value+t.target.value)/2)})}var e,r,o,i,a,u,l,c={},s=0;return c.matrix=function(n){return arguments.length?(i=(o=n)&&o.length,e=r=null,c):o},c.padding=function(n){return arguments.length?(s=n,e=r=null,c):s},c.sortGroups=function(n){return arguments.length?(a=n,e=r=null,c):a},c.sortSubgroups=function(n){return arguments.length?(u=n,e=null,c):u},c.sortChords=function(n){return arguments.length?(l=n,e&&t(),c):l},c.chords=function(){return e||n(),e},c.groups=function(){return r||n(),r},c},ea.layout.force=function(){function n(n){return function(t,e,r,o){if(t.point!==n){var i=t.cx-n.x,a=t.cy-n.y,u=o-e,l=i*i+a*a;if(l>u*u/m){if(p>l){var c=t.charge/l;n.px-=i*c,n.py-=a*c}return!0}if(t.point&&l&&p>l){var c=t.pointCharge/l;n.px-=i*c,n.py-=a*c}}return!t.charge}}function t(n){n.px=ea.event.x,n.py=ea.event.y,u.resume()}var e,r,o,i,a,u={},l=ea.dispatch("start","tick","end"),c=[1,1],s=.9,f=hl,h=gl,g=-30,p=pl,d=.1,m=.64,v=[],M=[];return u.tick=function(){if((r*=.99)<.005)return l.end({type:"end",alpha:r=0}),!0;var t,e,u,f,h,p,m,y,x,w=v.length,b=M.length;for(e=0;b>e;++e)u=M[e],f=u.source,h=u.target,y=h.x-f.x,x=h.y-f.y,(p=y*y+x*x)&&(p=r*i[e]*((p=Math.sqrt(p))-o[e])/p,y*=p,x*=p,h.x-=y*(m=f.weight/(h.weight+f.weight)),h.y-=x*m,f.x+=y*(m=1-m),f.y+=x*m);if((m=r*d)&&(y=c[0]/2,x=c[1]/2,e=-1,m))for(;++e<w;)u=v[e],u.x+=(y-u.x)*m,u.y+=(x-u.y)*m;if(g)for(Jr(t=ea.geom.quadtree(v),r,a),e=-1;++e<w;)(u=v[e]).fixed||t.visit(n(u));for(e=-1;++e<w;)u=v[e],u.fixed?(u.x=u.px,u.y=u.py):(u.x-=(u.px-(u.px=u.x))*s,u.y-=(u.py-(u.py=u.y))*s);l.tick({type:"tick",alpha:r})},u.nodes=function(n){return arguments.length?(v=n,u):v},u.links=function(n){return arguments.length?(M=n,u):M},u.size=function(n){return arguments.length?(c=n,u):c},u.linkDistance=function(n){return arguments.length?(f="function"==typeof n?n:+n,u):f},u.distance=u.linkDistance,u.linkStrength=function(n){return arguments.length?(h="function"==typeof n?n:+n,u):h},u.friction=function(n){return arguments.length?(s=+n,u):s},u.charge=function(n){return arguments.length?(g="function"==typeof n?n:+n,u):g},u.chargeDistance=function(n){return arguments.length?(p=n*n,u):Math.sqrt(p)},u.gravity=function(n){return arguments.length?(d=+n,u):d},u.theta=function(n){return arguments.length?(m=n*n,u):Math.sqrt(m)},u.alpha=function(n){return arguments.length?(n=+n,r?r=n>0?n:0:n>0&&(l.start({type:"start",alpha:r=n}),ea.timer(u.tick)),u):r},u.start=function(){function n(n,r){if(!e){for(e=new Array(l),u=0;l>u;++u)e[u]=[];for(u=0;s>u;++u){var o=M[u];e[o.source.index].push(o.target),e[o.target.index].push(o.source)}}for(var i,a=e[t],u=-1,c=a.length;++u<c;)if(!isNaN(i=a[u][n]))return i;return Math.random()*r}var t,e,r,l=v.length,s=M.length,p=c[0],d=c[1];for(t=0;l>t;++t)(r=v[t]).index=t,r.weight=0;for(t=0;s>t;++t)r=M[t],"number"==typeof r.source&&(r.source=v[r.source]),"number"==typeof r.target&&(r.target=v[r.target]),++r.source.weight,++r.target.weight;for(t=0;l>t;++t)r=v[t],isNaN(r.x)&&(r.x=n("x",p)),isNaN(r.y)&&(r.y=n("y",d)),isNaN(r.px)&&(r.px=r.x),isNaN(r.py)&&(r.py=r.y);if(o=[],"function"==typeof f)for(t=0;s>t;++t)o[t]=+f.call(this,M[t],t);else for(t=0;s>t;++t)o[t]=f;if(i=[],"function"==typeof h)for(t=0;s>t;++t)i[t]=+h.call(this,M[t],t);else for(t=0;s>t;++t)i[t]=h;if(a=[],"function"==typeof g)for(t=0;l>t;++t)a[t]=+g.call(this,v[t],t);else for(t=0;l>t;++t)a[t]=g;return u.resume()},u.resume=function(){return u.alpha(.1)},u.stop=function(){return u.alpha(0)},u.drag=function(){return e||(e=ea.behavior.drag().origin(y).on("dragstart.force",Vr).on("drag.force",t).on("dragend.force",Xr)),arguments.length?void this.on("mouseover.force",Wr).on("mouseout.force",Gr).call(e):e},ea.rebind(u,l,"on")};var hl=20,gl=1,pl=1/0;ea.layout.hierarchy=function(){function n(o){var i,a=[o],u=[];for(o.depth=0;null!=(i=a.pop());)if(u.push(i),(c=e.call(n,i,i.depth))&&(l=c.length)){for(var l,c,s;--l>=0;)a.push(s=c[l]),s.parent=i,s.depth=i.depth+1;r&&(i.value=0),i.children=c}else r&&(i.value=+r.call(n,i,i.depth)||0),delete i.children;return no(o,function(n){var e,o;t&&(e=n.children)&&e.sort(t),r&&(o=n.parent)&&(o.value+=n.value)}),u}var t=ro,e=to,r=eo;return n.sort=function(e){return arguments.length?(t=e,n):t},n.children=function(t){return arguments.length?(e=t,n):e},n.value=function(t){return arguments.length?(r=t,n):r},n.revalue=function(t){return r&&(Qr(t,function(n){n.children&&(n.value=0)}),no(t,function(t){var e;t.children||(t.value=+r.call(n,t,t.depth)||0),(e=t.parent)&&(e.value+=t.value)})),t},n},ea.layout.partition=function(){function n(t,e,r,o){var i=t.children;if(t.x=e,t.y=t.depth*o,t.dx=r,t.dy=o,i&&(a=i.length)){var a,u,l,c=-1;for(r=t.value?r/t.value:0;++c<a;)n(u=i[c],e,l=u.value*r,o),e+=l}}function t(n){var e=n.children,r=0;if(e&&(o=e.length))for(var o,i=-1;++i<o;)r=Math.max(r,t(e[i]));return 1+r}function e(e,i){var a=r.call(this,e,i);return n(a[0],0,o[0],o[1]/t(a[0])),a}var r=ea.layout.hierarchy(),o=[1,1];return e.size=function(n){return arguments.length?(o=n,e):o},Kr(e,r)},ea.layout.pie=function(){function n(a){var u,l=a.length,c=a.map(function(e,r){return+t.call(n,e,r)}),s=+("function"==typeof r?r.apply(this,arguments):r),f=("function"==typeof o?o.apply(this,arguments):o)-s,h=Math.min(Math.abs(f)/l,+("function"==typeof i?i.apply(this,arguments):i)),g=h*(0>f?-1:1),p=(f-l*g)/ea.sum(c),d=ea.range(l),m=[];return null!=e&&d.sort(e===dl?function(n,t){return c[t]-c[n]}:function(n,t){return e(a[n],a[t])}),d.forEach(function(n){m[n]={data:a[n],value:u=c[n],startAngle:s,endAngle:s+=u*p+g,padAngle:h}}),m}var t=Number,e=dl,r=0,o=Pa,i=0;return n.value=function(e){return arguments.length?(t=e,n):t},n.sort=function(t){return arguments.length?(e=t,n):e},n.startAngle=function(t){return arguments.length?(r=t,n):r},n.endAngle=function(t){return arguments.length?(o=t,n):o},n.padAngle=function(t){return arguments.length?(i=t,n):i},n};var dl={};ea.layout.stack=function(){function n(u,l){if(!(h=u.length))return u;var c=u.map(function(e,r){return t.call(n,e,r)}),s=c.map(function(t){return t.map(function(t,e){return[i.call(n,t,e),a.call(n,t,e)]})}),f=e.call(n,s,l);c=ea.permute(c,f),s=ea.permute(s,f);var h,g,p,d,m=r.call(n,s,l),v=c[0].length;for(p=0;v>p;++p)for(o.call(n,c[0][p],d=m[p],s[0][p][1]),g=1;h>g;++g)o.call(n,c[g][p],d+=s[g-1][p][1],s[g][p][1]);return u}var t=y,e=lo,r=co,o=uo,i=io,a=ao;return n.values=function(e){return arguments.length?(t=e,n):t},n.order=function(t){return arguments.length?(e="function"==typeof t?t:ml.get(t)||lo,n):e},n.offset=function(t){return arguments.length?(r="function"==typeof t?t:vl.get(t)||co,n):r},n.x=function(t){return arguments.length?(i=t,n):i},n.y=function(t){return arguments.length?(a=t,n):a},n.out=function(t){return arguments.length?(o=t,n):o},n};var ml=ea.map({"inside-out":function(n){var t,e,r=n.length,o=n.map(so),i=n.map(fo),a=ea.range(r).sort(function(n,t){return o[n]-o[t]}),u=0,l=0,c=[],s=[];for(t=0;r>t;++t)e=a[t],l>u?(u+=i[e],c.push(e)):(l+=i[e],s.push(e));return s.reverse().concat(c)},reverse:function(n){return ea.range(n.length).reverse()},"default":lo}),vl=ea.map({silhouette:function(n){var t,e,r,o=n.length,i=n[0].length,a=[],u=0,l=[];for(e=0;i>e;++e){for(t=0,r=0;o>t;t++)r+=n[t][e][1];r>u&&(u=r),a.push(r)}for(e=0;i>e;++e)l[e]=(u-a[e])/2;return l},wiggle:function(n){var t,e,r,o,i,a,u,l,c,s=n.length,f=n[0],h=f.length,g=[];for(g[0]=l=c=0,e=1;h>e;++e){for(t=0,o=0;s>t;++t)o+=n[t][e][1];for(t=0,i=0,u=f[e][0]-f[e-1][0];s>t;++t){for(r=0,a=(n[t][e][1]-n[t][e-1][1])/(2*u);t>r;++r)a+=(n[r][e][1]-n[r][e-1][1])/u;i+=a*n[t][e][1]}g[e]=l-=o?i/o*u:0,c>l&&(c=l)}for(e=0;h>e;++e)g[e]-=c;return g},expand:function(n){var t,e,r,o=n.length,i=n[0].length,a=1/o,u=[];for(e=0;i>e;++e){for(t=0,r=0;o>t;t++)r+=n[t][e][1];if(r)for(t=0;o>t;t++)n[t][e][1]/=r;else for(t=0;o>t;t++)n[t][e][1]=a}for(e=0;i>e;++e)u[e]=0;return u},zero:co});ea.layout.histogram=function(){function n(n,i){for(var a,u,l=[],c=n.map(e,this),s=r.call(this,c,i),f=o.call(this,s,c,i),i=-1,h=c.length,g=f.length-1,p=t?1:1/h;++i<g;)a=l[i]=[],a.dx=f[i+1]-(a.x=f[i]),a.y=0;if(g>0)for(i=-1;++i<h;)u=c[i],u>=s[0]&&u<=s[1]&&(a=l[ea.bisect(f,u,1,g)-1],a.y+=p,a.push(n[i]));return l}var t=!0,e=Number,r=mo,o=go;return n.value=function(t){return arguments.length?(e=t,n):e},n.range=function(t){return arguments.length?(r=An(t),n):r},n.bins=function(t){return arguments.length?(o="number"==typeof t?function(n){return po(n,t)}:An(t),n):o},n.frequency=function(e){return arguments.length?(t=!!e,n):t},n},ea.layout.pack=function(){function n(n,i){var a=e.call(this,n,i),u=a[0],l=o[0],c=o[1],s=null==t?Math.sqrt:"function"==typeof t?t:function(){return t};if(u.x=u.y=0,no(u,function(n){n.r=+s(n.value)}),no(u,wo),r){var f=r*(t?1:Math.max(2*u.r/l,2*u.r/c))/2;no(u,function(n){n.r+=f}),no(u,wo),no(u,function(n){n.r-=f})}return ko(u,l/2,c/2,t?1:1/Math.max(2*u.r/l,2*u.r/c)),a}var t,e=ea.layout.hierarchy().sort(vo),r=0,o=[1,1];return n.size=function(t){return arguments.length?(o=t,n):o},n.radius=function(e){return arguments.length?(t=null==e||"function"==typeof e?e:+e,n):t},n.padding=function(t){return arguments.length?(r=+t,n):r},Kr(n,e)},ea.layout.tree=function(){function n(n,o){var s=a.call(this,n,o),f=s[0],h=t(f);if(no(h,e),h.parent.m=-h.z,Qr(h,r),c)Qr(f,i);else{var g=f,p=f,d=f;Qr(f,function(n){n.x<g.x&&(g=n),n.x>p.x&&(p=n),n.depth>d.depth&&(d=n)});var m=u(g,p)/2-g.x,v=l[0]/(p.x+u(p,g)/2+m),y=l[1]/(d.depth||1);Qr(f,function(n){n.x=(n.x+m)*v,n.y=n.depth*y})}return s}function t(n){for(var t,e={A:null,children:[n]},r=[e];null!=(t=r.pop());)for(var o,i=t.children,a=0,u=i.length;u>a;++a)r.push((i[a]=o={_:i[a],parent:t,children:(o=i[a].children)&&o.slice()||[],A:null,a:null,z:0,m:0,c:0,s:0,t:null,i:a}).a=o);return e.children[0]}function e(n){var t=n.children,e=n.parent.children,r=n.i?e[n.i-1]:null;if(t.length){No(n);var i=(t[0].z+t[t.length-1].z)/2;r?(n.z=r.z+u(n._,r._),n.m=n.z-i):n.z=i}else r&&(n.z=r.z+u(n._,r._));n.parent.A=o(n,r,n.parent.A||e[0])}function r(n){n._.x=n.z+n.parent.m,n.m+=n.parent.m}function o(n,t,e){if(t){for(var r,o=n,i=n,a=t,l=o.parent.children[0],c=o.m,s=i.m,f=a.m,h=l.m;a=Eo(a),o=Ao(o),a&&o;)l=Ao(l),i=Eo(i),i.a=n,r=a.z+f-o.z-c+u(a._,o._),r>0&&(qo(Lo(a,n,e),n,r),c+=r,s+=r),f+=a.m,c+=o.m,h+=l.m,s+=i.m;a&&!Eo(i)&&(i.t=a,i.m+=f-s),o&&!Ao(l)&&(l.t=o,l.m+=c-h,e=n)}return e}function i(n){n.x*=l[0],n.y=n.depth*l[1]}var a=ea.layout.hierarchy().sort(null).value(null),u=So,l=[1,1],c=null;return n.separation=function(t){return arguments.length?(u=t,n):u},n.size=function(t){return arguments.length?(c=null==(l=t)?i:null,n):c?null:l},n.nodeSize=function(t){return arguments.length?(c=null==(l=t)?null:i,n):c?l:null},Kr(n,a)},ea.layout.cluster=function(){function n(n,i){var a,u=t.call(this,n,i),l=u[0],c=0;no(l,function(n){var t=n.children;t&&t.length?(n.x=Po(t),n.y=Do(t)):(n.x=a?c+=e(n,a):0,n.y=0,a=n)});var s=To(l),f=zo(l),h=s.x-e(s,f)/2,g=f.x+e(f,s)/2;return no(l,o?function(n){n.x=(n.x-l.x)*r[0],n.y=(l.y-n.y)*r[1]}:function(n){n.x=(n.x-h)/(g-h)*r[0],n.y=(1-(l.y?n.y/l.y:1))*r[1]}),u}var t=ea.layout.hierarchy().sort(null).value(null),e=So,r=[1,1],o=!1;return n.separation=function(t){return arguments.length?(e=t,n):e},n.size=function(t){return arguments.length?(o=null==(r=t),n):o?null:r},n.nodeSize=function(t){return arguments.length?(o=null!=(r=t),n):o?r:null},Kr(n,t)},ea.layout.treemap=function(){function n(n,t){for(var e,r,o=-1,i=n.length;++o<i;)r=(e=n[o]).value*(0>t?0:t),e.area=isNaN(r)||0>=r?0:r}function t(e){var i=e.children;if(i&&i.length){var a,u,l,c=f(e),s=[],h=i.slice(),p=1/0,d="slice"===g?c.dx:"dice"===g?c.dy:"slice-dice"===g?1&e.depth?c.dy:c.dx:Math.min(c.dx,c.dy);for(n(h,c.dx*c.dy/e.value),s.area=0;(l=h.length)>0;)s.push(a=h[l-1]),s.area+=a.area,"squarify"!==g||(u=r(s,d))<=p?(h.pop(),p=u):(s.area-=s.pop().area,o(s,d,c,!1),d=Math.min(c.dx,c.dy),s.length=s.area=0,p=1/0);s.length&&(o(s,d,c,!0),s.length=s.area=0),i.forEach(t)}}function e(t){var r=t.children;if(r&&r.length){var i,a=f(t),u=r.slice(),l=[];for(n(u,a.dx*a.dy/t.value),l.area=0;i=u.pop();)l.push(i),l.area+=i.area,null!=i.z&&(o(l,i.z?a.dx:a.dy,a,!u.length),l.length=l.area=0);r.forEach(e)}}function r(n,t){for(var e,r=n.area,o=0,i=1/0,a=-1,u=n.length;++a<u;)(e=n[a].area)&&(i>e&&(i=e),e>o&&(o=e));return r*=r,t*=t,r?Math.max(t*o*p/r,r/(t*i*p)):1/0}function o(n,t,e,r){var o,i=-1,a=n.length,u=e.x,c=e.y,s=t?l(n.area/t):0;if(t==e.dx){for((r||s>e.dy)&&(s=e.dy);++i<a;)o=n[i],o.x=u,o.y=c,o.dy=s,u+=o.dx=Math.min(e.x+e.dx-u,s?l(o.area/s):0);o.z=!0,o.dx+=e.x+e.dx-u,e.y+=s,e.dy-=s}else{for((r||s>e.dx)&&(s=e.dx);++i<a;)o=n[i],o.x=u,o.y=c,o.dx=s,c+=o.dy=Math.min(e.y+e.dy-c,s?l(o.area/s):0);o.z=!1,o.dy+=e.y+e.dy-c,e.x+=s,e.dx-=s}}function i(r){var o=a||u(r),i=o[0];return i.x=0,i.y=0,i.dx=c[0],i.dy=c[1],a&&u.revalue(i),n([i],i.dx*i.dy/i.value),(a?e:t)(i),h&&(a=o),o}var a,u=ea.layout.hierarchy(),l=Math.round,c=[1,1],s=null,f=Ro,h=!1,g="squarify",p=.5*(1+Math.sqrt(5));return i.size=function(n){return arguments.length?(c=n,i):c},i.padding=function(n){function t(t){var e=n.call(i,t,t.depth);return null==e?Ro(t):$o(t,"number"==typeof e?[e,e,e,e]:e)}function e(t){return $o(t,n)}if(!arguments.length)return s;var r;return f=null==(s=n)?Ro:"function"==(r=typeof n)?t:"number"===r?(n=[n,n,n,n],e):e,i},i.round=function(n){return arguments.length?(l=n?Math.round:Number,i):l!=Number},i.sticky=function(n){return arguments.length?(h=n,a=null,i):h},i.ratio=function(n){return arguments.length?(p=n,i):p},i.mode=function(n){return arguments.length?(g=n+"",i):g},Kr(i,u)},ea.random={normal:function(n,t){var e=arguments.length;return 2>e&&(t=1),1>e&&(n=0),function(){var e,r,o;do e=2*Math.random()-1,r=2*Math.random()-1,o=e*e+r*r;while(!o||o>1);return n+t*e*Math.sqrt(-2*Math.log(o)/o)}},logNormal:function(){var n=ea.random.normal.apply(ea,arguments);return function(){return Math.exp(n())}},bates:function(n){var t=ea.random.irwinHall(n);return function(){return t()/n}},irwinHall:function(n){return function(){for(var t=0,e=0;n>e;e++)t+=Math.random();return t}}},ea.scale={};var yl={floor:y,ceil:y};ea.scale.linear=function(){return Yo([0,1],[0,1],yr,!1)};var Ml={s:1,g:1,p:1,r:1,e:1};ea.scale.log=function(){return Ko(ea.scale.linear().domain([0,1]),10,!0,[1,10])};var xl=ea.format(".0e"),wl={floor:function(n){return-Math.ceil(-n)},ceil:function(n){return-Math.floor(-n)}};ea.scale.pow=function(){return Qo(ea.scale.linear(),1,[0,1])},ea.scale.sqrt=function(){return ea.scale.pow().exponent(.5)},ea.scale.ordinal=function(){return ti([],{t:"range",a:[[]]})},ea.scale.category10=function(){return ea.scale.ordinal().range(bl)},ea.scale.category20=function(){return ea.scale.ordinal().range(_l)},ea.scale.category20b=function(){return ea.scale.ordinal().range(kl)},ea.scale.category20c=function(){return ea.scale.ordinal().range(Cl)};var bl=[2062260,16744206,2924588,14034728,9725885,9197131,14907330,8355711,12369186,1556175].map(xn),_l=[2062260,11454440,16744206,16759672,2924588,10018698,14034728,16750742,9725885,12955861,9197131,12885140,14907330,16234194,8355711,13092807,12369186,14408589,1556175,10410725].map(xn),kl=[3750777,5395619,7040719,10264286,6519097,9216594,11915115,13556636,9202993,12426809,15186514,15190932,8666169,11356490,14049643,15177372,8077683,10834324,13528509,14589654].map(xn),Cl=[3244733,7057110,10406625,13032431,15095053,16616764,16625259,16634018,3253076,7652470,10607003,13101504,7695281,10394312,12369372,14342891,6513507,9868950,12434877,14277081].map(xn);ea.scale.quantile=function(){return ei([],[])},ea.scale.quantize=function(){return ri(0,1,[0,1])},ea.scale.threshold=function(){return oi([.5],[0,1])},ea.scale.identity=function(){return ii([0,1])},ea.svg={},ea.svg.arc=function(){function n(){var n=Math.max(0,+e.apply(this,arguments)),c=Math.max(0,+r.apply(this,arguments)),s=a.apply(this,arguments)-za,f=u.apply(this,arguments)-za,h=Math.abs(f-s),g=s>f?0:1;if(n>c&&(p=c,c=n,n=p),h>=Ta)return t(c,g)+(n?t(n,1-g):"")+"Z";var p,d,m,v,y,M,x,w,b,_,k,C,S=0,A=0,E=[];if((v=(+l.apply(this,arguments)||0)/2)&&(m=i===Sl?Math.sqrt(n*n+c*c):+i.apply(this,arguments),g||(A*=-1),c&&(A=tn(m/c*Math.sin(v))),n&&(S=tn(m/n*Math.sin(v)))),c){y=c*Math.cos(s+A),M=c*Math.sin(s+A),x=c*Math.cos(f-A),w=c*Math.sin(f-A);var q=Math.abs(f-s-2*A)<=Da?0:1;if(A&&hi(y,M,x,w)===g^q){var N=(s+f)/2;y=c*Math.cos(N),M=c*Math.sin(N),x=w=null}}else y=M=0;if(n){b=n*Math.cos(f-S),_=n*Math.sin(f-S),k=n*Math.cos(s+S),C=n*Math.sin(s+S);var L=Math.abs(s-f+2*S)<=Da?0:1;if(S&&hi(b,_,k,C)===1-g^L){var D=(s+f)/2;b=n*Math.cos(D),_=n*Math.sin(D),k=C=null}}else b=_=0;if((p=Math.min(Math.abs(c-n)/2,+o.apply(this,arguments)))>.001){d=c>n^g?0:1;var P=null==k?[b,_]:null==x?[y,M]:Pe([y,M],[k,C],[x,w],[b,_]),T=y-P[0],z=M-P[1],R=x-P[0],$=w-P[1],U=1/Math.sin(Math.acos((T*R+z*$)/(Math.sqrt(T*T+z*z)*Math.sqrt(R*R+$*$)))/2),j=Math.sqrt(P[0]*P[0]+P[1]*P[1]);if(null!=x){var I=Math.min(p,(c-j)/(U+1)),F=gi(null==k?[b,_]:[k,C],[y,M],c,I,g),O=gi([x,w],[b,_],c,I,g);p===I?E.push("M",F[0],"A",I,",",I," 0 0,",d," ",F[1],"A",c,",",c," 0 ",1-g^hi(F[1][0],F[1][1],O[1][0],O[1][1]),",",g," ",O[1],"A",I,",",I," 0 0,",d," ",O[0]):E.push("M",F[0],"A",I,",",I," 0 1,",d," ",O[0])}else E.push("M",y,",",M);if(null!=k){var H=Math.min(p,(n-j)/(U-1)),Y=gi([y,M],[k,C],n,-H,g),B=gi([b,_],null==x?[y,M]:[x,w],n,-H,g);p===H?E.push("L",B[0],"A",H,",",H," 0 0,",d," ",B[1],"A",n,",",n," 0 ",g^hi(B[1][0],B[1][1],Y[1][0],Y[1][1]),",",1-g," ",Y[1],"A",H,",",H," 0 0,",d," ",Y[0]):E.push("L",B[0],"A",H,",",H," 0 0,",d," ",Y[0])}else E.push("L",b,",",_)}else E.push("M",y,",",M),null!=x&&E.push("A",c,",",c," 0 ",q,",",g," ",x,",",w),E.push("L",b,",",_),null!=k&&E.push("A",n,",",n," 0 ",L,",",1-g," ",k,",",C);return E.push("Z"),E.join("")}function t(n,t){return"M0,"+n+"A"+n+","+n+" 0 1,"+t+" 0,"+-n+"A"+n+","+n+" 0 1,"+t+" 0,"+n}var e=ui,r=li,o=ai,i=Sl,a=ci,u=si,l=fi;return n.innerRadius=function(t){return arguments.length?(e=An(t),n):e},n.outerRadius=function(t){return arguments.length?(r=An(t),n):r},n.cornerRadius=function(t){return arguments.length?(o=An(t),n):o},n.padRadius=function(t){return arguments.length?(i=t==Sl?Sl:An(t),n):i},n.startAngle=function(t){return arguments.length?(a=An(t),n):a},n.endAngle=function(t){return arguments.length?(u=An(t),n):u},n.padAngle=function(t){return arguments.length?(l=An(t),n):l},n.centroid=function(){var n=(+e.apply(this,arguments)+ +r.apply(this,arguments))/2,t=(+a.apply(this,arguments)+ +u.apply(this,arguments))/2-za;return[Math.cos(t)*n,Math.sin(t)*n]},n};var Sl="auto";ea.svg.line=function(){return pi(y)};var Al=ea.map({linear:di,"linear-closed":mi,step:vi,"step-before":yi,"step-after":Mi,basis:Ci,"basis-open":Si,"basis-closed":Ai,bundle:Ei,cardinal:bi,"cardinal-open":xi,"cardinal-closed":wi,monotone:Ti});Al.forEach(function(n,t){t.key=n,t.closed=/-closed$/.test(n)});var El=[0,2/3,1/3,0],ql=[0,1/3,2/3,0],Nl=[0,1/6,2/3,1/6];ea.svg.line.radial=function(){var n=pi(zi);return n.radius=n.x,delete n.x,n.angle=n.y,delete n.y,n},yi.reverse=Mi,Mi.reverse=yi,ea.svg.area=function(){return Ri(y)},ea.svg.area.radial=function(){var n=Ri(zi);return n.radius=n.x,delete n.x,n.innerRadius=n.x0,delete n.x0,n.outerRadius=n.x1,delete n.x1,n.angle=n.y,delete n.y,n.startAngle=n.y0,delete n.y0,n.endAngle=n.y1,delete n.y1,n},ea.svg.chord=function(){function n(n,u){var l=t(this,i,n,u),c=t(this,a,n,u);return"M"+l.p0+r(l.r,l.p1,l.a1-l.a0)+(e(l,c)?o(l.r,l.p1,l.r,l.p0):o(l.r,l.p1,c.r,c.p0)+r(c.r,c.p1,c.a1-c.a0)+o(c.r,c.p1,l.r,l.p0))+"Z"}function t(n,t,e,r){var o=t.call(n,e,r),i=u.call(n,o,r),a=l.call(n,o,r)-za,s=c.call(n,o,r)-za;return{r:i,a0:a,a1:s,p0:[i*Math.cos(a),i*Math.sin(a)],p1:[i*Math.cos(s),i*Math.sin(s)]}}function e(n,t){return n.a0==t.a0&&n.a1==t.a1}function r(n,t,e){return"A"+n+","+n+" 0 "+ +(e>Da)+",1 "+t}function o(n,t,e,r){return"Q 0,0 "+r}var i=ye,a=Me,u=$i,l=ci,c=si;return n.radius=function(t){return arguments.length?(u=An(t),n):u},n.source=function(t){return arguments.length?(i=An(t),n):i},n.target=function(t){return arguments.length?(a=An(t),n):a},n.startAngle=function(t){return arguments.length?(l=An(t),n):l},n.endAngle=function(t){return arguments.length?(c=An(t),n):c},n},ea.svg.diagonal=function(){function n(n,o){var i=t.call(this,n,o),a=e.call(this,n,o),u=(i.y+a.y)/2,l=[i,{x:i.x,y:u},{x:a.x,y:u},a];return l=l.map(r),"M"+l[0]+"C"+l[1]+" "+l[2]+" "+l[3]}var t=ye,e=Me,r=Ui;return n.source=function(e){return arguments.length?(t=An(e),n):t},n.target=function(t){return arguments.length?(e=An(t),n):e},n.projection=function(t){return arguments.length?(r=t,n):r},n},ea.svg.diagonal.radial=function(){var n=ea.svg.diagonal(),t=Ui,e=n.projection;return n.projection=function(n){return arguments.length?e(ji(t=n)):t},n},ea.svg.symbol=function(){function n(n,r){return(Ll.get(t.call(this,n,r))||Oi)(e.call(this,n,r))}var t=Fi,e=Ii;return n.type=function(e){return arguments.length?(t=An(e),n):t},n.size=function(t){return arguments.length?(e=An(t),n):e},n};var Ll=ea.map({circle:Oi,cross:function(n){var t=Math.sqrt(n/5)/2;return"M"+-3*t+","+-t+"H"+-t+"V"+-3*t+"H"+t+"V"+-t+"H"+3*t+"V"+t+"H"+t+"V"+3*t+"H"+-t+"V"+t+"H"+-3*t+"Z"},diamond:function(n){var t=Math.sqrt(n/(2*Pl)),e=t*Pl;return"M0,"+-t+"L"+e+",0 0,"+t+" "+-e+",0Z"},square:function(n){var t=Math.sqrt(n)/2;return"M"+-t+","+-t+"L"+t+","+-t+" "+t+","+t+" "+-t+","+t+"Z"},"triangle-down":function(n){var t=Math.sqrt(n/Dl),e=t*Dl/2;return"M0,"+e+"L"+t+","+-e+" "+-t+","+-e+"Z"},"triangle-up":function(n){var t=Math.sqrt(n/Dl),e=t*Dl/2;return"M0,"+-e+"L"+t+","+e+" "+-t+","+e+"Z"}});ea.svg.symbolTypes=Ll.keys();var Dl=Math.sqrt(3),Pl=Math.tan(30*Ra);_a.transition=function(n){for(var t,e,r=Tl||++Ul,o=Vi(n),i=[],a=zl||{time:Date.now(),ease:Cr,delay:0,duration:250},u=-1,l=this.length;++u<l;){i.push(t=[]);for(var c=this[u],s=-1,f=c.length;++s<f;)(e=c[s])&&Xi(e,s,o,r,a),t.push(e)}return Yi(i,o,r)},_a.interrupt=function(n){return this.each(null==n?Rl:Hi(Vi(n)))};var Tl,zl,Rl=Hi(Vi()),$l=[],Ul=0;$l.call=_a.call,$l.empty=_a.empty,$l.node=_a.node,$l.size=_a.size,ea.transition=function(n,t){return n&&n.transition?Tl?n.transition(t):n:ea.selection().transition(n)},ea.transition.prototype=$l,$l.select=function(n){var t,e,r,o=this.id,i=this.namespace,a=[];n=E(n);for(var u=-1,l=this.length;++u<l;){a.push(t=[]);for(var c=this[u],s=-1,f=c.length;++s<f;)(r=c[s])&&(e=n.call(r,r.__data__,s,u))?("__data__"in r&&(e.__data__=r.__data__),Xi(e,s,i,o,r[i][o]),t.push(e)):t.push(null)}return Yi(a,i,o)},$l.selectAll=function(n){var t,e,r,o,i,a=this.id,u=this.namespace,l=[];n=q(n);for(var c=-1,s=this.length;++c<s;)for(var f=this[c],h=-1,g=f.length;++h<g;)if(r=f[h]){i=r[u][a],e=n.call(r,r.__data__,h,c),l.push(t=[]);for(var p=-1,d=e.length;++p<d;)(o=e[p])&&Xi(o,p,u,a,i),t.push(o)}return Yi(l,u,a)},$l.filter=function(n){var t,e,r,o=[];"function"!=typeof n&&(n=F(n));for(var i=0,a=this.length;a>i;i++){o.push(t=[]);for(var e=this[i],u=0,l=e.length;l>u;u++)(r=e[u])&&n.call(r,r.__data__,u,i)&&t.push(r)}return Yi(o,this.namespace,this.id)},$l.tween=function(n,t){var e=this.id,r=this.namespace;return arguments.length<2?this.node()[r][e].tween.get(n):H(this,null==t?function(t){t[r][e].tween.remove(n)}:function(o){o[r][e].tween.set(n,t)})},$l.attr=function(n,t){function e(){this.removeAttribute(u)}function r(){this.removeAttributeNS(u.space,u.local)}function o(n){return null==n?e:(n+="",function(){var t,e=this.getAttribute(u);return e!==n&&(t=a(e,n),function(n){this.setAttribute(u,t(n))})})}function i(n){return null==n?r:(n+="",function(){var t,e=this.getAttributeNS(u.space,u.local);return e!==n&&(t=a(e,n),function(n){this.setAttributeNS(u.space,u.local,t(n))})})}if(arguments.length<2){for(t in n)this.attr(t,n[t]);return this}var a="transform"==n?Fr:yr,u=ea.ns.qualify(n);return Bi(this,"attr."+n,t,u.local?i:o)},$l.attrTween=function(n,t){function e(n,e){var r=t.call(this,n,e,this.getAttribute(o));return r&&function(n){this.setAttribute(o,r(n))}}function r(n,e){var r=t.call(this,n,e,this.getAttributeNS(o.space,o.local));return r&&function(n){this.setAttributeNS(o.space,o.local,r(n))}}var o=ea.ns.qualify(n);return this.tween("attr."+n,o.local?r:e)},$l.style=function(n,e,r){function o(){this.style.removeProperty(n)}function i(e){return null==e?o:(e+="",function(){var o,i=t(this).getComputedStyle(this,null).getPropertyValue(n);return i!==e&&(o=yr(i,e),function(t){this.style.setProperty(n,o(t),r)})})}var a=arguments.length;if(3>a){if("string"!=typeof n){2>a&&(e="");for(r in n)this.style(r,n[r],e);return this}r=""}return Bi(this,"style."+n,e,i)},$l.styleTween=function(n,e,r){function o(o,i){var a=e.call(this,o,i,t(this).getComputedStyle(this,null).getPropertyValue(n));return a&&function(t){this.style.setProperty(n,a(t),r)}}return arguments.length<3&&(r=""),this.tween("style."+n,o)},$l.text=function(n){return Bi(this,"text",n,Zi)},$l.remove=function(){var n=this.namespace;return this.each("end.transition",function(){var t;this[n].count<2&&(t=this.parentNode)&&t.removeChild(this)})},$l.ease=function(n){var t=this.id,e=this.namespace;return arguments.length<1?this.node()[e][t].ease:("function"!=typeof n&&(n=ea.ease.apply(ea,arguments)),H(this,function(r){r[e][t].ease=n}))},$l.delay=function(n){var t=this.id,e=this.namespace;return arguments.length<1?this.node()[e][t].delay:H(this,"function"==typeof n?function(r,o,i){
r[e][t].delay=+n.call(r,r.__data__,o,i)}:(n=+n,function(r){r[e][t].delay=n}))},$l.duration=function(n){var t=this.id,e=this.namespace;return arguments.length<1?this.node()[e][t].duration:H(this,"function"==typeof n?function(r,o,i){r[e][t].duration=Math.max(1,n.call(r,r.__data__,o,i))}:(n=Math.max(1,n),function(r){r[e][t].duration=n}))},$l.each=function(n,t){var e=this.id,r=this.namespace;if(arguments.length<2){var o=zl,i=Tl;try{Tl=e,H(this,function(t,o,i){zl=t[r][e],n.call(t,t.__data__,o,i)})}finally{zl=o,Tl=i}}else H(this,function(o){var i=o[r][e];(i.event||(i.event=ea.dispatch("start","end","interrupt"))).on(n,t)});return this},$l.transition=function(){for(var n,t,e,r,o=this.id,i=++Ul,a=this.namespace,u=[],l=0,c=this.length;c>l;l++){u.push(n=[]);for(var t=this[l],s=0,f=t.length;f>s;s++)(e=t[s])&&(r=e[a][o],Xi(e,s,a,i,{time:r.time,ease:r.ease,delay:r.delay+r.duration,duration:r.duration})),n.push(e)}return Yi(u,a,i)},ea.svg.axis=function(){function n(n){n.each(function(){var n,c=ea.select(this),s=this.__chart__||e,f=this.__chart__=e.copy(),h=null==l?f.ticks?f.ticks.apply(f,u):f.domain():l,g=null==t?f.tickFormat?f.tickFormat.apply(f,u):y:t,p=c.selectAll(".tick").data(h,f),d=p.enter().insert("g",".domain").attr("class","tick").style("opacity",Na),m=ea.transition(p.exit()).style("opacity",Na).remove(),v=ea.transition(p.order()).style("opacity",1),M=Math.max(o,0)+a,x=jo(f),w=c.selectAll(".domain").data([0]),b=(w.enter().append("path").attr("class","domain"),ea.transition(w));d.append("line"),d.append("text");var _,k,C,S,A=d.select("line"),E=v.select("line"),q=p.select("text").text(g),N=d.select("text"),L=v.select("text"),D="top"===r||"left"===r?-1:1;if("bottom"===r||"top"===r?(n=Wi,_="x",C="y",k="x2",S="y2",q.attr("dy",0>D?"0em":".71em").style("text-anchor","middle"),b.attr("d","M"+x[0]+","+D*i+"V0H"+x[1]+"V"+D*i)):(n=Gi,_="y",C="x",k="y2",S="x2",q.attr("dy",".32em").style("text-anchor",0>D?"end":"start"),b.attr("d","M"+D*i+","+x[0]+"H0V"+x[1]+"H"+D*i)),A.attr(S,D*o),N.attr(C,D*M),E.attr(k,0).attr(S,D*o),L.attr(_,0).attr(C,D*M),f.rangeBand){var P=f,T=P.rangeBand()/2;s=f=function(n){return P(n)+T}}else s.rangeBand?s=f:m.call(n,f,s);d.call(n,s,f),v.call(n,f,f)})}var t,e=ea.scale.linear(),r=jl,o=6,i=6,a=3,u=[10],l=null;return n.scale=function(t){return arguments.length?(e=t,n):e},n.orient=function(t){return arguments.length?(r=t in Il?t+"":jl,n):r},n.ticks=function(){return arguments.length?(u=arguments,n):u},n.tickValues=function(t){return arguments.length?(l=t,n):l},n.tickFormat=function(e){return arguments.length?(t=e,n):t},n.tickSize=function(t){var e=arguments.length;return e?(o=+t,i=+arguments[e-1],n):o},n.innerTickSize=function(t){return arguments.length?(o=+t,n):o},n.outerTickSize=function(t){return arguments.length?(i=+t,n):i},n.tickPadding=function(t){return arguments.length?(a=+t,n):a},n.tickSubdivide=function(){return arguments.length&&n},n};var jl="bottom",Il={top:1,right:1,bottom:1,left:1};ea.svg.brush=function(){function n(t){t.each(function(){var t=ea.select(this).style("pointer-events","all").style("-webkit-tap-highlight-color","rgba(0,0,0,0)").on("mousedown.brush",i).on("touchstart.brush",i),a=t.selectAll(".background").data([0]);a.enter().append("rect").attr("class","background").style("visibility","hidden").style("cursor","crosshair"),t.selectAll(".extent").data([0]).enter().append("rect").attr("class","extent").style("cursor","move");var u=t.selectAll(".resize").data(d,y);u.exit().remove(),u.enter().append("g").attr("class",function(n){return"resize "+n}).style("cursor",function(n){return Fl[n]}).append("rect").attr("x",function(n){return/[ew]$/.test(n)?-3:null}).attr("y",function(n){return/^[ns]/.test(n)?-3:null}).attr("width",6).attr("height",6).style("visibility","hidden"),u.style("display",n.empty()?"none":null);var l,f=ea.transition(t),h=ea.transition(a);c&&(l=jo(c),h.attr("x",l[0]).attr("width",l[1]-l[0]),r(f)),s&&(l=jo(s),h.attr("y",l[0]).attr("height",l[1]-l[0]),o(f)),e(f)})}function e(n){n.selectAll(".resize").attr("transform",function(n){return"translate("+f[+/e$/.test(n)]+","+h[+/^s/.test(n)]+")"})}function r(n){n.select(".extent").attr("x",f[0]),n.selectAll(".extent,.n>rect,.s>rect").attr("width",f[1]-f[0])}function o(n){n.select(".extent").attr("y",h[0]),n.selectAll(".extent,.e>rect,.w>rect").attr("height",h[1]-h[0])}function i(){function i(){32==ea.event.keyCode&&(q||(M=null,L[0]-=f[1],L[1]-=h[1],q=2),k())}function d(){32==ea.event.keyCode&&2==q&&(L[0]+=f[1],L[1]+=h[1],q=0,k())}function m(){var n=ea.mouse(w),t=!1;x&&(n[0]+=x[0],n[1]+=x[1]),q||(ea.event.altKey?(M||(M=[(f[0]+f[1])/2,(h[0]+h[1])/2]),L[0]=f[+(n[0]<M[0])],L[1]=h[+(n[1]<M[1])]):M=null),A&&v(n,c,0)&&(r(C),t=!0),E&&v(n,s,1)&&(o(C),t=!0),t&&(e(C),_({type:"brush",mode:q?"move":"resize"}))}function v(n,t,e){var r,o,i=jo(t),l=i[0],c=i[1],s=L[e],d=e?h:f,m=d[1]-d[0];return q&&(l-=s,c-=m+s),r=(e?p:g)?Math.max(l,Math.min(c,n[e])):n[e],q?o=(r+=s)+m:(M&&(s=Math.max(l,Math.min(c,2*M[e]-r))),r>s?(o=r,r=s):o=s),d[0]!=r||d[1]!=o?(e?u=null:a=null,d[0]=r,d[1]=o,!0):void 0}function y(){m(),C.style("pointer-events","all").selectAll(".resize").style("display",n.empty()?"none":null),ea.select("body").style("cursor",null),D.on("mousemove.brush",null).on("mouseup.brush",null).on("touchmove.brush",null).on("touchend.brush",null).on("keydown.brush",null).on("keyup.brush",null),N(),_({type:"brushend"})}var M,x,w=this,b=ea.select(ea.event.target),_=l.of(w,arguments),C=ea.select(w),S=b.datum(),A=!/^(n|s)$/.test(S)&&c,E=!/^(e|w)$/.test(S)&&s,q=b.classed("extent"),N=W(w),L=ea.mouse(w),D=ea.select(t(w)).on("keydown.brush",i).on("keyup.brush",d);if(ea.event.changedTouches?D.on("touchmove.brush",m).on("touchend.brush",y):D.on("mousemove.brush",m).on("mouseup.brush",y),C.interrupt().selectAll("*").interrupt(),q)L[0]=f[0]-L[0],L[1]=h[0]-L[1];else if(S){var P=+/w$/.test(S),T=+/^n/.test(S);x=[f[1-P]-L[0],h[1-T]-L[1]],L[0]=f[P],L[1]=h[T]}else ea.event.altKey&&(M=L.slice());C.style("pointer-events","none").selectAll(".resize").style("display",null),ea.select("body").style("cursor",b.style("cursor")),_({type:"brushstart"}),m()}var a,u,l=S(n,"brushstart","brush","brushend"),c=null,s=null,f=[0,0],h=[0,0],g=!0,p=!0,d=Ol[0];return n.event=function(n){n.each(function(){var n=l.of(this,arguments),t={x:f,y:h,i:a,j:u},e=this.__chart__||t;this.__chart__=t,Tl?ea.select(this).transition().each("start.brush",function(){a=e.i,u=e.j,f=e.x,h=e.y,n({type:"brushstart"})}).tween("brush:brush",function(){var e=Mr(f,t.x),r=Mr(h,t.y);return a=u=null,function(o){f=t.x=e(o),h=t.y=r(o),n({type:"brush",mode:"resize"})}}).each("end.brush",function(){a=t.i,u=t.j,n({type:"brush",mode:"resize"}),n({type:"brushend"})}):(n({type:"brushstart"}),n({type:"brush",mode:"resize"}),n({type:"brushend"}))})},n.x=function(t){return arguments.length?(c=t,d=Ol[!c<<1|!s],n):c},n.y=function(t){return arguments.length?(s=t,d=Ol[!c<<1|!s],n):s},n.clamp=function(t){return arguments.length?(c&&s?(g=!!t[0],p=!!t[1]):c?g=!!t:s&&(p=!!t),n):c&&s?[g,p]:c?g:s?p:null},n.extent=function(t){var e,r,o,i,l;return arguments.length?(c&&(e=t[0],r=t[1],s&&(e=e[0],r=r[0]),a=[e,r],c.invert&&(e=c(e),r=c(r)),e>r&&(l=e,e=r,r=l),(e!=f[0]||r!=f[1])&&(f=[e,r])),s&&(o=t[0],i=t[1],c&&(o=o[1],i=i[1]),u=[o,i],s.invert&&(o=s(o),i=s(i)),o>i&&(l=o,o=i,i=l),(o!=h[0]||i!=h[1])&&(h=[o,i])),n):(c&&(a?(e=a[0],r=a[1]):(e=f[0],r=f[1],c.invert&&(e=c.invert(e),r=c.invert(r)),e>r&&(l=e,e=r,r=l))),s&&(u?(o=u[0],i=u[1]):(o=h[0],i=h[1],s.invert&&(o=s.invert(o),i=s.invert(i)),o>i&&(l=o,o=i,i=l))),c&&s?[[e,o],[r,i]]:c?[e,r]:s&&[o,i])},n.clear=function(){return n.empty()||(f=[0,0],h=[0,0],a=u=null),n},n.empty=function(){return!!c&&f[0]==f[1]||!!s&&h[0]==h[1]},ea.rebind(n,l,"on")};var Fl={n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},Ol=[["n","e","s","w","nw","ne","se","sw"],["e","w"],["n","s"],[]],Hl=lu.format=pu.timeFormat,Yl=Hl.utc,Bl=Yl("%Y-%m-%dT%H:%M:%S.%LZ");Hl.iso=Date.prototype.toISOString&&+new Date("2000-01-01T00:00:00.000Z")?Ji:Bl,Ji.parse=function(n){var t=new Date(n);return isNaN(t)?null:t},Ji.toString=Bl.toString,lu.second=In(function(n){return new cu(1e3*Math.floor(n/1e3))},function(n,t){n.setTime(n.getTime()+1e3*Math.floor(t))},function(n){return n.getSeconds()}),lu.seconds=lu.second.range,lu.seconds.utc=lu.second.utc.range,lu.minute=In(function(n){return new cu(6e4*Math.floor(n/6e4))},function(n,t){n.setTime(n.getTime()+6e4*Math.floor(t))},function(n){return n.getMinutes()}),lu.minutes=lu.minute.range,lu.minutes.utc=lu.minute.utc.range,lu.hour=In(function(n){var t=n.getTimezoneOffset()/60;return new cu(36e5*(Math.floor(n/36e5-t)+t))},function(n,t){n.setTime(n.getTime()+36e5*Math.floor(t))},function(n){return n.getHours()}),lu.hours=lu.hour.range,lu.hours.utc=lu.hour.utc.range,lu.month=In(function(n){return n=lu.day(n),n.setDate(1),n},function(n,t){n.setMonth(n.getMonth()+t)},function(n){return n.getMonth()}),lu.months=lu.month.range,lu.months.utc=lu.month.utc.range;var Zl=[1e3,5e3,15e3,3e4,6e4,3e5,9e5,18e5,36e5,108e5,216e5,432e5,864e5,1728e5,6048e5,2592e6,7776e6,31536e6],Vl=[[lu.second,1],[lu.second,5],[lu.second,15],[lu.second,30],[lu.minute,1],[lu.minute,5],[lu.minute,15],[lu.minute,30],[lu.hour,1],[lu.hour,3],[lu.hour,6],[lu.hour,12],[lu.day,1],[lu.day,2],[lu.week,1],[lu.month,1],[lu.month,3],[lu.year,1]],Xl=Hl.multi([[".%L",function(n){return n.getMilliseconds()}],[":%S",function(n){return n.getSeconds()}],["%I:%M",function(n){return n.getMinutes()}],["%I %p",function(n){return n.getHours()}],["%a %d",function(n){return n.getDay()&&1!=n.getDate()}],["%b %d",function(n){return 1!=n.getDate()}],["%B",function(n){return n.getMonth()}],["%Y",qt]]),Wl={range:function(n,t,e){return ea.range(Math.ceil(n/e)*e,+t,e).map(Qi)},floor:y,ceil:y};Vl.year=lu.year,lu.scale=function(){return Ki(ea.scale.linear(),Vl,Xl)};var Gl=Vl.map(function(n){return[n[0].utc,n[1]]}),Jl=Yl.multi([[".%L",function(n){return n.getUTCMilliseconds()}],[":%S",function(n){return n.getUTCSeconds()}],["%I:%M",function(n){return n.getUTCMinutes()}],["%I %p",function(n){return n.getUTCHours()}],["%a %d",function(n){return n.getUTCDay()&&1!=n.getUTCDate()}],["%b %d",function(n){return 1!=n.getUTCDate()}],["%B",function(n){return n.getUTCMonth()}],["%Y",qt]]);return Gl.year=lu.year.utc,lu.scale.utc=function(){return Ki(ea.scale.linear(),Gl,Jl)},ea.text=En(function(n){return n.responseText}),ea.json=function(n,t){return qn(n,"application/json",na,t)},ea.html=function(n,t){return qn(n,"text/html",ta,t)},ea.xml=En(function(n){return n.responseXML}),"function"==typeof define&&define.amd?define(ea):"object"==typeof module&&module.exports&&(module.exports=ea),this.d3=ea,ea}]),angular.module("ionic.utils",[]).factory("$localStorage",["$window",function(n){return{set:function(t,e){n.localStorage[t]=e},get:function(t,e){return n.localStorage[t]||e},setObject:function(t,e){n.localStorage[t]=JSON.stringify(e)},getObject:function(t){return JSON.parse(n.localStorage[t]||"{}")},isSet:function(t){return"undefined"!=typeof n.localStorage[t]},size:function(){return this.keys().length},keys:function(){return Object.keys(n.localStorage)},clear:function(t){delete n.localStorage[t]},clearAll:function(){n.localStorage.clear()}}}]),angular.module("app.SplashController",[]).controller("SplashController",["$scope","$state",function(n,t){n.startApp=function(){t.go("tab.home"),window.localStorage.didTutorial=!0},"true"===window.localStorage.didTutorial?n.startApp():setTimeout(function(){navigator.splashscreen.hide()},750)}]),angular.module("app.ProposalInterviewController",[]).controller("ProposalInterviewController",["$scope","$stateParams","ProposalFactory",function(n,t,e){n.submitInterview=function(n){if(n.$valid){var r={id:t.proposalId,date:n.date,time:n.time,note:n.note};e.postInterview(r).then(function(n){console.log("submitInterview: success",n)})["catch"](function(n){console.log(n)})}else console.log("not valid")}}]),angular.module("app.ProposalQuestionsController",[]).controller("ProposalQuestionsController",["$scope","ProposalFactory",function(n,t){n.questions=[{q:"What is the reason for you to hire me?",a:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."},{q:"Why am I the best agent for you?",a:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum"},{q:"What are my insights into local market trends?",a:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."},{q:"How will I market your home?",a:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum"},{q:"How will I communicate with you?",a:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."}],n.toggleGroup=function(t){n.shownGroup=n.isGroupShown(t)?null:t},n.isGroupShown=function(t){return n.shownGroup===t}}]),angular.module("app.ProposalController",[]).controller("ProposalController",["$scope","$stateParams","ProposalFactory",function(n,t,e){n.proposal={},e.getProposal(t.proposalId).then(function(t){n.proposal=t})["catch"](function(n){console.log(n)})}]),angular.module("app.ProposalFactory",[]).factory("ProposalFactory",["$http",function(n){var t=function(t){return n.get("http://localhost:8888/api/proposals/"+t).then(function(n){return n.data})["catch"](function(n){console.log(n)})},e=function(t){return n.get("http://localhost:8888/api/proposal/"+t).then(function(n){return n.data})["catch"](function(n){console.log(n)})},r=function(t){return n.post("http://localhost:8888/api/interview",t).then(function(n){return n.data})["catch"](function(n){console.log(n)})},o=function(t){return n.post("http://localhost:8888/api/proposal/decline",t).then(function(n){return n.data})["catch"](function(n){console.log(n)})};return{getProposals:t,getProposal:e,postInterview:r,postDeclineProposal:o}}]),angular.module("app.ProposalsController",[]).controller("ProposalsController",["$scope","$stateParams","ProposalFactory",function(n,t,e){n.cards=null,e.getProposals(t.userId).then(function(t){n.cards=t,n.$broadcast("getCards",n.cards)})["catch"](function(n){console.log(n)}),n.$on("removeCard",function(n,t,r){e.postDeclineProposal(r.proposal_id).then(function(n){})["catch"](function(n){console.log(n)})})}]),angular.module("app.BellController",[]).controller("BellController",["$scope","RequestFactory",function(n,t){n.bellData={},t.getBellData().then(function(t){n.bellData=t})["catch"](function(n){console.log(n)})}]),angular.module("app.RequestController",[]).controller("RequestController",["$scope","$ionicModal","RequestFactory",function(n,t,e){t.fromTemplateUrl("templates/request-modal-info.html",{scope:n,animation:"slide-in-up"}).then(function(t){n.modal=t}),n.openModal=function(){n.modal.show()},n.closeModal=function(){n.modal.hide()},n.$on("$destroy",function(){n.modal.remove()}),n.$on("modal.hidden",function(){}),n.$on("modal.removed",function(){}),n.submitRequest=function(n){if(n.$valid){var t={address:n.address,name:n.name,email:n.email,phone:n.phone};e.postRequest(t).then(function(n){console.log("submitRequest: success",n)})["catch"](function(n){console.log(n)})}else console.log("not valid")}}]),angular.module("app.RequestFactory",[]).factory("RequestFactory",["$http",function(n){var t=function(){return n.get("http://localhost:8888/api/bell").then(function(n){return n.data})["catch"](function(n){console.log(n)})},e=function(t){return n.post("http://localhost:8888/api/request",t).then(function(n){return n.data})["catch"](function(n){console.log(n)})};return{getBellData:t,postRequest:e}}]),angular.module("app.AgentController",[]).controller("AgentController",["$scope","$stateParams","AgentFactory",function(n,t,e){e.getAgent(t.agentId).then(function(t){n.agent=t})["catch"](function(n){console.log("ERR on getAgent",n)})}]),angular.module("app.AgentFactory",[]).factory("AgentFactory",["$http",function(n){var t=function(){return n.get("http://localhost:8888/api/agents").then(function(n){return n.data})["catch"](function(n){console.log(n)})},e=function(t){return n.get("http://localhost:8888/api/agent/"+t).then(function(n){return n.data})["catch"](function(n){console.log(n)})};return{getAgents:t,getAgent:e}}]),angular.module("app.AgentsController",[]).controller("AgentsController",["$scope","AgentFactory",function(n,t){n.agents=[],t.getAgents().then(function(t){n.agents=t})["catch"](function(n){console.log("ERR on getDirectory",n)})}]),angular.module("app.AuthFactory",[]).factory("AuthFactory",["$http",function(n){var t=function(t){return n.post("/login",t).then(function(n){return n.data})["catch"](function(n){console.log(n)})},e=function(){},r=function(){return n.post("/signup",data).then(function(n){return n.data})["catch"](function(n){console.log(n)})};return{login:t,logout:e,signup:r}}]),angular.module("app.LoginController",[]).controller("LoginController",["$scope","$ionicModal","$timeout","AuthFactory",function(n,t,e,r){t.fromTemplateUrl("js/auth/login.view.html",{scope:n}).then(function(t){n.modal=t}),n.closeLogin=function(){n.modal.hide()},n.login=function(){n.modal.show()},n.submitLogin=function(t){if(t.$valid){var e={username:t.username,password:t.password};r.login(e).then(function(t){console.log("submitLogin: success",t),n.closeLogin()})["catch"](function(t){console.log(t),n.closeLogin()})}else console.log("not valid")}}]),angular.module("app.LogoutController",[]).controller("LogoutController",["$scope","$ionicModal","$timeout",function(n,t,e){}]),angular.module("app.SignUpController",[]).controller("SignUpController",["$scope","$ionicModal","$timeout",function(n,t,e){}]),angular.module("app.CardController",[]).controller("CardController",["$scope","TDCardDelegate",function(n,t){}]),angular.module("app.CardsController",[]).controller("CardsController",["$scope","TDCardDelegate","$timeout",function(n,t,e){n.cardDestroyed=function(t){n.cards.splice(t,1)},n.refreshCards=function(){n.cards=null,e(function(){n.cards=Array.prototype.slice.call(n.cardsMaster,0)})},n.$on("getCards",function(t,e){n.cards=Array.prototype.slice.call(e,0),n.cardsMaster=Array.prototype.slice.call(e,0)}),n.$on("removeCard",function(t,e,r){n.cardsMaster.splice(n.cardsMaster.indexOf(r),1)})}]),angular.module("app.ChecklistAddController",[]).controller("ChecklistAddController",["$scope","$stateParams","$localStorage","$ionicHistory","lodash","ChecklistFactory",function(n,t,e,r,o,i){n.checklistAdd={title:"",description:""};var a=e.getObject("checklist");n.category=t.category,n.submitChecklistAdd=function(n){if(n.$valid){var e={title:n.title,description:n.description},i=o.find(a,{category:t.category});i.list.push(e),console.log(e),r.goBack()}else console.log("not valid")}}]),angular.module("app.ChecklistDetailController",[]).controller("ChecklistDetailController",["$scope","$stateParams","ChecklistFactory",function(n,t,e){n.item=t.item,n.checkItem=e.checkItem}]),angular.module("app.ChecklistController",[]).controller("ChecklistController",["$scope","$ionicModal","$ionicListDelegate","ChecklistFactory",function(n,t,e,r){var o={"Preparing Home":"checklist-section-red","While Escrow":"checklist-section-blue","Expenses At Closing":"checklist-section-green","Expenses At Opening":"checklist-section-yellow"};n.checklist=r.getChecklist(),n.item={},n.moveItem=r.moveItem,n.onItemDelete=r.onItemDelete,n.addItem=function(t){r.addItem(t),n.modal.hide()},n.applySectionClass=function(n){return o[n]}}]),angular.module("app.ChecklistFactory",[]).factory("ChecklistFactory",["$http","$ionicListDelegate","$localStorage",function(n,t,e){var r=[{category:"Preparing Home",list:[{id:11,name:"Updating your home for sale",checked:!1},{id:12,name:"Clean, declutter & de-personalize",checked:!1},{id:13,name:"Dates for photos and open houses",checked:!1},{id:14,name:"Staging or not staging?",checked:!1}]},{category:"While Escrow",list:[{id:21,name:"Home Insurance",checked:!1},{id:22,name:"Utilities, newspapers, or magazines",checked:!1},{id:23,name:"House keys, remotes, gate keys, and ...",checked:!1},{id:24,name:"Appliance, manual, receipts, and",checked:!1},{id:25,name:"Final checks",checked:!1},{id:26,name:"Real estate agent commissions",checked:!1}]},{category:"Expenses At Closing",list:[{id:31,name:"Real estate agent commissions",checked:!1},{id:32,name:"Transfer tax",checked:!1},{id:33,name:"Closing costs or credit to the buyer",checked:!1},{id:34,name:"Capital gains tax",checked:!1},{id:35,name:"Home warranty for the buyer",checked:!1},{id:36,name:"Real estate agent commissions",checked:!1}]},{category:"Expenses At Opening",list:[{id:41,name:"Real estate agent commissions",checked:!1},{id:42,name:"Transfer tax",checked:!1},{id:43,name:"Closing costs or credit to the buyer",checked:!1},{id:44,name:"Capital gains tax",checked:!1},{id:45,name:"Home warranty for the buyer",checked:!1},{id:46,name:"Real estate agent commissions",checked:!1}]}];e.setObject("checklist",r);var o=e.getObject("checklist"),i=function(){return o},a=function(n){n.checked=!n.checked},u=function(n,t,e){o.splice(t,1),o.splice(e,0,n)},l=function(n){o.splice(o.indexOf(n),1)},c=function(n){o.push(n)};return{getChecklist:i,checkItem:a,moveItem:u,onItemDelete:l,addItem:c}}]),angular.module("app.CommissionDirective",[]).directive("commissionDirective",["$timeout",function(n){var t=function(t,e,r){var o=e.children(".commission-flex"),i=o.children("commission-bar"),a=e.children()[0],u=function(n,t){return Math.floor(Math.random()*(t-n+1))+n};angular.forEach(i,function(t,e){n(function(){angular.element(t).addClass("commission-bar-animate-up").css({height:u(5,80)+"%"})},100*u(0,i.length))}),n(function(){angular.element(a).addClass("commission-dot-animate-wide")},100)};return{restrict:"A",templateUrl:"js/directives/commission.view.html",scope:{},replace:!0,link:t}}]),angular.module("app.NoScrollDirective",[]).directive("noScrollDirective",["$document",function(n){var t=function(t,e,r){n.on("touchmove",function(n){n.preventDefault()})};return{restrict:"A",link:t}}]),angular.module("app.ProposalFeesDirective",["ionic","d3Module"]).directive("proposalFeesDirective",["$ionicGesture","$window","d3",function(n,t,e){return{restrict:"EA",scope:{},link:function(n,r,o){window.onresize=function(){n.$apply()},n.data=[{label:"Greg",value:53245},{label:"Ari",value:28479},{label:"Q",value:19697},{label:"Loser",value:24037}],n.$watch(function(){return angular.element(t)[0].innerWidth},function(){n.render(n.data)}),n.render=function(t){function i(n){return n.startAngle+(n.endAngle-n.startAngle)/2}if(t){var a=(parseInt(o.margin)||20,parseInt(o.barHeight)||20,parseInt(o.barPadding)||5,window.innerWidth),u=300,l=Math.min(a,u)/2,c=e.select(r[0]).append("svg").attr("width","100%").attr("height",300);c.append("g").attr("class","slices").attr("transform","translate("+a/2+","+u/2+")"),c.append("g").attr("class","labels").attr("transform","translate("+a/2+","+u/2+")"),c.append("g").attr("class","lines").attr("transform","translate("+a/2+","+u/2+")");var s=e.scale.category20(),f=function(n){return n.data.label},h=e.layout.pie().value(function(n){return n.value}).sort(null),g=e.svg.arc().outerRadius(.8*l).innerRadius(.4*l),p=e.svg.arc().innerRadius(.9*l).outerRadius(.9*l),d=(c.select(".slices").selectAll("path.slice").data(h(n.data),f).enter().append("path").attr("fill",function(n,t){return s(t)}).attr("class","slices").transition().ease("exp").duration(500).attrTween("d",function(n){var t=e.interpolate(n.startAngle+.1,n.endAngle);return function(e){return n.endAngle=t(e),g(n)}}),c.select(".labels").selectAll("text").data(h(n.data),f).enter().append("text").attr("dy",".35em").attr("fill","#000000").text(function(n){return console.log("in"),n.data.label}));d.transition().duration(1e3).attrTween("transform",function(n){this._current=this._current||n;var t=e.interpolate(this._current,n);return this._current=t(0),function(n){var e=t(n),r=p.centroid(e);return r[0]=l*(i(e)<Math.PI?1:-1),"translate("+r+")"}}).styleTween("text-anchor",function(n){this._current=this._current||n;var t=e.interpolate(this._current,n);return this._current=t(0),function(n){var e=t(n);return i(e)<Math.PI?"start":"end"}});var m=c.select(".lines").selectAll("polyline").data(h(n.data),f).enter().append("polyline").attr("opacity","0.2").attr("stroke","black").attr("stroke-width","2px").attr("fill","none");m.transition().duration(1e3).attrTween("points",function(n){this._current=this._current||n;var t=e.interpolate(this._current,n);return this._current=t(0),function(n){var e=t(n),r=p.centroid(e);return r[0]=.95*l*(i(e)<Math.PI?1:-1),[g.centroid(e),p.centroid(e),r]}})}}}}}]),angular.module("app.ReviewImgDirective",[]).directive("reviewImgDirective",function(){var n=function(n){var t=function(n){return n.length>0},e=function(n,t){return Math.floor(Math.random()*(t-n+1))+n},r=function(n){return n.split(" ").map(function(n){return n.charAt(0).toUpperCase()}).slice(0,2).join("")},o=function(){var n=["red","blue","green"];return n[e(0,2)]};n.isImage=t,n.initials=r(n.name),n.randomColorClass=o};return n.$inject=["$scope"],{restrict:"E",templateUrl:"js/directives/review-img.view.html",scope:{image:"=",name:"="},replace:!0,controller:n}}),angular.module("app.StarDirective",[]).directive("starDirective",["$timeout",function(n){var t=function(n){var t=function(n){return new Array(Math.round(n))};n.parseStars=t};return t.$inject=["$scope"],{restrict:"E",templateUrl:"js/directives/star.view.html",scope:{rating:"="},replace:!0,controller:t}}]),angular.module("app.InterviewController",[]).controller("InterviewController",["$scope","$stateParams",function(n,t){}]),angular.module("app.InterviewFactory",[]).factory("InterviewFactory",["$http",function(n){return{}}]),angular.module("app.LocationController",[]).controller("LocationController",["$scope","$ionicModal","$timeout",function(n,t,e){n.location={}}]),angular.module("app.LocationDirective",[]).directive("locationSuggestion",["$ionicModal","LocationFactory",function(n,t){var e=function(e,r){e.search={},e.search.suggestions=[],e.search.query="",n.fromTemplateUrl("js/location/location.view.html",{scope:e,focusFirstInput:!0,animation:"slide-in-up"}).then(function(n){e.modal=n}),e.open=function(){e.modal.show()},e.close=function(){e.modal.hide()},e.$on("$destroy",function(){e.modal.remove()}),e.$on("modal.hide",function(){}),e.$on("modal.removed",function(){}),e.choosePlace=function(n){t.getDetails(n.place_id).then(function(n){e.location=n,e.close()})},r[0].addEventListener("focus",function(n){e.open()}),e.$watch("search.query",function(n){n&&t.searchAddress(n).then(function(n){e.search.error=null,e.search.suggestions=n},function(n){e.search.error="There was an error :( "+n})})};return{restrict:"A",scope:{location:"="},link:e}}]),angular.module("app.LocationFactory",[]).factory("LocationFactory",["$http","$q",function(n,t){var e=new google.maps.places.AutocompleteService,r=new google.maps.places.PlacesService(document.createElement("input")),o=function(n){var r=t.defer();return e.getPlacePredictions({input:n},function(n,t){t==google.maps.places.PlacesServiceStatus.OK?(console.log(t),r.resolve(n)):r.reject(t)}),r.promise},i=function(n){var e=t.defer();return r.getDetails({placeId:n},function(n){e.resolve(n)}),e.promise};return{searchAddress:o,getDetails:i}}]),angular.module("app.ModalController",[]).controller("ModalController",["$scope","$stateParams",function(n,t){}]),angular.module("app.ProposalInterviewController",[]).controller("ProposalInterviewController",["$scope","$stateParams","ProposalFactory",function(n,t,e){n.submitInterview=function(n){if(n.$valid){var r={id:t.proposalId,date:n.date,time:n.time,note:n.note};e.postInterview(r).then(function(n){console.log("submitInterview: success",n)})["catch"](function(n){console.log(n)})}else console.log("not valid")}}]),angular.module("app.ProposalQuestionsController",[]).controller("ProposalQuestionsController",["$scope","ProposalFactory",function(n,t){n.questions=[{q:"What is the reason for you to hire me?",a:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."},{q:"Why am I the best agent for you?",a:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum"},{q:"What are my insights into local market trends?",a:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."},{q:"How will I market your home?",a:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum"},{q:"How will I communicate with you?",a:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."}],n.toggleGroup=function(t){n.shownGroup=n.isGroupShown(t)?null:t},n.isGroupShown=function(t){return n.shownGroup===t}}]),angular.module("app.ProposalController",[]).controller("ProposalController",["$scope","$stateParams","ProposalFactory",function(n,t,e){n.proposal={},e.getProposal(t.proposalId).then(function(t){n.proposal=t})["catch"](function(n){console.log(n)})}]),angular.module("app.ProposalFactory",[]).factory("ProposalFactory",["$http",function(n){
var t=function(t){return n.get("http://localhost:8888/api/proposals/"+t).then(function(n){return n.data})["catch"](function(n){console.log(n)})},e=function(t){return n.get("http://localhost:8888/api/proposal/"+t).then(function(n){return n.data})["catch"](function(n){console.log(n)})},r=function(t){return n.post("http://localhost:8888/api/interview",t).then(function(n){return n.data})["catch"](function(n){console.log(n)})},o=function(t){return n.post("http://localhost:8888/api/proposal/decline",t).then(function(n){return n.data})["catch"](function(n){console.log(n)})};return{getProposals:t,getProposal:e,postInterview:r,postDeclineProposal:o}}]),angular.module("app.ProposalsController",[]).controller("ProposalsController",["$scope","$stateParams","ProposalFactory",function(n,t,e){n.cards=null,e.getProposals(t.userId).then(function(t){n.cards=t,n.$broadcast("getCards",n.cards)})["catch"](function(n){console.log(n)}),n.$on("removeCard",function(n,t,r){e.postDeclineProposal(r.proposal_id).then(function(n){})["catch"](function(n){console.log(n)})})}]),angular.module("app.BellController",[]).controller("BellController",["$scope","RequestFactory",function(n,t){n.bellData={},t.getBellData().then(function(t){n.bellData=t})["catch"](function(n){console.log(n)})}]),angular.module("app.RequestController",[]).controller("RequestController",["$scope","$ionicModal","RequestFactory",function(n,t,e){t.fromTemplateUrl("templates/request-modal-info.html",{scope:n,animation:"slide-in-up"}).then(function(t){n.modal=t}),n.openModal=function(){n.modal.show()},n.closeModal=function(){n.modal.hide()},n.$on("$destroy",function(){n.modal.remove()}),n.$on("modal.hidden",function(){}),n.$on("modal.removed",function(){}),n.submitRequest=function(n){if(n.$valid){var t={address:n.address,name:n.name,email:n.email,phone:n.phone};e.postRequest(t).then(function(n){console.log("submitRequest: success",n)})["catch"](function(n){console.log(n)})}else console.log("not valid")}}]),angular.module("app.RequestFactory",[]).factory("RequestFactory",["$http",function(n){var t=function(){return n.get("http://localhost:8888/api/bell").then(function(n){return n.data})["catch"](function(n){console.log(n)})},e=function(t){return n.post("http://localhost:8888/api/request",t).then(function(n){return n.data})["catch"](function(n){console.log(n)})};return{getBellData:t,postRequest:e}}]),angular.module("app.SplashController",[]).controller("SplashController",["$scope","$state",function(n,t){n.startApp=function(){t.go("tab.home"),window.localStorage.didTutorial=!0},"true"===window.localStorage.didTutorial?n.startApp():setTimeout(function(){navigator.splashscreen.hide()},750)}]),angular.module("d3Module",[]).factory("d3",[function(){function n(n){return n&&(n.ownerDocument||n.document||n).documentElement}function t(n){return n&&(n.ownerDocument&&n.ownerDocument.defaultView||n.document&&n||n.defaultView)}function e(n,t){return t>n?-1:n>t?1:n>=t?0:0/0}function r(n){return null===n?0/0:+n}function o(n){return!isNaN(n)}function i(n){return{left:function(t,e,r,o){for(arguments.length<3&&(r=0),arguments.length<4&&(o=t.length);o>r;){var i=r+o>>>1;n(t[i],e)<0?r=i+1:o=i}return r},right:function(t,e,r,o){for(arguments.length<3&&(r=0),arguments.length<4&&(o=t.length);o>r;){var i=r+o>>>1;n(t[i],e)>0?o=i:r=i+1}return r}}}function a(n){return n.length}function u(n){for(var t=1;n*t%1;)t*=10;return t}function l(n,t){for(var e in t)Object.defineProperty(n.prototype,e,{value:t[e],enumerable:!1})}function c(){this._=Object.create(null)}function s(n){return(n+="")===da||n[0]===ma?ma+n:n}function f(n){return(n+="")[0]===ma?n.slice(1):n}function h(n){return s(n)in this._}function g(n){return(n=s(n))in this._&&delete this._[n]}function p(){var n=[];for(var t in this._)n.push(f(t));return n}function d(){var n=0;for(var t in this._)++n;return n}function m(){for(var n in this._)return!1;return!0}function v(){this._=Object.create(null)}function y(n){return n}function M(n,t,e){return function(){var r=e.apply(t,arguments);return r===t?n:r}}function x(n,t){if(t in n)return t;t=t.charAt(0).toUpperCase()+t.slice(1);for(var e=0,r=va.length;r>e;++e){var o=va[e]+t;if(o in n)return o}}function w(){}function b(){}function _(n){function t(){for(var t,r=e,o=-1,i=r.length;++o<i;)(t=r[o].on)&&t.apply(this,arguments);return n}var e=[],r=new c;return t.on=function(t,o){var i,a=r.get(t);return arguments.length<2?a&&a.on:(a&&(a.on=null,e=e.slice(0,i=e.indexOf(a)).concat(e.slice(i+1)),r.remove(t)),o&&e.push(r.set(t,{on:o})),n)},t}function k(){ea.event.preventDefault()}function C(){for(var n,t=ea.event;n=t.sourceEvent;)t=n;return t}function S(n){for(var t=new b,e=0,r=arguments.length;++e<r;)t[arguments[e]]=_(t);return t.of=function(e,r){return function(o){try{var i=o.sourceEvent=ea.event;o.target=n,ea.event=o,t[o.type].apply(e,r)}finally{ea.event=i}}},t}function A(n){return Ma(n,_a),n}function E(n){return"function"==typeof n?n:function(){return xa(n,this)}}function q(n){return"function"==typeof n?n:function(){return wa(n,this)}}function N(n,t){function e(){this.removeAttribute(n)}function r(){this.removeAttributeNS(n.space,n.local)}function o(){this.setAttribute(n,t)}function i(){this.setAttributeNS(n.space,n.local,t)}function a(){var e=t.apply(this,arguments);null==e?this.removeAttribute(n):this.setAttribute(n,e)}function u(){var e=t.apply(this,arguments);null==e?this.removeAttributeNS(n.space,n.local):this.setAttributeNS(n.space,n.local,e)}return n=ea.ns.qualify(n),null==t?n.local?r:e:"function"==typeof t?n.local?u:a:n.local?i:o}function L(n){return n.trim().replace(/\s+/g," ")}function D(n){return new RegExp("(?:^|\\s+)"+ea.requote(n)+"(?:\\s+|$)","g")}function P(n){return(n+"").trim().split(/^|\s+/)}function T(n,t){function e(){for(var e=-1;++e<o;)n[e](this,t)}function r(){for(var e=-1,r=t.apply(this,arguments);++e<o;)n[e](this,r)}n=P(n).map(z);var o=n.length;return"function"==typeof t?r:e}function z(n){var t=D(n);return function(e,r){if(o=e.classList)return r?o.add(n):o.remove(n);var o=e.getAttribute("class")||"";r?(t.lastIndex=0,t.test(o)||e.setAttribute("class",L(o+" "+n))):e.setAttribute("class",L(o.replace(t," ")))}}function R(n,t,e){function r(){this.style.removeProperty(n)}function o(){this.style.setProperty(n,t,e)}function i(){var r=t.apply(this,arguments);null==r?this.style.removeProperty(n):this.style.setProperty(n,r,e)}return null==t?r:"function"==typeof t?i:o}function $(n,t){function e(){delete this[n]}function r(){this[n]=t}function o(){var e=t.apply(this,arguments);null==e?delete this[n]:this[n]=e}return null==t?e:"function"==typeof t?o:r}function U(n){function t(){var t=this.ownerDocument,e=this.namespaceURI;return e?t.createElementNS(e,n):t.createElement(n)}function e(){return this.ownerDocument.createElementNS(n.space,n.local)}return"function"==typeof n?n:(n=ea.ns.qualify(n)).local?e:t}function j(){var n=this.parentNode;n&&n.removeChild(this)}function I(n){return{__data__:n}}function F(n){return function(){return ba(this,n)}}function O(n){return arguments.length||(n=e),function(t,e){return t&&e?n(t.__data__,e.__data__):!t-!e}}function H(n,t){for(var e=0,r=n.length;r>e;e++)for(var o,i=n[e],a=0,u=i.length;u>a;a++)(o=i[a])&&t(o,a,e);return n}function Y(n){return Ma(n,Ca),n}function B(n){var t,e;return function(r,o,i){var a,u=n[i].update,l=u.length;for(i!=e&&(e=i,t=0),o>=t&&(t=o+1);!(a=u[t])&&++t<l;);return a}}function Z(n,t,e){function r(){var t=this[a];t&&(this.removeEventListener(n,t,t.$),delete this[a])}function o(){var o=l(t,oa(arguments));r.call(this),this.addEventListener(n,this[a]=o,o.$=e),o._=t}function i(){var t,e=new RegExp("^__on([^.]+)"+ea.requote(n)+"$");for(var r in this)if(t=r.match(e)){var o=this[r];this.removeEventListener(t[1],o,o.$),delete this[r]}}var a="__on"+n,u=n.indexOf("."),l=V;u>0&&(n=n.slice(0,u));var c=Sa.get(n);return c&&(n=c,l=X),u?t?o:r:t?w:i}function V(n,t){return function(e){var r=ea.event;ea.event=e,t[0]=this.__data__;try{n.apply(this,t)}finally{ea.event=r}}}function X(n,t){var e=V(n,t);return function(n){var t=this,r=n.relatedTarget;r&&(r===t||8&r.compareDocumentPosition(t))||e.call(t,n)}}function W(e){var r=".dragsuppress-"+ ++Ea,o="click"+r,i=ea.select(t(e)).on("touchmove"+r,k).on("dragstart"+r,k).on("selectstart"+r,k);if(null==Aa&&(Aa="onselectstart"in e?!1:x(e.style,"userSelect")),Aa){var a=n(e).style,u=a[Aa];a[Aa]="none"}return function(n){if(i.on(r,null),Aa&&(a[Aa]=u),n){var t=function(){i.on(o,null)};i.on(o,function(){k(),t()},!0),setTimeout(t,0)}}}function G(n,e){e.changedTouches&&(e=e.changedTouches[0]);var r=n.ownerSVGElement||n;if(r.createSVGPoint){var o=r.createSVGPoint();if(0>qa){var i=t(n);if(i.scrollX||i.scrollY){r=ea.select("body").append("svg").style({position:"absolute",top:0,left:0,margin:0,padding:0,border:"none"},"important");var a=r[0][0].getScreenCTM();qa=!(a.f||a.e),r.remove()}}return qa?(o.x=e.pageX,o.y=e.pageY):(o.x=e.clientX,o.y=e.clientY),o=o.matrixTransform(n.getScreenCTM().inverse()),[o.x,o.y]}var u=n.getBoundingClientRect();return[e.clientX-u.left-n.clientLeft,e.clientY-u.top-n.clientTop]}function J(){return ea.event.changedTouches[0].identifier}function K(n){return n>0?1:0>n?-1:0}function Q(n,t,e){return(t[0]-n[0])*(e[1]-n[1])-(t[1]-n[1])*(e[0]-n[0])}function nn(n){return n>1?0:-1>n?Da:Math.acos(n)}function tn(n){return n>1?za:-1>n?-za:Math.asin(n)}function en(n){return((n=Math.exp(n))-1/n)/2}function rn(n){return((n=Math.exp(n))+1/n)/2}function on(n){return((n=Math.exp(2*n))-1)/(n+1)}function an(n){return(n=Math.sin(n/2))*n}function un(){}function ln(n,t,e){return this instanceof ln?(this.h=+n,this.s=+t,void(this.l=+e)):arguments.length<2?n instanceof ln?new ln(n.h,n.s,n.l):bn(""+n,_n,ln):new ln(n,t,e)}function cn(n,t,e){function r(n){return n>360?n-=360:0>n&&(n+=360),60>n?i+(a-i)*n/60:180>n?a:240>n?i+(a-i)*(240-n)/60:i}function o(n){return Math.round(255*r(n))}var i,a;return n=isNaN(n)?0:(n%=360)<0?n+360:n,t=isNaN(t)?0:0>t?0:t>1?1:t,e=0>e?0:e>1?1:e,a=.5>=e?e*(1+t):e+t-e*t,i=2*e-a,new yn(o(n+120),o(n),o(n-120))}function sn(n,t,e){return this instanceof sn?(this.h=+n,this.c=+t,void(this.l=+e)):arguments.length<2?n instanceof sn?new sn(n.h,n.c,n.l):n instanceof hn?pn(n.l,n.a,n.b):pn((n=kn((n=ea.rgb(n)).r,n.g,n.b)).l,n.a,n.b):new sn(n,t,e)}function fn(n,t,e){return isNaN(n)&&(n=0),isNaN(t)&&(t=0),new hn(e,Math.cos(n*=Ra)*t,Math.sin(n)*t)}function hn(n,t,e){return this instanceof hn?(this.l=+n,this.a=+t,void(this.b=+e)):arguments.length<2?n instanceof hn?new hn(n.l,n.a,n.b):n instanceof sn?fn(n.h,n.c,n.l):kn((n=yn(n)).r,n.g,n.b):new hn(n,t,e)}function gn(n,t,e){var r=(n+16)/116,o=r+t/500,i=r-e/200;return o=dn(o)*Va,r=dn(r)*Xa,i=dn(i)*Wa,new yn(vn(3.2404542*o-1.5371385*r-.4985314*i),vn(-.969266*o+1.8760108*r+.041556*i),vn(.0556434*o-.2040259*r+1.0572252*i))}function pn(n,t,e){return n>0?new sn(Math.atan2(e,t)*$a,Math.sqrt(t*t+e*e),n):new sn(0/0,0/0,n)}function dn(n){return n>.206893034?n*n*n:(n-4/29)/7.787037}function mn(n){return n>.008856?Math.pow(n,1/3):7.787037*n+4/29}function vn(n){return Math.round(255*(.00304>=n?12.92*n:1.055*Math.pow(n,1/2.4)-.055))}function yn(n,t,e){return this instanceof yn?(this.r=~~n,this.g=~~t,void(this.b=~~e)):arguments.length<2?n instanceof yn?new yn(n.r,n.g,n.b):bn(""+n,yn,cn):new yn(n,t,e)}function Mn(n){return new yn(n>>16,n>>8&255,255&n)}function xn(n){return Mn(n)+""}function wn(n){return 16>n?"0"+Math.max(0,n).toString(16):Math.min(255,n).toString(16)}function bn(n,t,e){var r,o,i,a=0,u=0,l=0;if(r=/([a-z]+)\((.*)\)/i.exec(n))switch(o=r[2].split(","),r[1]){case"hsl":return e(parseFloat(o[0]),parseFloat(o[1])/100,parseFloat(o[2])/100);case"rgb":return t(Sn(o[0]),Sn(o[1]),Sn(o[2]))}return(i=Ka.get(n.toLowerCase()))?t(i.r,i.g,i.b):(null==n||"#"!==n.charAt(0)||isNaN(i=parseInt(n.slice(1),16))||(4===n.length?(a=(3840&i)>>4,a=a>>4|a,u=240&i,u=u>>4|u,l=15&i,l=l<<4|l):7===n.length&&(a=(16711680&i)>>16,u=(65280&i)>>8,l=255&i)),t(a,u,l))}function _n(n,t,e){var r,o,i=Math.min(n/=255,t/=255,e/=255),a=Math.max(n,t,e),u=a-i,l=(a+i)/2;return u?(o=.5>l?u/(a+i):u/(2-a-i),r=n==a?(t-e)/u+(e>t?6:0):t==a?(e-n)/u+2:(n-t)/u+4,r*=60):(r=0/0,o=l>0&&1>l?0:r),new ln(r,o,l)}function kn(n,t,e){n=Cn(n),t=Cn(t),e=Cn(e);var r=mn((.4124564*n+.3575761*t+.1804375*e)/Va),o=mn((.2126729*n+.7151522*t+.072175*e)/Xa),i=mn((.0193339*n+.119192*t+.9503041*e)/Wa);return hn(116*o-16,500*(r-o),200*(o-i))}function Cn(n){return(n/=255)<=.04045?n/12.92:Math.pow((n+.055)/1.055,2.4)}function Sn(n){var t=parseFloat(n);return"%"===n.charAt(n.length-1)?Math.round(2.55*t):t}function An(n){return"function"==typeof n?n:function(){return n}}function En(n){return function(t,e,r){return 2===arguments.length&&"function"==typeof e&&(r=e,e=null),qn(t,e,n,r)}}function qn(n,t,e,r){function o(){var n,t=l.status;if(!t&&Ln(l)||t>=200&&300>t||304===t){try{n=e.call(i,l)}catch(r){return void a.error.call(i,r)}a.load.call(i,n)}else a.error.call(i,l)}var i={},a=ea.dispatch("beforesend","progress","load","error"),u={},l=new XMLHttpRequest,c=null;return!this.XDomainRequest||"withCredentials"in l||!/^(http(s)?:)?\/\//.test(n)||(l=new XDomainRequest),"onload"in l?l.onload=l.onerror=o:l.onreadystatechange=function(){l.readyState>3&&o()},l.onprogress=function(n){var t=ea.event;ea.event=n;try{a.progress.call(i,l)}finally{ea.event=t}},i.header=function(n,t){return n=(n+"").toLowerCase(),arguments.length<2?u[n]:(null==t?delete u[n]:u[n]=t+"",i)},i.mimeType=function(n){return arguments.length?(t=null==n?null:n+"",i):t},i.responseType=function(n){return arguments.length?(c=n,i):c},i.response=function(n){return e=n,i},["get","post"].forEach(function(n){i[n]=function(){return i.send.apply(i,[n].concat(oa(arguments)))}}),i.send=function(e,r,o){if(2===arguments.length&&"function"==typeof r&&(o=r,r=null),l.open(e,n,!0),null==t||"accept"in u||(u.accept=t+",*/*"),l.setRequestHeader)for(var s in u)l.setRequestHeader(s,u[s]);return null!=t&&l.overrideMimeType&&l.overrideMimeType(t),null!=c&&(l.responseType=c),null!=o&&i.on("error",o).on("load",function(n){o(null,n)}),a.beforesend.call(i,l),l.send(null==r?null:r),i},i.abort=function(){return l.abort(),i},ea.rebind(i,a,"on"),null==r?i:i.get(Nn(r))}function Nn(n){return 1===n.length?function(t,e){n(null==t?e:null)}:n}function Ln(n){var t=n.responseType;return t&&"text"!==t?n.response:n.responseText}function Dn(){var n=Pn(),t=Tn()-n;t>24?(isFinite(t)&&(clearTimeout(eu),eu=setTimeout(Dn,t)),tu=0):(tu=1,ou(Dn))}function Pn(){var n=Date.now();for(ru=Qa;ru;)n>=ru.t&&(ru.f=ru.c(n-ru.t)),ru=ru.n;return n}function Tn(){for(var n,t=Qa,e=1/0;t;)t.f?t=n?n.n=t.n:Qa=t.n:(t.t<e&&(e=t.t),t=(n=t).n);return nu=n,e}function zn(n,t){return t-(n?Math.ceil(Math.log(n)/Math.LN10):1)}function Rn(n,t){var e=Math.pow(10,3*pa(8-t));return{scale:t>8?function(n){return n/e}:function(n){return n*e},symbol:n}}function $n(n){var t=n.decimal,e=n.thousands,r=n.grouping,o=n.currency,i=r&&e?function(n,t){for(var o=n.length,i=[],a=0,u=r[0],l=0;o>0&&u>0&&(l+u+1>t&&(u=Math.max(1,t-l)),i.push(n.substring(o-=u,o+u)),!((l+=u+1)>t));)u=r[a=(a+1)%r.length];return i.reverse().join(e)}:y;return function(n){var e=au.exec(n),r=e[1]||" ",a=e[2]||">",u=e[3]||"-",l=e[4]||"",c=e[5],s=+e[6],f=e[7],h=e[8],g=e[9],p=1,d="",m="",v=!1,y=!0;switch(h&&(h=+h.substring(1)),(c||"0"===r&&"="===a)&&(c=r="0",a="="),g){case"n":f=!0,g="g";break;case"%":p=100,m="%",g="f";break;case"p":p=100,m="%",g="r";break;case"b":case"o":case"x":case"X":"#"===l&&(d="0"+g.toLowerCase());case"c":y=!1;case"d":v=!0,h=0;break;case"s":p=-1,g="r"}"$"===l&&(d=o[0],m=o[1]),"r"!=g||h||(g="g"),null!=h&&("g"==g?h=Math.max(1,Math.min(21,h)):("e"==g||"f"==g)&&(h=Math.max(0,Math.min(20,h)))),g=uu.get(g)||Un;var M=c&&f;return function(n){var e=m;if(v&&n%1)return"";var o=0>n||0===n&&0>1/n?(n=-n,"-"):"-"===u?"":u;if(0>p){var l=ea.formatPrefix(n,h);n=l.scale(n),e=l.symbol+m}else n*=p;n=g(n,h);var x,w,b=n.lastIndexOf(".");if(0>b){var _=y?n.lastIndexOf("e"):-1;0>_?(x=n,w=""):(x=n.substring(0,_),w=n.substring(_))}else x=n.substring(0,b),w=t+n.substring(b+1);!c&&f&&(x=i(x,1/0));var k=d.length+x.length+w.length+(M?0:o.length),C=s>k?new Array(k=s-k+1).join(r):"";return M&&(x=i(C+x,C.length?s-w.length:1/0)),o+=d,n=x+w,("<"===a?o+n+C:">"===a?C+o+n:"^"===a?C.substring(0,k>>=1)+o+n+C.substring(k):o+(M?n:C+n))+e}}}function Un(n){return n+""}function jn(){this._=new Date(arguments.length>1?Date.UTC.apply(this,arguments):arguments[0])}function In(n,t,e){function r(t){var e=n(t),r=i(e,1);return r-t>t-e?e:r}function o(e){return t(e=n(new cu(e-1)),1),e}function i(n,e){return t(n=new cu(+n),e),n}function a(n,r,i){var a=o(n),u=[];if(i>1)for(;r>a;)e(a)%i||u.push(new Date(+a)),t(a,1);else for(;r>a;)u.push(new Date(+a)),t(a,1);return u}function u(n,t,e){try{cu=jn;var r=new jn;return r._=n,a(r,t,e)}finally{cu=Date}}n.floor=n,n.round=r,n.ceil=o,n.offset=i,n.range=a;var l=n.utc=Fn(n);return l.floor=l,l.round=Fn(r),l.ceil=Fn(o),l.offset=Fn(i),l.range=u,n}function Fn(n){return function(t,e){try{cu=jn;var r=new jn;return r._=t,n(r,e)._}finally{cu=Date}}}function On(n){function t(n){function t(t){for(var e,o,i,a=[],u=-1,l=0;++u<r;)37===n.charCodeAt(u)&&(a.push(n.slice(l,u)),null!=(o=fu[e=n.charAt(++u)])&&(e=n.charAt(++u)),(i=E[e])&&(e=i(t,null==o?"e"===e?" ":"0":o)),a.push(e),l=u+1);return a.push(n.slice(l,u)),a.join("")}var r=n.length;return t.parse=function(t){var r={y:1900,m:0,d:1,H:0,M:0,S:0,L:0,Z:null},o=e(r,n,t,0);if(o!=t.length)return null;"p"in r&&(r.H=r.H%12+12*r.p);var i=null!=r.Z&&cu!==jn,a=new(i?jn:cu);return"j"in r?a.setFullYear(r.y,0,r.j):"w"in r&&("W"in r||"U"in r)?(a.setFullYear(r.y,0,1),a.setFullYear(r.y,0,"W"in r?(r.w+6)%7+7*r.W-(a.getDay()+5)%7:r.w+7*r.U-(a.getDay()+6)%7)):a.setFullYear(r.y,r.m,r.d),a.setHours(r.H+(r.Z/100|0),r.M+r.Z%100,r.S,r.L),i?a._:a},t.toString=function(){return n},t}function e(n,t,e,r){for(var o,i,a,u=0,l=t.length,c=e.length;l>u;){if(r>=c)return-1;if(o=t.charCodeAt(u++),37===o){if(a=t.charAt(u++),i=q[a in fu?t.charAt(u++):a],!i||(r=i(n,e,r))<0)return-1}else if(o!=e.charCodeAt(r++))return-1}return r}function r(n,t,e){b.lastIndex=0;var r=b.exec(t.slice(e));return r?(n.w=_.get(r[0].toLowerCase()),e+r[0].length):-1}function o(n,t,e){x.lastIndex=0;var r=x.exec(t.slice(e));return r?(n.w=w.get(r[0].toLowerCase()),e+r[0].length):-1}function i(n,t,e){S.lastIndex=0;var r=S.exec(t.slice(e));return r?(n.m=A.get(r[0].toLowerCase()),e+r[0].length):-1}function a(n,t,e){k.lastIndex=0;var r=k.exec(t.slice(e));return r?(n.m=C.get(r[0].toLowerCase()),e+r[0].length):-1}function u(n,t,r){return e(n,E.c.toString(),t,r)}function l(n,t,r){return e(n,E.x.toString(),t,r)}function c(n,t,r){return e(n,E.X.toString(),t,r)}function s(n,t,e){var r=M.get(t.slice(e,e+=2).toLowerCase());return null==r?-1:(n.p=r,e)}var f=n.dateTime,h=n.date,g=n.time,p=n.periods,d=n.days,m=n.shortDays,v=n.months,y=n.shortMonths;t.utc=function(n){function e(n){try{cu=jn;var t=new cu;return t._=n,r(t)}finally{cu=Date}}var r=t(n);return e.parse=function(n){try{cu=jn;var t=r.parse(n);return t&&t._}finally{cu=Date}},e.toString=r.toString,e},t.multi=t.utc.multi=lt;var M=ea.map(),x=Yn(d),w=Bn(d),b=Yn(m),_=Bn(m),k=Yn(v),C=Bn(v),S=Yn(y),A=Bn(y);p.forEach(function(n,t){M.set(n.toLowerCase(),t)});var E={a:function(n){return m[n.getDay()]},A:function(n){return d[n.getDay()]},b:function(n){return y[n.getMonth()]},B:function(n){return v[n.getMonth()]},c:t(f),d:function(n,t){return Hn(n.getDate(),t,2)},e:function(n,t){return Hn(n.getDate(),t,2)},H:function(n,t){return Hn(n.getHours(),t,2)},I:function(n,t){return Hn(n.getHours()%12||12,t,2)},j:function(n,t){return Hn(1+lu.dayOfYear(n),t,3)},L:function(n,t){return Hn(n.getMilliseconds(),t,3)},m:function(n,t){return Hn(n.getMonth()+1,t,2)},M:function(n,t){return Hn(n.getMinutes(),t,2)},p:function(n){return p[+(n.getHours()>=12)]},S:function(n,t){return Hn(n.getSeconds(),t,2)},U:function(n,t){return Hn(lu.sundayOfYear(n),t,2)},w:function(n){return n.getDay()},W:function(n,t){return Hn(lu.mondayOfYear(n),t,2)},x:t(h),X:t(g),y:function(n,t){return Hn(n.getFullYear()%100,t,2)},Y:function(n,t){return Hn(n.getFullYear()%1e4,t,4)},Z:at,"%":function(){return"%"}},q={a:r,A:o,b:i,B:a,c:u,d:nt,e:nt,H:et,I:et,j:tt,L:it,m:Qn,M:rt,p:s,S:ot,U:Vn,w:Zn,W:Xn,x:l,X:c,y:Gn,Y:Wn,Z:Jn,"%":ut};return t}function Hn(n,t,e){var r=0>n?"-":"",o=(r?-n:n)+"",i=o.length;return r+(e>i?new Array(e-i+1).join(t)+o:o)}function Yn(n){return new RegExp("^(?:"+n.map(ea.requote).join("|")+")","i")}function Bn(n){for(var t=new c,e=-1,r=n.length;++e<r;)t.set(n[e].toLowerCase(),e);return t}function Zn(n,t,e){hu.lastIndex=0;var r=hu.exec(t.slice(e,e+1));return r?(n.w=+r[0],e+r[0].length):-1}function Vn(n,t,e){hu.lastIndex=0;var r=hu.exec(t.slice(e));return r?(n.U=+r[0],e+r[0].length):-1}function Xn(n,t,e){hu.lastIndex=0;var r=hu.exec(t.slice(e));return r?(n.W=+r[0],e+r[0].length):-1}function Wn(n,t,e){hu.lastIndex=0;var r=hu.exec(t.slice(e,e+4));return r?(n.y=+r[0],e+r[0].length):-1}function Gn(n,t,e){hu.lastIndex=0;var r=hu.exec(t.slice(e,e+2));return r?(n.y=Kn(+r[0]),e+r[0].length):-1}function Jn(n,t,e){return/^[+-]\d{4}$/.test(t=t.slice(e,e+5))?(n.Z=-t,e+5):-1}function Kn(n){return n+(n>68?1900:2e3)}function Qn(n,t,e){hu.lastIndex=0;var r=hu.exec(t.slice(e,e+2));return r?(n.m=r[0]-1,e+r[0].length):-1}function nt(n,t,e){hu.lastIndex=0;var r=hu.exec(t.slice(e,e+2));return r?(n.d=+r[0],e+r[0].length):-1}function tt(n,t,e){hu.lastIndex=0;var r=hu.exec(t.slice(e,e+3));return r?(n.j=+r[0],e+r[0].length):-1}function et(n,t,e){hu.lastIndex=0;var r=hu.exec(t.slice(e,e+2));return r?(n.H=+r[0],e+r[0].length):-1}function rt(n,t,e){hu.lastIndex=0;var r=hu.exec(t.slice(e,e+2));return r?(n.M=+r[0],e+r[0].length):-1}function ot(n,t,e){hu.lastIndex=0;var r=hu.exec(t.slice(e,e+2));return r?(n.S=+r[0],e+r[0].length):-1}function it(n,t,e){hu.lastIndex=0;var r=hu.exec(t.slice(e,e+3));return r?(n.L=+r[0],e+r[0].length):-1}function at(n){var t=n.getTimezoneOffset(),e=t>0?"-":"+",r=pa(t)/60|0,o=pa(t)%60;return e+Hn(r,"0",2)+Hn(o,"0",2)}function ut(n,t,e){gu.lastIndex=0;var r=gu.exec(t.slice(e,e+1));return r?e+r[0].length:-1}function lt(n){for(var t=n.length,e=-1;++e<t;)n[e][0]=this(n[e][0]);return function(t){for(var e=0,r=n[e];!r[1](t);)r=n[++e];return r[0](t)}}function ct(){}function st(n,t,e){var r=e.s=n+t,o=r-n,i=r-o;e.t=n-i+(t-o)}function ft(n,t){n&&vu.hasOwnProperty(n.type)&&vu[n.type](n,t)}function ht(n,t,e){var r,o=-1,i=n.length-e;for(t.lineStart();++o<i;)r=n[o],t.point(r[0],r[1],r[2]);t.lineEnd()}function gt(n,t){var e=-1,r=n.length;for(t.polygonStart();++e<r;)ht(n[e],t,1);t.polygonEnd()}function pt(){function n(n,t){n*=Ra,t=t*Ra/2+Da/4;var e=n-r,a=e>=0?1:-1,u=a*e,l=Math.cos(t),c=Math.sin(t),s=i*c,f=o*l+s*Math.cos(u),h=s*a*Math.sin(u);Mu.add(Math.atan2(h,f)),r=n,o=l,i=c}var t,e,r,o,i;xu.point=function(a,u){xu.point=n,r=(t=a)*Ra,o=Math.cos(u=(e=u)*Ra/2+Da/4),i=Math.sin(u)},xu.lineEnd=function(){n(t,e)}}function dt(n){var t=n[0],e=n[1],r=Math.cos(e);return[r*Math.cos(t),r*Math.sin(t),Math.sin(e)]}function mt(n,t){return n[0]*t[0]+n[1]*t[1]+n[2]*t[2]}function vt(n,t){return[n[1]*t[2]-n[2]*t[1],n[2]*t[0]-n[0]*t[2],n[0]*t[1]-n[1]*t[0]]}function yt(n,t){n[0]+=t[0],n[1]+=t[1],n[2]+=t[2]}function Mt(n,t){return[n[0]*t,n[1]*t,n[2]*t]}function xt(n){var t=Math.sqrt(n[0]*n[0]+n[1]*n[1]+n[2]*n[2]);n[0]/=t,n[1]/=t,n[2]/=t}function wt(n){return[Math.atan2(n[1],n[0]),tn(n[2])]}function bt(n,t){return pa(n[0]-t[0])<Na&&pa(n[1]-t[1])<Na}function _t(n,t){n*=Ra;var e=Math.cos(t*=Ra);kt(e*Math.cos(n),e*Math.sin(n),Math.sin(t))}function kt(n,t,e){++wu,_u+=(n-_u)/wu,ku+=(t-ku)/wu,Cu+=(e-Cu)/wu}function Ct(){function n(n,o){n*=Ra;var i=Math.cos(o*=Ra),a=i*Math.cos(n),u=i*Math.sin(n),l=Math.sin(o),c=Math.atan2(Math.sqrt((c=e*l-r*u)*c+(c=r*a-t*l)*c+(c=t*u-e*a)*c),t*a+e*u+r*l);bu+=c,Su+=c*(t+(t=a)),Au+=c*(e+(e=u)),Eu+=c*(r+(r=l)),kt(t,e,r)}var t,e,r;Du.point=function(o,i){o*=Ra;var a=Math.cos(i*=Ra);t=a*Math.cos(o),e=a*Math.sin(o),r=Math.sin(i),Du.point=n,kt(t,e,r)}}function St(){Du.point=_t}function At(){function n(n,t){n*=Ra;var e=Math.cos(t*=Ra),a=e*Math.cos(n),u=e*Math.sin(n),l=Math.sin(t),c=o*l-i*u,s=i*a-r*l,f=r*u-o*a,h=Math.sqrt(c*c+s*s+f*f),g=r*a+o*u+i*l,p=h&&-nn(g)/h,d=Math.atan2(h,g);qu+=p*c,Nu+=p*s,Lu+=p*f,bu+=d,Su+=d*(r+(r=a)),Au+=d*(o+(o=u)),Eu+=d*(i+(i=l)),kt(r,o,i)}var t,e,r,o,i;Du.point=function(a,u){t=a,e=u,Du.point=n,a*=Ra;var l=Math.cos(u*=Ra);r=l*Math.cos(a),o=l*Math.sin(a),i=Math.sin(u),kt(r,o,i)},Du.lineEnd=function(){n(t,e),Du.lineEnd=St,Du.point=_t}}function Et(n,t){function e(e,r){return e=n(e,r),t(e[0],e[1])}return n.invert&&t.invert&&(e.invert=function(e,r){return e=t.invert(e,r),e&&n.invert(e[0],e[1])}),e}function qt(){return!0}function Nt(n,t,e,r,o){var i=[],a=[];if(n.forEach(function(n){if(!((t=n.length-1)<=0)){var t,e=n[0],r=n[t];if(bt(e,r)){o.lineStart();for(var u=0;t>u;++u)o.point((e=n[u])[0],e[1]);return void o.lineEnd()}var l=new Dt(e,n,null,!0),c=new Dt(e,null,l,!1);l.o=c,i.push(l),a.push(c),l=new Dt(r,n,null,!1),c=new Dt(r,null,l,!0),l.o=c,i.push(l),a.push(c)}}),a.sort(t),Lt(i),Lt(a),i.length){for(var u=0,l=e,c=a.length;c>u;++u)a[u].e=l=!l;for(var s,f,h=i[0];;){for(var g=h,p=!0;g.v;)if((g=g.n)===h)return;s=g.z,o.lineStart();do{if(g.v=g.o.v=!0,g.e){if(p)for(var u=0,c=s.length;c>u;++u)o.point((f=s[u])[0],f[1]);else r(g.x,g.n.x,1,o);g=g.n}else{if(p){s=g.p.z;for(var u=s.length-1;u>=0;--u)o.point((f=s[u])[0],f[1])}else r(g.x,g.p.x,-1,o);g=g.p}g=g.o,s=g.z,p=!p}while(!g.v);o.lineEnd()}}}function Lt(n){if(t=n.length){for(var t,e,r=0,o=n[0];++r<t;)o.n=e=n[r],e.p=o,o=e;o.n=e=n[0],e.p=o}}function Dt(n,t,e,r){this.x=n,this.z=t,this.o=e,this.e=r,this.v=!1,this.n=this.p=null}function Pt(n,t,e,r){return function(o,i){function a(t,e){var r=o(t,e);n(t=r[0],e=r[1])&&i.point(t,e)}function u(n,t){var e=o(n,t);m.point(e[0],e[1])}function l(){y.point=u,m.lineStart()}function c(){y.point=a,m.lineEnd()}function s(n,t){d.push([n,t]);var e=o(n,t);x.point(e[0],e[1])}function f(){x.lineStart(),d=[]}function h(){s(d[0][0],d[0][1]),x.lineEnd();var n,t=x.clean(),e=M.buffer(),r=e.length;if(d.pop(),p.push(d),d=null,r)if(1&t){n=e[0];var o,r=n.length-1,a=-1;if(r>0){for(w||(i.polygonStart(),w=!0),i.lineStart();++a<r;)i.point((o=n[a])[0],o[1]);i.lineEnd()}}else r>1&&2&t&&e.push(e.pop().concat(e.shift())),g.push(e.filter(Tt))}var g,p,d,m=t(i),v=o.invert(r[0],r[1]),y={point:a,lineStart:l,lineEnd:c,polygonStart:function(){y.point=s,y.lineStart=f,y.lineEnd=h,g=[],p=[]},polygonEnd:function(){y.point=a,y.lineStart=l,y.lineEnd=c,g=ea.merge(g);var n=It(v,p);g.length?(w||(i.polygonStart(),w=!0),Nt(g,Rt,n,e,i)):n&&(w||(i.polygonStart(),w=!0),i.lineStart(),e(null,null,1,i),i.lineEnd()),w&&(i.polygonEnd(),w=!1),g=p=null},sphere:function(){i.polygonStart(),i.lineStart(),e(null,null,1,i),i.lineEnd(),i.polygonEnd()}},M=zt(),x=t(M),w=!1;return y}}function Tt(n){return n.length>1}function zt(){var n,t=[];return{lineStart:function(){t.push(n=[])},point:function(t,e){n.push([t,e])},lineEnd:w,buffer:function(){var e=t;return t=[],n=null,e},rejoin:function(){t.length>1&&t.push(t.pop().concat(t.shift()))}}}function Rt(n,t){return((n=n.x)[0]<0?n[1]-za-Na:za-n[1])-((t=t.x)[0]<0?t[1]-za-Na:za-t[1])}function $t(n){var t,e=0/0,r=0/0,o=0/0;return{lineStart:function(){n.lineStart(),t=1},point:function(i,a){var u=i>0?Da:-Da,l=pa(i-e);pa(l-Da)<Na?(n.point(e,r=(r+a)/2>0?za:-za),n.point(o,r),n.lineEnd(),n.lineStart(),n.point(u,r),n.point(i,r),t=0):o!==u&&l>=Da&&(pa(e-o)<Na&&(e-=o*Na),pa(i-u)<Na&&(i-=u*Na),r=Ut(e,r,i,a),n.point(o,r),n.lineEnd(),n.lineStart(),n.point(u,r),t=0),n.point(e=i,r=a),o=u},lineEnd:function(){n.lineEnd(),e=r=0/0},clean:function(){return 2-t}}}function Ut(n,t,e,r){var o,i,a=Math.sin(n-e);return pa(a)>Na?Math.atan((Math.sin(t)*(i=Math.cos(r))*Math.sin(e)-Math.sin(r)*(o=Math.cos(t))*Math.sin(n))/(o*i*a)):(t+r)/2}function jt(n,t,e,r){var o;if(null==n)o=e*za,r.point(-Da,o),r.point(0,o),r.point(Da,o),r.point(Da,0),r.point(Da,-o),r.point(0,-o),r.point(-Da,-o),r.point(-Da,0),r.point(-Da,o);else if(pa(n[0]-t[0])>Na){var i=n[0]<t[0]?Da:-Da;o=e*i/2,r.point(-i,o),r.point(0,o),r.point(i,o)}else r.point(t[0],t[1])}function It(n,t){var e=n[0],r=n[1],o=[Math.sin(e),-Math.cos(e),0],i=0,a=0;Mu.reset();for(var u=0,l=t.length;l>u;++u){var c=t[u],s=c.length;if(s)for(var f=c[0],h=f[0],g=f[1]/2+Da/4,p=Math.sin(g),d=Math.cos(g),m=1;;){m===s&&(m=0),n=c[m];var v=n[0],y=n[1]/2+Da/4,M=Math.sin(y),x=Math.cos(y),w=v-h,b=w>=0?1:-1,_=b*w,k=_>Da,C=p*M;if(Mu.add(Math.atan2(C*b*Math.sin(_),d*x+C*Math.cos(_))),i+=k?w+b*Pa:w,k^h>=e^v>=e){var S=vt(dt(f),dt(n));xt(S);var A=vt(o,S);xt(A);var E=(k^w>=0?-1:1)*tn(A[2]);(r>E||r===E&&(S[0]||S[1]))&&(a+=k^w>=0?1:-1)}if(!m++)break;h=v,p=M,d=x,f=n}}return(-Na>i||Na>i&&0>Mu)^1&a}function Ft(n){function t(n,t){return Math.cos(n)*Math.cos(t)>i}function e(n){var e,i,l,c,s;return{lineStart:function(){c=l=!1,s=1},point:function(f,h){var g,p=[f,h],d=t(f,h),m=a?d?0:o(f,h):d?o(f+(0>f?Da:-Da),h):0;if(!e&&(c=l=d)&&n.lineStart(),d!==l&&(g=r(e,p),(bt(e,g)||bt(p,g))&&(p[0]+=Na,p[1]+=Na,d=t(p[0],p[1]))),d!==l)s=0,d?(n.lineStart(),g=r(p,e),n.point(g[0],g[1])):(g=r(e,p),n.point(g[0],g[1]),n.lineEnd()),e=g;else if(u&&e&&a^d){var v;m&i||!(v=r(p,e,!0))||(s=0,a?(n.lineStart(),n.point(v[0][0],v[0][1]),n.point(v[1][0],v[1][1]),n.lineEnd()):(n.point(v[1][0],v[1][1]),n.lineEnd(),n.lineStart(),n.point(v[0][0],v[0][1])))}!d||e&&bt(e,p)||n.point(p[0],p[1]),e=p,l=d,i=m},lineEnd:function(){l&&n.lineEnd(),e=null},clean:function(){return s|(c&&l)<<1}}}function r(n,t,e){var r=dt(n),o=dt(t),a=[1,0,0],u=vt(r,o),l=mt(u,u),c=u[0],s=l-c*c;if(!s)return!e&&n;var f=i*l/s,h=-i*c/s,g=vt(a,u),p=Mt(a,f),d=Mt(u,h);yt(p,d);var m=g,v=mt(p,m),y=mt(m,m),M=v*v-y*(mt(p,p)-1);if(!(0>M)){var x=Math.sqrt(M),w=Mt(m,(-v-x)/y);if(yt(w,p),w=wt(w),!e)return w;var b,_=n[0],k=t[0],C=n[1],S=t[1];_>k&&(b=_,_=k,k=b);var A=k-_,E=pa(A-Da)<Na,q=E||Na>A;if(!E&&C>S&&(b=C,C=S,S=b),q?E?C+S>0^w[1]<(pa(w[0]-_)<Na?C:S):C<=w[1]&&w[1]<=S:A>Da^(_<=w[0]&&w[0]<=k)){var N=Mt(m,(-v+x)/y);return yt(N,p),[w,wt(N)]}}}function o(t,e){var r=a?n:Da-n,o=0;return-r>t?o|=1:t>r&&(o|=2),-r>e?o|=4:e>r&&(o|=8),o}var i=Math.cos(n),a=i>0,u=pa(i)>Na,l=pe(n,6*Ra);return Pt(t,e,l,a?[0,-n]:[-Da,n-Da])}function Ot(n,t,e,r){return function(o){var i,a=o.a,u=o.b,l=a.x,c=a.y,s=u.x,f=u.y,h=0,g=1,p=s-l,d=f-c;if(i=n-l,p||!(i>0)){if(i/=p,0>p){if(h>i)return;g>i&&(g=i)}else if(p>0){if(i>g)return;i>h&&(h=i)}if(i=e-l,p||!(0>i)){if(i/=p,0>p){if(i>g)return;i>h&&(h=i)}else if(p>0){if(h>i)return;g>i&&(g=i)}if(i=t-c,d||!(i>0)){if(i/=d,0>d){if(h>i)return;g>i&&(g=i)}else if(d>0){if(i>g)return;i>h&&(h=i)}if(i=r-c,d||!(0>i)){if(i/=d,0>d){if(i>g)return;i>h&&(h=i)}else if(d>0){if(h>i)return;g>i&&(g=i)}return h>0&&(o.a={x:l+h*p,y:c+h*d}),1>g&&(o.b={x:l+g*p,y:c+g*d}),o}}}}}}function Ht(n,t,e,r){function o(r,o){return pa(r[0]-n)<Na?o>0?0:3:pa(r[0]-e)<Na?o>0?2:1:pa(r[1]-t)<Na?o>0?1:0:o>0?3:2}function i(n,t){return a(n.x,t.x)}function a(n,t){var e=o(n,1),r=o(t,1);return e!==r?e-r:0===e?t[1]-n[1]:1===e?n[0]-t[0]:2===e?n[1]-t[1]:t[0]-n[0]}return function(u){function l(n){for(var t=0,e=m.length,r=n[1],o=0;e>o;++o)for(var i,a=1,u=m[o],l=u.length,c=u[0];l>a;++a)i=u[a],c[1]<=r?i[1]>r&&Q(c,i,n)>0&&++t:i[1]<=r&&Q(c,i,n)<0&&--t,c=i;return 0!==t}function c(i,u,l,c){var s=0,f=0;if(null==i||(s=o(i,l))!==(f=o(u,l))||a(i,u)<0^l>0){do c.point(0===s||3===s?n:e,s>1?r:t);while((s=(s+l+4)%4)!==f)}else c.point(u[0],u[1])}function s(o,i){return o>=n&&e>=o&&i>=t&&r>=i}function f(n,t){s(n,t)&&u.point(n,t)}function h(){q.point=p,m&&m.push(v=[]),k=!0,_=!1,w=b=0/0}function g(){d&&(p(y,M),x&&_&&A.rejoin(),d.push(A.buffer())),q.point=f,_&&u.lineEnd()}function p(n,t){n=Math.max(-Tu,Math.min(Tu,n)),t=Math.max(-Tu,Math.min(Tu,t));var e=s(n,t);if(m&&v.push([n,t]),k)y=n,M=t,x=e,k=!1,e&&(u.lineStart(),u.point(n,t));else if(e&&_)u.point(n,t);else{var r={a:{x:w,y:b},b:{x:n,y:t}};E(r)?(_||(u.lineStart(),u.point(r.a.x,r.a.y)),u.point(r.b.x,r.b.y),e||u.lineEnd(),C=!1):e&&(u.lineStart(),u.point(n,t),C=!1)}w=n,b=t,_=e}var d,m,v,y,M,x,w,b,_,k,C,S=u,A=zt(),E=Ot(n,t,e,r),q={point:f,lineStart:h,lineEnd:g,polygonStart:function(){u=A,d=[],m=[],C=!0},polygonEnd:function(){u=S,d=ea.merge(d);var t=l([n,r]),e=C&&t,o=d.length;(e||o)&&(u.polygonStart(),e&&(u.lineStart(),c(null,null,1,u),
u.lineEnd()),o&&Nt(d,i,t,c,u),u.polygonEnd()),d=m=v=null}};return q}}function Yt(n){var t=0,e=Da/3,r=ae(n),o=r(t,e);return o.parallels=function(n){return arguments.length?r(t=n[0]*Da/180,e=n[1]*Da/180):[t/Da*180,e/Da*180]},o}function Bt(n,t){function e(n,t){var e=Math.sqrt(i-2*o*Math.sin(t))/o;return[e*Math.sin(n*=o),a-e*Math.cos(n)]}var r=Math.sin(n),o=(r+Math.sin(t))/2,i=1+r*(2*o-r),a=Math.sqrt(i)/o;return e.invert=function(n,t){var e=a-t;return[Math.atan2(n,e)/o,tn((i-(n*n+e*e)*o*o)/(2*o))]},e}function Zt(){function n(n,t){Ru+=o*n-r*t,r=n,o=t}var t,e,r,o;Fu.point=function(i,a){Fu.point=n,t=r=i,e=o=a},Fu.lineEnd=function(){n(t,e)}}function Vt(n,t){$u>n&&($u=n),n>ju&&(ju=n),Uu>t&&(Uu=t),t>Iu&&(Iu=t)}function Xt(){function n(n,t){a.push("M",n,",",t,i)}function t(n,t){a.push("M",n,",",t),u.point=e}function e(n,t){a.push("L",n,",",t)}function r(){u.point=n}function o(){a.push("Z")}var i=Wt(4.5),a=[],u={point:n,lineStart:function(){u.point=t},lineEnd:r,polygonStart:function(){u.lineEnd=o},polygonEnd:function(){u.lineEnd=r,u.point=n},pointRadius:function(n){return i=Wt(n),u},result:function(){if(a.length){var n=a.join("");return a=[],n}}};return u}function Wt(n){return"m0,"+n+"a"+n+","+n+" 0 1,1 0,"+-2*n+"a"+n+","+n+" 0 1,1 0,"+2*n+"z"}function Gt(n,t){_u+=n,ku+=t,++Cu}function Jt(){function n(n,r){var o=n-t,i=r-e,a=Math.sqrt(o*o+i*i);Su+=a*(t+n)/2,Au+=a*(e+r)/2,Eu+=a,Gt(t=n,e=r)}var t,e;Hu.point=function(r,o){Hu.point=n,Gt(t=r,e=o)}}function Kt(){Hu.point=Gt}function Qt(){function n(n,t){var e=n-r,i=t-o,a=Math.sqrt(e*e+i*i);Su+=a*(r+n)/2,Au+=a*(o+t)/2,Eu+=a,a=o*n-r*t,qu+=a*(r+n),Nu+=a*(o+t),Lu+=3*a,Gt(r=n,o=t)}var t,e,r,o;Hu.point=function(i,a){Hu.point=n,Gt(t=r=i,e=o=a)},Hu.lineEnd=function(){n(t,e)}}function ne(n){function t(t,e){n.moveTo(t+a,e),n.arc(t,e,a,0,Pa)}function e(t,e){n.moveTo(t,e),u.point=r}function r(t,e){n.lineTo(t,e)}function o(){u.point=t}function i(){n.closePath()}var a=4.5,u={point:t,lineStart:function(){u.point=e},lineEnd:o,polygonStart:function(){u.lineEnd=i},polygonEnd:function(){u.lineEnd=o,u.point=t},pointRadius:function(n){return a=n,u},result:w};return u}function te(n){function t(n){return(u?r:e)(n)}function e(t){return oe(t,function(e,r){e=n(e,r),t.point(e[0],e[1])})}function r(t){function e(e,r){e=n(e,r),t.point(e[0],e[1])}function r(){M=0/0,k.point=i,t.lineStart()}function i(e,r){var i=dt([e,r]),a=n(e,r);o(M,x,y,w,b,_,M=a[0],x=a[1],y=e,w=i[0],b=i[1],_=i[2],u,t),t.point(M,x)}function a(){k.point=e,t.lineEnd()}function l(){r(),k.point=c,k.lineEnd=s}function c(n,t){i(f=n,h=t),g=M,p=x,d=w,m=b,v=_,k.point=i}function s(){o(M,x,y,w,b,_,g,p,f,d,m,v,u,t),k.lineEnd=a,a()}var f,h,g,p,d,m,v,y,M,x,w,b,_,k={point:e,lineStart:r,lineEnd:a,polygonStart:function(){t.polygonStart(),k.lineStart=l},polygonEnd:function(){t.polygonEnd(),k.lineStart=r}};return k}function o(t,e,r,u,l,c,s,f,h,g,p,d,m,v){var y=s-t,M=f-e,x=y*y+M*M;if(x>4*i&&m--){var w=u+g,b=l+p,_=c+d,k=Math.sqrt(w*w+b*b+_*_),C=Math.asin(_/=k),S=pa(pa(_)-1)<Na||pa(r-h)<Na?(r+h)/2:Math.atan2(b,w),A=n(S,C),E=A[0],q=A[1],N=E-t,L=q-e,D=M*N-y*L;(D*D/x>i||pa((y*N+M*L)/x-.5)>.3||a>u*g+l*p+c*d)&&(o(t,e,r,u,l,c,E,q,S,w/=k,b/=k,_,m,v),v.point(E,q),o(E,q,S,w,b,_,s,f,h,g,p,d,m,v))}}var i=.5,a=Math.cos(30*Ra),u=16;return t.precision=function(n){return arguments.length?(u=(i=n*n)>0&&16,t):Math.sqrt(i)},t}function ee(n){var t=te(function(t,e){return n([t*$a,e*$a])});return function(n){return ue(t(n))}}function re(n){this.stream=n}function oe(n,t){return{point:t,sphere:function(){n.sphere()},lineStart:function(){n.lineStart()},lineEnd:function(){n.lineEnd()},polygonStart:function(){n.polygonStart()},polygonEnd:function(){n.polygonEnd()}}}function ie(n){return ae(function(){return n})()}function ae(n){function t(n){return n=u(n[0]*Ra,n[1]*Ra),[n[0]*h+l,c-n[1]*h]}function e(n){return n=u.invert((n[0]-l)/h,(c-n[1])/h),n&&[n[0]*$a,n[1]*$a]}function r(){u=Et(a=se(v,M,x),i);var n=i(d,m);return l=g-n[0]*h,c=p+n[1]*h,o()}function o(){return s&&(s.valid=!1,s=null),t}var i,a,u,l,c,s,f=te(function(n,t){return n=i(n,t),[n[0]*h+l,c-n[1]*h]}),h=150,g=480,p=250,d=0,m=0,v=0,M=0,x=0,w=Pu,b=y,_=null,k=null;return t.stream=function(n){return s&&(s.valid=!1),s=ue(w(a,f(b(n)))),s.valid=!0,s},t.clipAngle=function(n){return arguments.length?(w=null==n?(_=n,Pu):Ft((_=+n)*Ra),o()):_},t.clipExtent=function(n){return arguments.length?(k=n,b=n?Ht(n[0][0],n[0][1],n[1][0],n[1][1]):y,o()):k},t.scale=function(n){return arguments.length?(h=+n,r()):h},t.translate=function(n){return arguments.length?(g=+n[0],p=+n[1],r()):[g,p]},t.center=function(n){return arguments.length?(d=n[0]%360*Ra,m=n[1]%360*Ra,r()):[d*$a,m*$a]},t.rotate=function(n){return arguments.length?(v=n[0]%360*Ra,M=n[1]%360*Ra,x=n.length>2?n[2]%360*Ra:0,r()):[v*$a,M*$a,x*$a]},ea.rebind(t,f,"precision"),function(){return i=n.apply(this,arguments),t.invert=i.invert&&e,r()}}function ue(n){return oe(n,function(t,e){n.point(t*Ra,e*Ra)})}function le(n,t){return[n,t]}function ce(n,t){return[n>Da?n-Pa:-Da>n?n+Pa:n,t]}function se(n,t,e){return n?t||e?Et(he(n),ge(t,e)):he(n):t||e?ge(t,e):ce}function fe(n){return function(t,e){return t+=n,[t>Da?t-Pa:-Da>t?t+Pa:t,e]}}function he(n){var t=fe(n);return t.invert=fe(-n),t}function ge(n,t){function e(n,t){var e=Math.cos(t),u=Math.cos(n)*e,l=Math.sin(n)*e,c=Math.sin(t),s=c*r+u*o;return[Math.atan2(l*i-s*a,u*r-c*o),tn(s*i+l*a)]}var r=Math.cos(n),o=Math.sin(n),i=Math.cos(t),a=Math.sin(t);return e.invert=function(n,t){var e=Math.cos(t),u=Math.cos(n)*e,l=Math.sin(n)*e,c=Math.sin(t),s=c*i-l*a;return[Math.atan2(l*i+c*a,u*r+s*o),tn(s*r-u*o)]},e}function pe(n,t){var e=Math.cos(n),r=Math.sin(n);return function(o,i,a,u){var l=a*t;null!=o?(o=de(e,o),i=de(e,i),(a>0?i>o:o>i)&&(o+=a*Pa)):(o=n+a*Pa,i=n-.5*l);for(var c,s=o;a>0?s>i:i>s;s-=l)u.point((c=wt([e,-r*Math.cos(s),-r*Math.sin(s)]))[0],c[1])}}function de(n,t){var e=dt(t);e[0]-=n,xt(e);var r=nn(-e[1]);return((-e[2]<0?-r:r)+2*Math.PI-Na)%(2*Math.PI)}function me(n,t,e){var r=ea.range(n,t-Na,e).concat(t);return function(n){return r.map(function(t){return[n,t]})}}function ve(n,t,e){var r=ea.range(n,t-Na,e).concat(t);return function(n){return r.map(function(t){return[t,n]})}}function ye(n){return n.source}function Me(n){return n.target}function xe(n,t,e,r){var o=Math.cos(t),i=Math.sin(t),a=Math.cos(r),u=Math.sin(r),l=o*Math.cos(n),c=o*Math.sin(n),s=a*Math.cos(e),f=a*Math.sin(e),h=2*Math.asin(Math.sqrt(an(r-t)+o*a*an(e-n))),g=1/Math.sin(h),p=h?function(n){var t=Math.sin(n*=h)*g,e=Math.sin(h-n)*g,r=e*l+t*s,o=e*c+t*f,a=e*i+t*u;return[Math.atan2(o,r)*$a,Math.atan2(a,Math.sqrt(r*r+o*o))*$a]}:function(){return[n*$a,t*$a]};return p.distance=h,p}function we(){function n(n,o){var i=Math.sin(o*=Ra),a=Math.cos(o),u=pa((n*=Ra)-t),l=Math.cos(u);Yu+=Math.atan2(Math.sqrt((u=a*Math.sin(u))*u+(u=r*i-e*a*l)*u),e*i+r*a*l),t=n,e=i,r=a}var t,e,r;Bu.point=function(o,i){t=o*Ra,e=Math.sin(i*=Ra),r=Math.cos(i),Bu.point=n},Bu.lineEnd=function(){Bu.point=Bu.lineEnd=w}}function be(n,t){function e(t,e){var r=Math.cos(t),o=Math.cos(e),i=n(r*o);return[i*o*Math.sin(t),i*Math.sin(e)]}return e.invert=function(n,e){var r=Math.sqrt(n*n+e*e),o=t(r),i=Math.sin(o),a=Math.cos(o);return[Math.atan2(n*i,r*a),Math.asin(r&&e*i/r)]},e}function _e(n,t){function e(n,t){a>0?-za+Na>t&&(t=-za+Na):t>za-Na&&(t=za-Na);var e=a/Math.pow(o(t),i);return[e*Math.sin(i*n),a-e*Math.cos(i*n)]}var r=Math.cos(n),o=function(n){return Math.tan(Da/4+n/2)},i=n===t?Math.sin(n):Math.log(r/Math.cos(t))/Math.log(o(t)/o(n)),a=r*Math.pow(o(n),i)/i;return i?(e.invert=function(n,t){var e=a-t,r=K(i)*Math.sqrt(n*n+e*e);return[Math.atan2(n,e)/i,2*Math.atan(Math.pow(a/r,1/i))-za]},e):Ce}function ke(n,t){function e(n,t){var e=i-t;return[e*Math.sin(o*n),i-e*Math.cos(o*n)]}var r=Math.cos(n),o=n===t?Math.sin(n):(r-Math.cos(t))/(t-n),i=r/o+n;return pa(o)<Na?le:(e.invert=function(n,t){var e=i-t;return[Math.atan2(n,e)/o,i-K(o)*Math.sqrt(n*n+e*e)]},e)}function Ce(n,t){return[n,Math.log(Math.tan(Da/4+t/2))]}function Se(n){var t,e=ie(n),r=e.scale,o=e.translate,i=e.clipExtent;return e.scale=function(){var n=r.apply(e,arguments);return n===e?t?e.clipExtent(null):e:n},e.translate=function(){var n=o.apply(e,arguments);return n===e?t?e.clipExtent(null):e:n},e.clipExtent=function(n){var a=i.apply(e,arguments);if(a===e){if(t=null==n){var u=Da*r(),l=o();i([[l[0]-u,l[1]-u],[l[0]+u,l[1]+u]])}}else t&&(a=null);return a},e.clipExtent(null)}function Ae(n,t){return[Math.log(Math.tan(Da/4+t/2)),-n]}function Ee(n){return n[0]}function qe(n){return n[1]}function Ne(n){for(var t=n.length,e=[0,1],r=2,o=2;t>o;o++){for(;r>1&&Q(n[e[r-2]],n[e[r-1]],n[o])<=0;)--r;e[r++]=o}return e.slice(0,r)}function Le(n,t){return n[0]-t[0]||n[1]-t[1]}function De(n,t,e){return(e[0]-t[0])*(n[1]-t[1])<(e[1]-t[1])*(n[0]-t[0])}function Pe(n,t,e,r){var o=n[0],i=e[0],a=t[0]-o,u=r[0]-i,l=n[1],c=e[1],s=t[1]-l,f=r[1]-c,h=(u*(l-c)-f*(o-i))/(f*a-u*s);return[o+h*a,l+h*s]}function Te(n){var t=n[0],e=n[n.length-1];return!(t[0]-e[0]||t[1]-e[1])}function ze(){er(this),this.edge=this.site=this.circle=null}function Re(n){var t=rl.pop()||new ze;return t.site=n,t}function $e(n){Ve(n),nl.remove(n),rl.push(n),er(n)}function Ue(n){var t=n.circle,e=t.x,r=t.cy,o={x:e,y:r},i=n.P,a=n.N,u=[n];$e(n);for(var l=i;l.circle&&pa(e-l.circle.x)<Na&&pa(r-l.circle.cy)<Na;)i=l.P,u.unshift(l),$e(l),l=i;u.unshift(l),Ve(l);for(var c=a;c.circle&&pa(e-c.circle.x)<Na&&pa(r-c.circle.cy)<Na;)a=c.N,u.push(c),$e(c),c=a;u.push(c),Ve(c);var s,f=u.length;for(s=1;f>s;++s)c=u[s],l=u[s-1],Qe(c.edge,l.site,c.site,o);l=u[0],c=u[f-1],c.edge=Je(l.site,c.site,null,o),Ze(l),Ze(c)}function je(n){for(var t,e,r,o,i=n.x,a=n.y,u=nl._;u;)if(r=Ie(u,a)-i,r>Na)u=u.L;else{if(o=i-Fe(u,a),!(o>Na)){r>-Na?(t=u.P,e=u):o>-Na?(t=u,e=u.N):t=e=u;break}if(!u.R){t=u;break}u=u.R}var l=Re(n);if(nl.insert(t,l),t||e){if(t===e)return Ve(t),e=Re(t.site),nl.insert(l,e),l.edge=e.edge=Je(t.site,l.site),Ze(t),void Ze(e);if(!e)return void(l.edge=Je(t.site,l.site));Ve(t),Ve(e);var c=t.site,s=c.x,f=c.y,h=n.x-s,g=n.y-f,p=e.site,d=p.x-s,m=p.y-f,v=2*(h*m-g*d),y=h*h+g*g,M=d*d+m*m,x={x:(m*y-g*M)/v+s,y:(h*M-d*y)/v+f};Qe(e.edge,c,p,x),l.edge=Je(c,n,null,x),e.edge=Je(n,p,null,x),Ze(t),Ze(e)}}function Ie(n,t){var e=n.site,r=e.x,o=e.y,i=o-t;if(!i)return r;var a=n.P;if(!a)return-(1/0);e=a.site;var u=e.x,l=e.y,c=l-t;if(!c)return u;var s=u-r,f=1/i-1/c,h=s/c;return f?(-h+Math.sqrt(h*h-2*f*(s*s/(-2*c)-l+c/2+o-i/2)))/f+r:(r+u)/2}function Fe(n,t){var e=n.N;if(e)return Ie(e,t);var r=n.site;return r.y===t?r.x:1/0}function Oe(n){this.site=n,this.edges=[]}function He(n){for(var t,e,r,o,i,a,u,l,c,s,f=n[0][0],h=n[1][0],g=n[0][1],p=n[1][1],d=Qu,m=d.length;m--;)if(i=d[m],i&&i.prepare())for(u=i.edges,l=u.length,a=0;l>a;)s=u[a].end(),r=s.x,o=s.y,c=u[++a%l].start(),t=c.x,e=c.y,(pa(r-t)>Na||pa(o-e)>Na)&&(u.splice(a,0,new nr(Ke(i.site,s,pa(r-f)<Na&&p-o>Na?{x:f,y:pa(t-f)<Na?e:p}:pa(o-p)<Na&&h-r>Na?{x:pa(e-p)<Na?t:h,y:p}:pa(r-h)<Na&&o-g>Na?{x:h,y:pa(t-h)<Na?e:g}:pa(o-g)<Na&&r-f>Na?{x:pa(e-g)<Na?t:f,y:g}:null),i.site,null)),++l)}function Ye(n,t){return t.angle-n.angle}function Be(){er(this),this.x=this.y=this.arc=this.site=this.cy=null}function Ze(n){var t=n.P,e=n.N;if(t&&e){var r=t.site,o=n.site,i=e.site;if(r!==i){var a=o.x,u=o.y,l=r.x-a,c=r.y-u,s=i.x-a,f=i.y-u,h=2*(l*f-c*s);if(!(h>=-La)){var g=l*l+c*c,p=s*s+f*f,d=(f*g-c*p)/h,m=(l*p-s*g)/h,f=m+u,v=ol.pop()||new Be;v.arc=n,v.site=o,v.x=d+a,v.y=f+Math.sqrt(d*d+m*m),v.cy=f,n.circle=v;for(var y=null,M=el._;M;)if(v.y<M.y||v.y===M.y&&v.x<=M.x){if(!M.L){y=M.P;break}M=M.L}else{if(!M.R){y=M;break}M=M.R}el.insert(y,v),y||(tl=v)}}}}function Ve(n){var t=n.circle;t&&(t.P||(tl=t.N),el.remove(t),ol.push(t),er(t),n.circle=null)}function Xe(n){for(var t,e=Ku,r=Ot(n[0][0],n[0][1],n[1][0],n[1][1]),o=e.length;o--;)t=e[o],(!We(t,n)||!r(t)||pa(t.a.x-t.b.x)<Na&&pa(t.a.y-t.b.y)<Na)&&(t.a=t.b=null,e.splice(o,1))}function We(n,t){var e=n.b;if(e)return!0;var r,o,i=n.a,a=t[0][0],u=t[1][0],l=t[0][1],c=t[1][1],s=n.l,f=n.r,h=s.x,g=s.y,p=f.x,d=f.y,m=(h+p)/2,v=(g+d)/2;if(d===g){if(a>m||m>=u)return;if(h>p){if(i){if(i.y>=c)return}else i={x:m,y:l};e={x:m,y:c}}else{if(i){if(i.y<l)return}else i={x:m,y:c};e={x:m,y:l}}}else if(r=(h-p)/(d-g),o=v-r*m,-1>r||r>1)if(h>p){if(i){if(i.y>=c)return}else i={x:(l-o)/r,y:l};e={x:(c-o)/r,y:c}}else{if(i){if(i.y<l)return}else i={x:(c-o)/r,y:c};e={x:(l-o)/r,y:l}}else if(d>g){if(i){if(i.x>=u)return}else i={x:a,y:r*a+o};e={x:u,y:r*u+o}}else{if(i){if(i.x<a)return}else i={x:u,y:r*u+o};e={x:a,y:r*a+o}}return n.a=i,n.b=e,!0}function Ge(n,t){this.l=n,this.r=t,this.a=this.b=null}function Je(n,t,e,r){var o=new Ge(n,t);return Ku.push(o),e&&Qe(o,n,t,e),r&&Qe(o,t,n,r),Qu[n.i].edges.push(new nr(o,n,t)),Qu[t.i].edges.push(new nr(o,t,n)),o}function Ke(n,t,e){var r=new Ge(n,null);return r.a=t,r.b=e,Ku.push(r),r}function Qe(n,t,e,r){n.a||n.b?n.l===e?n.b=r:n.a=r:(n.a=r,n.l=t,n.r=e)}function nr(n,t,e){var r=n.a,o=n.b;this.edge=n,this.site=t,this.angle=e?Math.atan2(e.y-t.y,e.x-t.x):n.l===t?Math.atan2(o.x-r.x,r.y-o.y):Math.atan2(r.x-o.x,o.y-r.y)}function tr(){this._=null}function er(n){n.U=n.C=n.L=n.R=n.P=n.N=null}function rr(n,t){var e=t,r=t.R,o=e.U;o?o.L===e?o.L=r:o.R=r:n._=r,r.U=o,e.U=r,e.R=r.L,e.R&&(e.R.U=e),r.L=e}function or(n,t){var e=t,r=t.L,o=e.U;o?o.L===e?o.L=r:o.R=r:n._=r,r.U=o,e.U=r,e.L=r.R,e.L&&(e.L.U=e),r.R=e}function ir(n){for(;n.L;)n=n.L;return n}function ar(n,t){var e,r,o,i=n.sort(ur).pop();for(Ku=[],Qu=new Array(n.length),nl=new tr,el=new tr;;)if(o=tl,i&&(!o||i.y<o.y||i.y===o.y&&i.x<o.x))(i.x!==e||i.y!==r)&&(Qu[i.i]=new Oe(i),je(i),e=i.x,r=i.y),i=n.pop();else{if(!o)break;Ue(o.arc)}t&&(Xe(t),He(t));var a={cells:Qu,edges:Ku};return nl=el=Ku=Qu=null,a}function ur(n,t){return t.y-n.y||t.x-n.x}function lr(n,t,e){return(n.x-e.x)*(t.y-n.y)-(n.x-t.x)*(e.y-n.y)}function cr(n){return n.x}function sr(n){return n.y}function fr(){return{leaf:!0,nodes:[],point:null,x:null,y:null}}function hr(n,t,e,r,o,i){if(!n(t,e,r,o,i)){var a=.5*(e+o),u=.5*(r+i),l=t.nodes;l[0]&&hr(n,l[0],e,r,a,u),l[1]&&hr(n,l[1],a,r,o,u),l[2]&&hr(n,l[2],e,u,a,i),l[3]&&hr(n,l[3],a,u,o,i)}}function gr(n,t,e,r,o,i,a){var u,l=1/0;return function c(n,s,f,h,g){if(!(s>i||f>a||r>h||o>g)){if(p=n.point){var p,d=t-n.x,m=e-n.y,v=d*d+m*m;if(l>v){var y=Math.sqrt(l=v);r=t-y,o=e-y,i=t+y,a=e+y,u=p}}for(var M=n.nodes,x=.5*(s+h),w=.5*(f+g),b=t>=x,_=e>=w,k=_<<1|b,C=k+4;C>k;++k)if(n=M[3&k])switch(3&k){case 0:c(n,s,f,x,w);break;case 1:c(n,x,f,h,w);break;case 2:c(n,s,w,x,g);break;case 3:c(n,x,w,h,g)}}}(n,r,o,i,a),u}function pr(n,t){n=ea.rgb(n),t=ea.rgb(t);var e=n.r,r=n.g,o=n.b,i=t.r-e,a=t.g-r,u=t.b-o;return function(n){return"#"+wn(Math.round(e+i*n))+wn(Math.round(r+a*n))+wn(Math.round(o+u*n))}}function dr(n,t){var e,r={},o={};for(e in n)e in t?r[e]=yr(n[e],t[e]):o[e]=n[e];for(e in t)e in n||(o[e]=t[e]);return function(n){for(e in r)o[e]=r[e](n);return o}}function mr(n,t){return n=+n,t=+t,function(e){return n*(1-e)+t*e}}function vr(n,t){var e,r,o,i=al.lastIndex=ul.lastIndex=0,a=-1,u=[],l=[];for(n+="",t+="";(e=al.exec(n))&&(r=ul.exec(t));)(o=r.index)>i&&(o=t.slice(i,o),u[a]?u[a]+=o:u[++a]=o),(e=e[0])===(r=r[0])?u[a]?u[a]+=r:u[++a]=r:(u[++a]=null,l.push({i:a,x:mr(e,r)})),i=ul.lastIndex;return i<t.length&&(o=t.slice(i),u[a]?u[a]+=o:u[++a]=o),u.length<2?l[0]?(t=l[0].x,function(n){return t(n)+""}):function(){return t}:(t=l.length,function(n){for(var e,r=0;t>r;++r)u[(e=l[r]).i]=e.x(n);return u.join("")})}function yr(n,t){for(var e,r=ea.interpolators.length;--r>=0&&!(e=ea.interpolators[r](n,t)););return e}function Mr(n,t){var e,r=[],o=[],i=n.length,a=t.length,u=Math.min(n.length,t.length);for(e=0;u>e;++e)r.push(yr(n[e],t[e]));for(;i>e;++e)o[e]=n[e];for(;a>e;++e)o[e]=t[e];return function(n){for(e=0;u>e;++e)o[e]=r[e](n);return o}}function xr(n){return function(t){return 0>=t?0:t>=1?1:n(t)}}function wr(n){return function(t){return 1-n(1-t)}}function br(n){return function(t){return.5*(.5>t?n(2*t):2-n(2-2*t))}}function _r(n){return n*n}function kr(n){return n*n*n}function Cr(n){if(0>=n)return 0;if(n>=1)return 1;var t=n*n,e=t*n;return 4*(.5>n?e:3*(n-t)+e-.75)}function Sr(n){return function(t){return Math.pow(t,n)}}function Ar(n){return 1-Math.cos(n*za)}function Er(n){return Math.pow(2,10*(n-1))}function qr(n){return 1-Math.sqrt(1-n*n)}function Nr(n,t){var e;return arguments.length<2&&(t=.45),arguments.length?e=t/Pa*Math.asin(1/n):(n=1,e=t/4),function(r){return 1+n*Math.pow(2,-10*r)*Math.sin((r-e)*Pa/t)}}function Lr(n){return n||(n=1.70158),function(t){return t*t*((n+1)*t-n)}}function Dr(n){return 1/2.75>n?7.5625*n*n:2/2.75>n?7.5625*(n-=1.5/2.75)*n+.75:2.5/2.75>n?7.5625*(n-=2.25/2.75)*n+.9375:7.5625*(n-=2.625/2.75)*n+.984375}function Pr(n,t){n=ea.hcl(n),t=ea.hcl(t);var e=n.h,r=n.c,o=n.l,i=t.h-e,a=t.c-r,u=t.l-o;return isNaN(a)&&(a=0,r=isNaN(r)?t.c:r),isNaN(i)?(i=0,e=isNaN(e)?t.h:e):i>180?i-=360:-180>i&&(i+=360),function(n){return fn(e+i*n,r+a*n,o+u*n)+""}}function Tr(n,t){n=ea.hsl(n),t=ea.hsl(t);var e=n.h,r=n.s,o=n.l,i=t.h-e,a=t.s-r,u=t.l-o;return isNaN(a)&&(a=0,r=isNaN(r)?t.s:r),isNaN(i)?(i=0,e=isNaN(e)?t.h:e):i>180?i-=360:-180>i&&(i+=360),function(n){return cn(e+i*n,r+a*n,o+u*n)+""}}function zr(n,t){n=ea.lab(n),t=ea.lab(t);var e=n.l,r=n.a,o=n.b,i=t.l-e,a=t.a-r,u=t.b-o;return function(n){return gn(e+i*n,r+a*n,o+u*n)+""}}function Rr(n,t){return t-=n,function(e){return Math.round(n+t*e)}}function $r(n){var t=[n.a,n.b],e=[n.c,n.d],r=jr(t),o=Ur(t,e),i=jr(Ir(e,t,-o))||0;t[0]*e[1]<e[0]*t[1]&&(t[0]*=-1,t[1]*=-1,r*=-1,o*=-1),this.rotate=(r?Math.atan2(t[1],t[0]):Math.atan2(-e[0],e[1]))*$a,this.translate=[n.e,n.f],this.scale=[r,i],this.skew=i?Math.atan2(o,i)*$a:0}function Ur(n,t){return n[0]*t[0]+n[1]*t[1]}function jr(n){var t=Math.sqrt(Ur(n,n));return t&&(n[0]/=t,n[1]/=t),t}function Ir(n,t,e){return n[0]+=e*t[0],n[1]+=e*t[1],n}function Fr(n,t){var e,r=[],o=[],i=ea.transform(n),a=ea.transform(t),u=i.translate,l=a.translate,c=i.rotate,s=a.rotate,f=i.skew,h=a.skew,g=i.scale,p=a.scale;return u[0]!=l[0]||u[1]!=l[1]?(r.push("translate(",null,",",null,")"),o.push({i:1,x:mr(u[0],l[0])},{i:3,x:mr(u[1],l[1])})):r.push(l[0]||l[1]?"translate("+l+")":""),c!=s?(c-s>180?s+=360:s-c>180&&(c+=360),o.push({i:r.push(r.pop()+"rotate(",null,")")-2,x:mr(c,s)})):s&&r.push(r.pop()+"rotate("+s+")"),f!=h?o.push({i:r.push(r.pop()+"skewX(",null,")")-2,x:mr(f,h)}):h&&r.push(r.pop()+"skewX("+h+")"),g[0]!=p[0]||g[1]!=p[1]?(e=r.push(r.pop()+"scale(",null,",",null,")"),o.push({i:e-4,x:mr(g[0],p[0])},{i:e-2,x:mr(g[1],p[1])})):(1!=p[0]||1!=p[1])&&r.push(r.pop()+"scale("+p+")"),e=o.length,function(n){for(var t,i=-1;++i<e;)r[(t=o[i]).i]=t.x(n);return r.join("")}}function Or(n,t){return t=(t-=n=+n)||1/t,function(e){return(e-n)/t}}function Hr(n,t){return t=(t-=n=+n)||1/t,function(e){return Math.max(0,Math.min(1,(e-n)/t))}}function Yr(n){for(var t=n.source,e=n.target,r=Zr(t,e),o=[t];t!==r;)t=t.parent,o.push(t);for(var i=o.length;e!==r;)o.splice(i,0,e),e=e.parent;return o}function Br(n){for(var t=[],e=n.parent;null!=e;)t.push(n),n=e,e=e.parent;return t.push(n),t}function Zr(n,t){if(n===t)return n;for(var e=Br(n),r=Br(t),o=e.pop(),i=r.pop(),a=null;o===i;)a=o,o=e.pop(),i=r.pop();return a}function Vr(n){n.fixed|=2}function Xr(n){n.fixed&=-7}function Wr(n){n.fixed|=4,n.px=n.x,n.py=n.y}function Gr(n){n.fixed&=-5}function Jr(n,t,e){var r=0,o=0;if(n.charge=0,!n.leaf)for(var i,a=n.nodes,u=a.length,l=-1;++l<u;)i=a[l],null!=i&&(Jr(i,t,e),n.charge+=i.charge,r+=i.charge*i.cx,o+=i.charge*i.cy);if(n.point){n.leaf||(n.point.x+=Math.random()-.5,n.point.y+=Math.random()-.5);var c=t*e[n.point.index];n.charge+=n.pointCharge=c,r+=c*n.point.x,o+=c*n.point.y}n.cx=r/n.charge,n.cy=o/n.charge}function Kr(n,t){return ea.rebind(n,t,"sort","children","value"),n.nodes=n,n.links=oo,n}function Qr(n,t){for(var e=[n];null!=(n=e.pop());)if(t(n),(o=n.children)&&(r=o.length))for(var r,o;--r>=0;)e.push(o[r])}function no(n,t){for(var e=[n],r=[];null!=(n=e.pop());)if(r.push(n),(i=n.children)&&(o=i.length))for(var o,i,a=-1;++a<o;)e.push(i[a]);for(;null!=(n=r.pop());)t(n)}function to(n){return n.children}function eo(n){return n.value}function ro(n,t){return t.value-n.value}function oo(n){return ea.merge(n.map(function(n){return(n.children||[]).map(function(t){return{source:n,target:t}})}))}function io(n){return n.x}function ao(n){return n.y}function uo(n,t,e){n.y0=t,n.y=e}function lo(n){return ea.range(n.length)}function co(n){for(var t=-1,e=n[0].length,r=[];++t<e;)r[t]=0;return r}function so(n){for(var t,e=1,r=0,o=n[0][1],i=n.length;i>e;++e)(t=n[e][1])>o&&(r=e,o=t);return r}function fo(n){return n.reduce(ho,0)}function ho(n,t){return n+t[1]}function go(n,t){return po(n,Math.ceil(Math.log(t.length)/Math.LN2+1))}function po(n,t){for(var e=-1,r=+n[0],o=(n[1]-r)/t,i=[];++e<=t;)i[e]=o*e+r;return i}function mo(n){return[ea.min(n),ea.max(n)]}function vo(n,t){return n.value-t.value}function yo(n,t){var e=n._pack_next;n._pack_next=t,t._pack_prev=n,t._pack_next=e,e._pack_prev=t}function Mo(n,t){n._pack_next=t,t._pack_prev=n}function xo(n,t){var e=t.x-n.x,r=t.y-n.y,o=n.r+t.r;return.999*o*o>e*e+r*r}function wo(n){function t(n){s=Math.min(n.x-n.r,s),f=Math.max(n.x+n.r,f),h=Math.min(n.y-n.r,h),g=Math.max(n.y+n.r,g)}if((e=n.children)&&(c=e.length)){var e,r,o,i,a,u,l,c,s=1/0,f=-(1/0),h=1/0,g=-(1/0);if(e.forEach(bo),r=e[0],r.x=-r.r,r.y=0,t(r),c>1&&(o=e[1],o.x=o.r,o.y=0,t(o),c>2))for(i=e[2],Co(r,o,i),t(i),yo(r,i),r._pack_prev=i,yo(i,o),o=r._pack_next,a=3;c>a;a++){Co(r,o,i=e[a]);var p=0,d=1,m=1;for(u=o._pack_next;u!==o;u=u._pack_next,d++)if(xo(u,i)){p=1;break}if(1==p)for(l=r._pack_prev;l!==u._pack_prev&&!xo(l,i);l=l._pack_prev,m++);p?(m>d||d==m&&o.r<r.r?Mo(r,o=u):Mo(r=l,o),a--):(yo(r,i),o=i,t(i))}var v=(s+f)/2,y=(h+g)/2,M=0;for(a=0;c>a;a++)i=e[a],i.x-=v,i.y-=y,M=Math.max(M,i.r+Math.sqrt(i.x*i.x+i.y*i.y));n.r=M,e.forEach(_o)}}function bo(n){n._pack_next=n._pack_prev=n}function _o(n){delete n._pack_next,delete n._pack_prev}function ko(n,t,e,r){var o=n.children;if(n.x=t+=r*n.x,n.y=e+=r*n.y,n.r*=r,o)for(var i=-1,a=o.length;++i<a;)ko(o[i],t,e,r)}function Co(n,t,e){var r=n.r+e.r,o=t.x-n.x,i=t.y-n.y;if(r&&(o||i)){var a=t.r+e.r,u=o*o+i*i;a*=a,r*=r;var l=.5+(r-a)/(2*u),c=Math.sqrt(Math.max(0,2*a*(r+u)-(r-=u)*r-a*a))/(2*u);e.x=n.x+l*o+c*i,e.y=n.y+l*i-c*o}else e.x=n.x+r,e.y=n.y}function So(n,t){return n.parent==t.parent?1:2}function Ao(n){var t=n.children;return t.length?t[0]:n.t}function Eo(n){var t,e=n.children;return(t=e.length)?e[t-1]:n.t}function qo(n,t,e){var r=e/(t.i-n.i);t.c-=r,t.s+=e,n.c+=r,t.z+=e,t.m+=e}function No(n){for(var t,e=0,r=0,o=n.children,i=o.length;--i>=0;)t=o[i],t.z+=e,t.m+=e,e+=t.s+(r+=t.c)}function Lo(n,t,e){return n.a.parent===t.parent?n.a:e}function Do(n){return 1+ea.max(n,function(n){return n.y})}function Po(n){return n.reduce(function(n,t){return n+t.x},0)/n.length}function To(n){var t=n.children;return t&&t.length?To(t[0]):n}function zo(n){var t,e=n.children;return e&&(t=e.length)?zo(e[t-1]):n}function Ro(n){return{x:n.x,y:n.y,dx:n.dx,dy:n.dy}}function $o(n,t){var e=n.x+t[3],r=n.y+t[0],o=n.dx-t[1]-t[3],i=n.dy-t[0]-t[2];return 0>o&&(e+=o/2,o=0),0>i&&(r+=i/2,i=0),{x:e,y:r,dx:o,dy:i}}function Uo(n){var t=n[0],e=n[n.length-1];return e>t?[t,e]:[e,t]}function jo(n){return n.rangeExtent?n.rangeExtent():Uo(n.range())}function Io(n,t,e,r){var o=e(n[0],n[1]),i=r(t[0],t[1]);return function(n){return i(o(n))}}function Fo(n,t){var e,r=0,o=n.length-1,i=n[r],a=n[o];return i>a&&(e=r,r=o,o=e,e=i,i=a,a=e),n[r]=t.floor(i),n[o]=t.ceil(a),n}function Oo(n){return n?{floor:function(t){return Math.floor(t/n)*n},ceil:function(t){return Math.ceil(t/n)*n}}:yl}function Ho(n,t,e,r){var o=[],i=[],a=0,u=Math.min(n.length,t.length)-1;for(n[u]<n[0]&&(n=n.slice().reverse(),t=t.slice().reverse());++a<=u;)o.push(e(n[a-1],n[a])),i.push(r(t[a-1],t[a]));return function(t){var e=ea.bisect(n,t,1,u)-1;return i[e](o[e](t))}}function Yo(n,t,e,r){function o(){var o=Math.min(n.length,t.length)>2?Ho:Io,l=r?Hr:Or;return a=o(n,t,l,e),u=o(t,n,l,yr),i}function i(n){return a(n)}var a,u;return i.invert=function(n){return u(n)},i.domain=function(t){return arguments.length?(n=t.map(Number),o()):n},i.range=function(n){return arguments.length?(t=n,o()):t},i.rangeRound=function(n){return i.range(n).interpolate(Rr)},i.clamp=function(n){return arguments.length?(r=n,o()):r},i.interpolate=function(n){return arguments.length?(e=n,o()):e},i.ticks=function(t){return Xo(n,t)},i.tickFormat=function(t,e){return Wo(n,t,e)},i.nice=function(t){return Zo(n,t),o()},i.copy=function(){return Yo(n,t,e,r)},o()}function Bo(n,t){return ea.rebind(n,t,"range","rangeRound","interpolate","clamp")}function Zo(n,t){return Fo(n,Oo(Vo(n,t)[2]))}function Vo(n,t){null==t&&(t=10);var e=Uo(n),r=e[1]-e[0],o=Math.pow(10,Math.floor(Math.log(r/t)/Math.LN10)),i=t/r*o;return.15>=i?o*=10:.35>=i?o*=5:.75>=i&&(o*=2),e[0]=Math.ceil(e[0]/o)*o,e[1]=Math.floor(e[1]/o)*o+.5*o,e[2]=o,e}function Xo(n,t){return ea.range.apply(ea,Vo(n,t))}function Wo(n,t,e){var r=Vo(n,t);if(e){var o=au.exec(e);if(o.shift(),"s"===o[8]){var i=ea.formatPrefix(Math.max(pa(r[0]),pa(r[1])));return o[7]||(o[7]="."+Go(i.scale(r[2]))),o[8]="f",e=ea.format(o.join("")),function(n){return e(i.scale(n))+i.symbol}}o[7]||(o[7]="."+Jo(o[8],r)),e=o.join("")}else e=",."+Go(r[2])+"f";return ea.format(e)}function Go(n){return-Math.floor(Math.log(n)/Math.LN10+.01)}function Jo(n,t){var e=Go(t[2]);return n in Ml?Math.abs(e-Go(Math.max(pa(t[0]),pa(t[1]))))+ +("e"!==n):e-2*("%"===n)}function Ko(n,t,e,r){function o(n){return(e?Math.log(0>n?0:n):-Math.log(n>0?0:-n))/Math.log(t)}function i(n){return e?Math.pow(t,n):-Math.pow(t,-n)}function a(t){return n(o(t))}return a.invert=function(t){return i(n.invert(t))},a.domain=function(t){return arguments.length?(e=t[0]>=0,n.domain((r=t.map(Number)).map(o)),a):r},a.base=function(e){return arguments.length?(t=+e,n.domain(r.map(o)),a):t},a.nice=function(){var t=Fo(r.map(o),e?Math:wl);return n.domain(t),r=t.map(i),a},a.ticks=function(){var n=Uo(r),a=[],u=n[0],l=n[1],c=Math.floor(o(u)),s=Math.ceil(o(l)),f=t%1?2:t;if(isFinite(s-c)){if(e){for(;s>c;c++)for(var h=1;f>h;h++)a.push(i(c)*h);a.push(i(c))}else for(a.push(i(c));c++<s;)for(var h=f-1;h>0;h--)a.push(i(c)*h);for(c=0;a[c]<u;c++);for(s=a.length;a[s-1]>l;s--);a=a.slice(c,s)}return a},a.tickFormat=function(n,t){if(!arguments.length)return xl;arguments.length<2?t=xl:"function"!=typeof t&&(t=ea.format(t));var r,u=Math.max(.1,n/a.ticks().length),l=e?(r=1e-12,Math.ceil):(r=-1e-12,Math.floor);return function(n){return n/i(l(o(n)+r))<=u?t(n):""}},a.copy=function(){return Ko(n.copy(),t,e,r)},Bo(a,n)}function Qo(n,t,e){function r(t){return n(o(t))}var o=ni(t),i=ni(1/t);return r.invert=function(t){return i(n.invert(t))},r.domain=function(t){return arguments.length?(n.domain((e=t.map(Number)).map(o)),r):e},r.ticks=function(n){return Xo(e,n)},r.tickFormat=function(n,t){return Wo(e,n,t)},r.nice=function(n){return r.domain(Zo(e,n))},r.exponent=function(a){return arguments.length?(o=ni(t=a),i=ni(1/t),n.domain(e.map(o)),r):t},r.copy=function(){return Qo(n.copy(),t,e)},Bo(r,n)}function ni(n){return function(t){return 0>t?-Math.pow(-t,n):Math.pow(t,n)}}function ti(n,t){function e(e){return i[((o.get(e)||("range"===t.t?o.set(e,n.push(e)):0/0))-1)%i.length]}function r(t,e){return ea.range(n.length).map(function(n){return t+e*n})}var o,i,a;return e.domain=function(r){if(!arguments.length)return n;n=[],o=new c;for(var i,a=-1,u=r.length;++a<u;)o.has(i=r[a])||o.set(i,n.push(i));return e[t.t].apply(e,t.a)},e.range=function(n){return arguments.length?(i=n,a=0,t={t:"range",a:arguments},e):i},e.rangePoints=function(o,u){arguments.length<2&&(u=0);var l=o[0],c=o[1],s=n.length<2?(l=(l+c)/2,0):(c-l)/(n.length-1+u);return i=r(l+s*u/2,s),a=0,t={t:"rangePoints",a:arguments},e},e.rangeRoundPoints=function(o,u){arguments.length<2&&(u=0);var l=o[0],c=o[1],s=n.length<2?(l=c=Math.round((l+c)/2),0):(c-l)/(n.length-1+u)|0;return i=r(l+Math.round(s*u/2+(c-l-(n.length-1+u)*s)/2),s),a=0,t={t:"rangeRoundPoints",a:arguments},e},e.rangeBands=function(o,u,l){arguments.length<2&&(u=0),arguments.length<3&&(l=u);var c=o[1]<o[0],s=o[c-0],f=o[1-c],h=(f-s)/(n.length-u+2*l);return i=r(s+h*l,h),c&&i.reverse(),a=h*(1-u),t={t:"rangeBands",a:arguments},e},e.rangeRoundBands=function(o,u,l){arguments.length<2&&(u=0),arguments.length<3&&(l=u);var c=o[1]<o[0],s=o[c-0],f=o[1-c],h=Math.floor((f-s)/(n.length-u+2*l));return i=r(s+Math.round((f-s-(n.length-u)*h)/2),h),c&&i.reverse(),a=Math.round(h*(1-u)),t={t:"rangeRoundBands",a:arguments},e},e.rangeBand=function(){return a},e.rangeExtent=function(){return Uo(t.a[0])},e.copy=function(){return ti(n,t)},e.domain(n)}function ei(n,t){function i(){var e=0,r=t.length;for(u=[];++e<r;)u[e-1]=ea.quantile(n,e/r);return a}function a(n){return isNaN(n=+n)?void 0:t[ea.bisect(u,n)]}var u;return a.domain=function(t){return arguments.length?(n=t.map(r).filter(o).sort(e),i()):n},a.range=function(n){return arguments.length?(t=n,i()):t},a.quantiles=function(){return u},a.invertExtent=function(e){return e=t.indexOf(e),0>e?[0/0,0/0]:[e>0?u[e-1]:n[0],e<u.length?u[e]:n[n.length-1]]},a.copy=function(){return ei(n,t)},i()}function ri(n,t,e){function r(t){return e[Math.max(0,Math.min(a,Math.floor(i*(t-n))))]}function o(){return i=e.length/(t-n),a=e.length-1,r}var i,a;return r.domain=function(e){return arguments.length?(n=+e[0],t=+e[e.length-1],o()):[n,t]},r.range=function(n){return arguments.length?(e=n,o()):e},r.invertExtent=function(t){return t=e.indexOf(t),t=0>t?0/0:t/i+n,[t,t+1/i]},r.copy=function(){return ri(n,t,e)},o()}function oi(n,t){function e(e){return e>=e?t[ea.bisect(n,e)]:void 0}return e.domain=function(t){return arguments.length?(n=t,e):n},e.range=function(n){return arguments.length?(t=n,e):t},e.invertExtent=function(e){return e=t.indexOf(e),[n[e-1],n[e]]},e.copy=function(){return oi(n,t)},e}function ii(n){function t(n){return+n}return t.invert=t,t.domain=t.range=function(e){return arguments.length?(n=e.map(t),t):n},t.ticks=function(t){return Xo(n,t)},t.tickFormat=function(t,e){return Wo(n,t,e)},t.copy=function(){return ii(n)},t}function ai(){return 0}function ui(n){return n.innerRadius}function li(n){return n.outerRadius}function ci(n){return n.startAngle}function si(n){return n.endAngle}function fi(n){return n&&n.padAngle}function hi(n,t,e,r){return(n-e)*t-(t-r)*n>0?0:1}function gi(n,t,e,r,o){var i=n[0]-t[0],a=n[1]-t[1],u=(o?r:-r)/Math.sqrt(i*i+a*a),l=u*a,c=-u*i,s=n[0]+l,f=n[1]+c,h=t[0]+l,g=t[1]+c,p=(s+h)/2,d=(f+g)/2,m=h-s,v=g-f,y=m*m+v*v,M=e-r,x=s*g-h*f,w=(0>v?-1:1)*Math.sqrt(M*M*y-x*x),b=(x*v-m*w)/y,_=(-x*m-v*w)/y,k=(x*v+m*w)/y,C=(-x*m+v*w)/y,S=b-p,A=_-d,E=k-p,q=C-d;return S*S+A*A>E*E+q*q&&(b=k,_=C),[[b-l,_-c],[b*e/M,_*e/M]]}function pi(n){function t(t){function a(){c.push("M",i(n(s),u))}for(var l,c=[],s=[],f=-1,h=t.length,g=An(e),p=An(r);++f<h;)o.call(this,l=t[f],f)?s.push([+g.call(this,l,f),+p.call(this,l,f)]):s.length&&(a(),s=[]);return s.length&&a(),c.length?c.join(""):null}var e=Ee,r=qe,o=qt,i=di,a=i.key,u=.7;return t.x=function(n){return arguments.length?(e=n,t):e},t.y=function(n){return arguments.length?(r=n,t):r},t.defined=function(n){return arguments.length?(o=n,t):o},t.interpolate=function(n){return arguments.length?(a="function"==typeof n?i=n:(i=Al.get(n)||di).key,t):a},t.tension=function(n){return arguments.length?(u=n,t):u},t}function di(n){return n.join("L")}function mi(n){return di(n)+"Z"}function vi(n){for(var t=0,e=n.length,r=n[0],o=[r[0],",",r[1]];++t<e;)o.push("H",(r[0]+(r=n[t])[0])/2,"V",r[1]);return e>1&&o.push("H",r[0]),o.join("")}function yi(n){for(var t=0,e=n.length,r=n[0],o=[r[0],",",r[1]];++t<e;)o.push("V",(r=n[t])[1],"H",r[0]);return o.join("")}function Mi(n){for(var t=0,e=n.length,r=n[0],o=[r[0],",",r[1]];++t<e;)o.push("H",(r=n[t])[0],"V",r[1]);return o.join("")}function xi(n,t){return n.length<4?di(n):n[1]+_i(n.slice(1,-1),ki(n,t))}function wi(n,t){return n.length<3?di(n):n[0]+_i((n.push(n[0]),n),ki([n[n.length-2]].concat(n,[n[1]]),t))}function bi(n,t){return n.length<3?di(n):n[0]+_i(n,ki(n,t))}function _i(n,t){if(t.length<1||n.length!=t.length&&n.length!=t.length+2)return di(n);var e=n.length!=t.length,r="",o=n[0],i=n[1],a=t[0],u=a,l=1;if(e&&(r+="Q"+(i[0]-2*a[0]/3)+","+(i[1]-2*a[1]/3)+","+i[0]+","+i[1],o=n[1],l=2),t.length>1){u=t[1],i=n[l],l++,r+="C"+(o[0]+a[0])+","+(o[1]+a[1])+","+(i[0]-u[0])+","+(i[1]-u[1])+","+i[0]+","+i[1];

for(var c=2;c<t.length;c++,l++)i=n[l],u=t[c],r+="S"+(i[0]-u[0])+","+(i[1]-u[1])+","+i[0]+","+i[1]}if(e){var s=n[l];r+="Q"+(i[0]+2*u[0]/3)+","+(i[1]+2*u[1]/3)+","+s[0]+","+s[1]}return r}function ki(n,t){for(var e,r=[],o=(1-t)/2,i=n[0],a=n[1],u=1,l=n.length;++u<l;)e=i,i=a,a=n[u],r.push([o*(a[0]-e[0]),o*(a[1]-e[1])]);return r}function Ci(n){if(n.length<3)return di(n);var t=1,e=n.length,r=n[0],o=r[0],i=r[1],a=[o,o,o,(r=n[1])[0]],u=[i,i,i,r[1]],l=[o,",",i,"L",qi(Nl,a),",",qi(Nl,u)];for(n.push(n[e-1]);++t<=e;)r=n[t],a.shift(),a.push(r[0]),u.shift(),u.push(r[1]),Ni(l,a,u);return n.pop(),l.push("L",r),l.join("")}function Si(n){if(n.length<4)return di(n);for(var t,e=[],r=-1,o=n.length,i=[0],a=[0];++r<3;)t=n[r],i.push(t[0]),a.push(t[1]);for(e.push(qi(Nl,i)+","+qi(Nl,a)),--r;++r<o;)t=n[r],i.shift(),i.push(t[0]),a.shift(),a.push(t[1]),Ni(e,i,a);return e.join("")}function Ai(n){for(var t,e,r=-1,o=n.length,i=o+4,a=[],u=[];++r<4;)e=n[r%o],a.push(e[0]),u.push(e[1]);for(t=[qi(Nl,a),",",qi(Nl,u)],--r;++r<i;)e=n[r%o],a.shift(),a.push(e[0]),u.shift(),u.push(e[1]),Ni(t,a,u);return t.join("")}function Ei(n,t){var e=n.length-1;if(e)for(var r,o,i=n[0][0],a=n[0][1],u=n[e][0]-i,l=n[e][1]-a,c=-1;++c<=e;)r=n[c],o=c/e,r[0]=t*r[0]+(1-t)*(i+o*u),r[1]=t*r[1]+(1-t)*(a+o*l);return Ci(n)}function qi(n,t){return n[0]*t[0]+n[1]*t[1]+n[2]*t[2]+n[3]*t[3]}function Ni(n,t,e){n.push("C",qi(El,t),",",qi(El,e),",",qi(ql,t),",",qi(ql,e),",",qi(Nl,t),",",qi(Nl,e))}function Li(n,t){return(t[1]-n[1])/(t[0]-n[0])}function Di(n){for(var t=0,e=n.length-1,r=[],o=n[0],i=n[1],a=r[0]=Li(o,i);++t<e;)r[t]=(a+(a=Li(o=i,i=n[t+1])))/2;return r[t]=a,r}function Pi(n){for(var t,e,r,o,i=[],a=Di(n),u=-1,l=n.length-1;++u<l;)t=Li(n[u],n[u+1]),pa(t)<Na?a[u]=a[u+1]=0:(e=a[u]/t,r=a[u+1]/t,o=e*e+r*r,o>9&&(o=3*t/Math.sqrt(o),a[u]=o*e,a[u+1]=o*r));for(u=-1;++u<=l;)o=(n[Math.min(l,u+1)][0]-n[Math.max(0,u-1)][0])/(6*(1+a[u]*a[u])),i.push([o||0,a[u]*o||0]);return i}function Ti(n){return n.length<3?di(n):n[0]+_i(n,Pi(n))}function zi(n){for(var t,e,r,o=-1,i=n.length;++o<i;)t=n[o],e=t[0],r=t[1]-za,t[0]=e*Math.cos(r),t[1]=e*Math.sin(r);return n}function Ri(n){function t(t){function l(){d.push("M",u(n(v),f),s,c(n(m.reverse()),f),"Z")}for(var h,g,p,d=[],m=[],v=[],y=-1,M=t.length,x=An(e),w=An(o),b=e===r?function(){return g}:An(r),_=o===i?function(){return p}:An(i);++y<M;)a.call(this,h=t[y],y)?(m.push([g=+x.call(this,h,y),p=+w.call(this,h,y)]),v.push([+b.call(this,h,y),+_.call(this,h,y)])):m.length&&(l(),m=[],v=[]);return m.length&&l(),d.length?d.join(""):null}var e=Ee,r=Ee,o=0,i=qe,a=qt,u=di,l=u.key,c=u,s="L",f=.7;return t.x=function(n){return arguments.length?(e=r=n,t):r},t.x0=function(n){return arguments.length?(e=n,t):e},t.x1=function(n){return arguments.length?(r=n,t):r},t.y=function(n){return arguments.length?(o=i=n,t):i},t.y0=function(n){return arguments.length?(o=n,t):o},t.y1=function(n){return arguments.length?(i=n,t):i},t.defined=function(n){return arguments.length?(a=n,t):a},t.interpolate=function(n){return arguments.length?(l="function"==typeof n?u=n:(u=Al.get(n)||di).key,c=u.reverse||u,s=u.closed?"M":"L",t):l},t.tension=function(n){return arguments.length?(f=n,t):f},t}function $i(n){return n.radius}function Ui(n){return[n.x,n.y]}function ji(n){return function(){var t=n.apply(this,arguments),e=t[0],r=t[1]-za;return[e*Math.cos(r),e*Math.sin(r)]}}function Ii(){return 64}function Fi(){return"circle"}function Oi(n){var t=Math.sqrt(n/Da);return"M0,"+t+"A"+t+","+t+" 0 1,1 0,"+-t+"A"+t+","+t+" 0 1,1 0,"+t+"Z"}function Hi(n){return function(){var t,e;(t=this[n])&&(e=t[t.active])&&(--t.count?delete t[t.active]:delete this[n],t.active+=.5,e.event&&e.event.interrupt.call(this,this.__data__,e.index))}}function Yi(n,t,e){return Ma(n,$l),n.namespace=t,n.id=e,n}function Bi(n,t,e,r){var o=n.id,i=n.namespace;return H(n,"function"==typeof e?function(n,a,u){n[i][o].tween.set(t,r(e.call(n,n.__data__,a,u)))}:(e=r(e),function(n){n[i][o].tween.set(t,e)}))}function Zi(n){return null==n&&(n=""),function(){this.textContent=n}}function Vi(n){return null==n?"__transition__":"__transition_"+n+"__"}function Xi(n,t,e,r,o){var i=n[e]||(n[e]={active:0,count:0}),a=i[r];if(!a){var u=o.time;a=i[r]={tween:new c,time:u,delay:o.delay,duration:o.duration,ease:o.ease,index:t},o=null,++i.count,ea.timer(function(o){function l(e){if(i.active>r)return s();var o=i[i.active];o&&(--i.count,delete i[i.active],o.event&&o.event.interrupt.call(n,n.__data__,o.index)),i.active=r,a.event&&a.event.start.call(n,n.__data__,t),a.tween.forEach(function(e,r){(r=r.call(n,n.__data__,t))&&d.push(r)}),h=a.ease,f=a.duration,ea.timer(function(){return p.c=c(e||1)?qt:c,1},0,u)}function c(e){if(i.active!==r)return 1;for(var o=e/f,u=h(o),l=d.length;l>0;)d[--l].call(n,u);return o>=1?(a.event&&a.event.end.call(n,n.__data__,t),s()):void 0}function s(){return--i.count?delete i[r]:delete n[e],1}var f,h,g=a.delay,p=ru,d=[];return p.t=g+u,o>=g?l(o-g):void(p.c=l)},0,u)}}function Wi(n,t,e){n.attr("transform",function(n){var r=t(n);return"translate("+(isFinite(r)?r:e(n))+",0)"})}function Gi(n,t,e){n.attr("transform",function(n){var r=t(n);return"translate(0,"+(isFinite(r)?r:e(n))+")"})}function Ji(n){return n.toISOString()}function Ki(n,t,e){function r(t){return n(t)}function o(n,e){var r=n[1]-n[0],o=r/e,i=ea.bisect(Zl,o);return i==Zl.length?[t.year,Vo(n.map(function(n){return n/31536e6}),e)[2]]:i?t[o/Zl[i-1]<Zl[i]/o?i-1:i]:[Wl,Vo(n,e)[2]]}return r.invert=function(t){return Qi(n.invert(t))},r.domain=function(t){return arguments.length?(n.domain(t),r):n.domain().map(Qi)},r.nice=function(n,t){function e(e){return!isNaN(e)&&!n.range(e,Qi(+e+1),t).length}var i=r.domain(),a=Uo(i),u=null==n?o(a,10):"number"==typeof n&&o(a,n);return u&&(n=u[0],t=u[1]),r.domain(Fo(i,t>1?{floor:function(t){for(;e(t=n.floor(t));)t=Qi(t-1);return t},ceil:function(t){for(;e(t=n.ceil(t));)t=Qi(+t+1);return t}}:n))},r.ticks=function(n,t){var e=Uo(r.domain()),i=null==n?o(e,10):"number"==typeof n?o(e,n):!n.range&&[{range:n},t];return i&&(n=i[0],t=i[1]),n.range(e[0],Qi(+e[1]+1),1>t?1:t)},r.tickFormat=function(){return e},r.copy=function(){return Ki(n.copy(),t,e)},Bo(r,n)}function Qi(n){return new Date(n)}function na(n){return JSON.parse(n.responseText)}function ta(n){var t=ia.createRange();return t.selectNode(ia.body),t.createContextualFragment(n.responseText)}var ea={version:"3.5.5"},ra=[].slice,oa=function(n){return ra.call(n)},ia=this.document;if(ia)try{oa(ia.documentElement.childNodes)[0].nodeType}catch(aa){oa=function(n){for(var t=n.length,e=new Array(t);t--;)e[t]=n[t];return e}}if(Date.now||(Date.now=function(){return+new Date}),ia)try{ia.createElement("DIV").style.setProperty("opacity",0,"")}catch(ua){var la=this.Element.prototype,ca=la.setAttribute,sa=la.setAttributeNS,fa=this.CSSStyleDeclaration.prototype,ha=fa.setProperty;la.setAttribute=function(n,t){ca.call(this,n,t+"")},la.setAttributeNS=function(n,t,e){sa.call(this,n,t,e+"")},fa.setProperty=function(n,t,e){ha.call(this,n,t+"",e)}}ea.ascending=e,ea.descending=function(n,t){return n>t?-1:t>n?1:t>=n?0:0/0},ea.min=function(n,t){var e,r,o=-1,i=n.length;if(1===arguments.length){for(;++o<i;)if(null!=(r=n[o])&&r>=r){e=r;break}for(;++o<i;)null!=(r=n[o])&&e>r&&(e=r)}else{for(;++o<i;)if(null!=(r=t.call(n,n[o],o))&&r>=r){e=r;break}for(;++o<i;)null!=(r=t.call(n,n[o],o))&&e>r&&(e=r)}return e},ea.max=function(n,t){var e,r,o=-1,i=n.length;if(1===arguments.length){for(;++o<i;)if(null!=(r=n[o])&&r>=r){e=r;break}for(;++o<i;)null!=(r=n[o])&&r>e&&(e=r)}else{for(;++o<i;)if(null!=(r=t.call(n,n[o],o))&&r>=r){e=r;break}for(;++o<i;)null!=(r=t.call(n,n[o],o))&&r>e&&(e=r)}return e},ea.extent=function(n,t){var e,r,o,i=-1,a=n.length;if(1===arguments.length){for(;++i<a;)if(null!=(r=n[i])&&r>=r){e=o=r;break}for(;++i<a;)null!=(r=n[i])&&(e>r&&(e=r),r>o&&(o=r))}else{for(;++i<a;)if(null!=(r=t.call(n,n[i],i))&&r>=r){e=o=r;break}for(;++i<a;)null!=(r=t.call(n,n[i],i))&&(e>r&&(e=r),r>o&&(o=r))}return[e,o]},ea.sum=function(n,t){var e,r=0,i=n.length,a=-1;if(1===arguments.length)for(;++a<i;)o(e=+n[a])&&(r+=e);else for(;++a<i;)o(e=+t.call(n,n[a],a))&&(r+=e);return r},ea.mean=function(n,t){var e,i=0,a=n.length,u=-1,l=a;if(1===arguments.length)for(;++u<a;)o(e=r(n[u]))?i+=e:--l;else for(;++u<a;)o(e=r(t.call(n,n[u],u)))?i+=e:--l;return l?i/l:void 0},ea.quantile=function(n,t){var e=(n.length-1)*t+1,r=Math.floor(e),o=+n[r-1],i=e-r;return i?o+i*(n[r]-o):o},ea.median=function(n,t){var i,a=[],u=n.length,l=-1;if(1===arguments.length)for(;++l<u;)o(i=r(n[l]))&&a.push(i);else for(;++l<u;)o(i=r(t.call(n,n[l],l)))&&a.push(i);return a.length?ea.quantile(a.sort(e),.5):void 0},ea.variance=function(n,t){var e,i,a=n.length,u=0,l=0,c=-1,s=0;if(1===arguments.length)for(;++c<a;)o(e=r(n[c]))&&(i=e-u,u+=i/++s,l+=i*(e-u));else for(;++c<a;)o(e=r(t.call(n,n[c],c)))&&(i=e-u,u+=i/++s,l+=i*(e-u));return s>1?l/(s-1):void 0},ea.deviation=function(){var n=ea.variance.apply(this,arguments);return n?Math.sqrt(n):n};var ga=i(e);ea.bisectLeft=ga.left,ea.bisect=ea.bisectRight=ga.right,ea.bisector=function(n){return i(1===n.length?function(t,r){return e(n(t),r)}:n)},ea.shuffle=function(n,t,e){(i=arguments.length)<3&&(e=n.length,2>i&&(t=0));for(var r,o,i=e-t;i;)o=Math.random()*i--|0,r=n[i+t],n[i+t]=n[o+t],n[o+t]=r;return n},ea.permute=function(n,t){for(var e=t.length,r=new Array(e);e--;)r[e]=n[t[e]];return r},ea.pairs=function(n){for(var t,e=0,r=n.length-1,o=n[0],i=new Array(0>r?0:r);r>e;)i[e]=[t=o,o=n[++e]];return i},ea.zip=function(){if(!(r=arguments.length))return[];for(var n=-1,t=ea.min(arguments,a),e=new Array(t);++n<t;)for(var r,o=-1,i=e[n]=new Array(r);++o<r;)i[o]=arguments[o][n];return e},ea.transpose=function(n){return ea.zip.apply(ea,n)},ea.keys=function(n){var t=[];for(var e in n)t.push(e);return t},ea.values=function(n){var t=[];for(var e in n)t.push(n[e]);return t},ea.entries=function(n){var t=[];for(var e in n)t.push({key:e,value:n[e]});return t},ea.merge=function(n){for(var t,e,r,o=n.length,i=-1,a=0;++i<o;)a+=n[i].length;for(e=new Array(a);--o>=0;)for(r=n[o],t=r.length;--t>=0;)e[--a]=r[t];return e};var pa=Math.abs;ea.range=function(n,t,e){if(arguments.length<3&&(e=1,arguments.length<2&&(t=n,n=0)),(t-n)/e===1/0)throw new Error("infinite range");var r,o=[],i=u(pa(e)),a=-1;if(n*=i,t*=i,e*=i,0>e)for(;(r=n+e*++a)>t;)o.push(r/i);else for(;(r=n+e*++a)<t;)o.push(r/i);return o},ea.map=function(n,t){var e=new c;if(n instanceof c)n.forEach(function(n,t){e.set(n,t)});else if(Array.isArray(n)){var r,o=-1,i=n.length;if(1===arguments.length)for(;++o<i;)e.set(o,n[o]);else for(;++o<i;)e.set(t.call(n,r=n[o],o),r)}else for(var a in n)e.set(a,n[a]);return e};var da="__proto__",ma="\x00";l(c,{has:h,get:function(n){return this._[s(n)]},set:function(n,t){return this._[s(n)]=t},remove:g,keys:p,values:function(){var n=[];for(var t in this._)n.push(this._[t]);return n},entries:function(){var n=[];for(var t in this._)n.push({key:f(t),value:this._[t]});return n},size:d,empty:m,forEach:function(n){for(var t in this._)n.call(this,f(t),this._[t])}}),ea.nest=function(){function n(t,a,u){if(u>=i.length)return r?r.call(o,a):e?a.sort(e):a;for(var l,s,f,h,g=-1,p=a.length,d=i[u++],m=new c;++g<p;)(h=m.get(l=d(s=a[g])))?h.push(s):m.set(l,[s]);return t?(s=t(),f=function(e,r){s.set(e,n(t,r,u))}):(s={},f=function(e,r){s[e]=n(t,r,u)}),m.forEach(f),s}function t(n,e){if(e>=i.length)return n;var r=[],o=a[e++];return n.forEach(function(n,o){r.push({key:n,values:t(o,e)})}),o?r.sort(function(n,t){return o(n.key,t.key)}):r}var e,r,o={},i=[],a=[];return o.map=function(t,e){return n(e,t,0)},o.entries=function(e){return t(n(ea.map,e,0),0)},o.key=function(n){return i.push(n),o},o.sortKeys=function(n){return a[i.length-1]=n,o},o.sortValues=function(n){return e=n,o},o.rollup=function(n){return r=n,o},o},ea.set=function(n){var t=new v;if(n)for(var e=0,r=n.length;r>e;++e)t.add(n[e]);return t},l(v,{has:h,add:function(n){return this._[s(n+="")]=!0,n},remove:g,values:p,size:d,empty:m,forEach:function(n){for(var t in this._)n.call(this,f(t))}}),ea.behavior={},ea.rebind=function(n,t){for(var e,r=1,o=arguments.length;++r<o;)n[e=arguments[r]]=M(n,t,t[e]);return n};var va=["webkit","ms","moz","Moz","o","O"];ea.dispatch=function(){for(var n=new b,t=-1,e=arguments.length;++t<e;)n[arguments[t]]=_(n);return n},b.prototype.on=function(n,t){var e=n.indexOf("."),r="";if(e>=0&&(r=n.slice(e+1),n=n.slice(0,e)),n)return arguments.length<2?this[n].on(r):this[n].on(r,t);if(2===arguments.length){if(null==t)for(n in this)this.hasOwnProperty(n)&&this[n].on(r,null);return this}},ea.event=null,ea.requote=function(n){return n.replace(ya,"\\$&")};var ya=/[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g,Ma={}.__proto__?function(n,t){n.__proto__=t}:function(n,t){for(var e in t)n[e]=t[e]},xa=function(n,t){return t.querySelector(n)},wa=function(n,t){return t.querySelectorAll(n)},ba=function(n,t){var e=n.matches||n[x(n,"matchesSelector")];return(ba=function(n,t){return e.call(n,t)})(n,t)};"function"==typeof Sizzle&&(xa=function(n,t){return Sizzle(n,t)[0]||null},wa=Sizzle,ba=Sizzle.matchesSelector),ea.selection=function(){return ea.select(ia.documentElement)};var _a=ea.selection.prototype=[];_a.select=function(n){var t,e,r,o,i=[];n=E(n);for(var a=-1,u=this.length;++a<u;){i.push(t=[]),t.parentNode=(r=this[a]).parentNode;for(var l=-1,c=r.length;++l<c;)(o=r[l])?(t.push(e=n.call(o,o.__data__,l,a)),e&&"__data__"in o&&(e.__data__=o.__data__)):t.push(null)}return A(i)},_a.selectAll=function(n){var t,e,r=[];n=q(n);for(var o=-1,i=this.length;++o<i;)for(var a=this[o],u=-1,l=a.length;++u<l;)(e=a[u])&&(r.push(t=oa(n.call(e,e.__data__,u,o))),t.parentNode=e);return A(r)};var ka={svg:"http://www.w3.org/2000/svg",xhtml:"http://www.w3.org/1999/xhtml",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};ea.ns={prefix:ka,qualify:function(n){var t=n.indexOf(":"),e=n;return t>=0&&(e=n.slice(0,t),n=n.slice(t+1)),ka.hasOwnProperty(e)?{space:ka[e],local:n}:n}},_a.attr=function(n,t){if(arguments.length<2){if("string"==typeof n){var e=this.node();return n=ea.ns.qualify(n),n.local?e.getAttributeNS(n.space,n.local):e.getAttribute(n)}for(t in n)this.each(N(t,n[t]));return this}return this.each(N(n,t))},_a.classed=function(n,t){if(arguments.length<2){if("string"==typeof n){var e=this.node(),r=(n=P(n)).length,o=-1;if(t=e.classList){for(;++o<r;)if(!t.contains(n[o]))return!1}else for(t=e.getAttribute("class");++o<r;)if(!D(n[o]).test(t))return!1;return!0}for(t in n)this.each(T(t,n[t]));return this}return this.each(T(n,t))},_a.style=function(n,e,r){var o=arguments.length;if(3>o){if("string"!=typeof n){2>o&&(e="");for(r in n)this.each(R(r,n[r],e));return this}if(2>o){var i=this.node();return t(i).getComputedStyle(i,null).getPropertyValue(n)}r=""}return this.each(R(n,e,r))},_a.property=function(n,t){if(arguments.length<2){if("string"==typeof n)return this.node()[n];for(t in n)this.each($(t,n[t]));return this}return this.each($(n,t))},_a.text=function(n){return arguments.length?this.each("function"==typeof n?function(){var t=n.apply(this,arguments);this.textContent=null==t?"":t}:null==n?function(){this.textContent=""}:function(){this.textContent=n}):this.node().textContent},_a.html=function(n){return arguments.length?this.each("function"==typeof n?function(){var t=n.apply(this,arguments);this.innerHTML=null==t?"":t}:null==n?function(){this.innerHTML=""}:function(){this.innerHTML=n}):this.node().innerHTML},_a.append=function(n){return n=U(n),this.select(function(){return this.appendChild(n.apply(this,arguments))})},_a.insert=function(n,t){return n=U(n),t=E(t),this.select(function(){return this.insertBefore(n.apply(this,arguments),t.apply(this,arguments)||null)})},_a.remove=function(){return this.each(j)},_a.data=function(n,t){function e(n,e){var r,o,i,a=n.length,f=e.length,h=Math.min(a,f),g=new Array(f),p=new Array(f),d=new Array(a);if(t){var m,v=new c,y=new Array(a);for(r=-1;++r<a;)v.has(m=t.call(o=n[r],o.__data__,r))?d[r]=o:v.set(m,o),y[r]=m;for(r=-1;++r<f;)(o=v.get(m=t.call(e,i=e[r],r)))?o!==!0&&(g[r]=o,o.__data__=i):p[r]=I(i),v.set(m,!0);for(r=-1;++r<a;)v.get(y[r])!==!0&&(d[r]=n[r])}else{for(r=-1;++r<h;)o=n[r],i=e[r],o?(o.__data__=i,g[r]=o):p[r]=I(i);for(;f>r;++r)p[r]=I(e[r]);for(;a>r;++r)d[r]=n[r]}p.update=g,p.parentNode=g.parentNode=d.parentNode=n.parentNode,u.push(p),l.push(g),s.push(d)}var r,o,i=-1,a=this.length;if(!arguments.length){for(n=new Array(a=(r=this[0]).length);++i<a;)(o=r[i])&&(n[i]=o.__data__);return n}var u=Y([]),l=A([]),s=A([]);if("function"==typeof n)for(;++i<a;)e(r=this[i],n.call(r,r.parentNode.__data__,i));else for(;++i<a;)e(r=this[i],n);return l.enter=function(){return u},l.exit=function(){return s},l},_a.datum=function(n){return arguments.length?this.property("__data__",n):this.property("__data__")},_a.filter=function(n){var t,e,r,o=[];"function"!=typeof n&&(n=F(n));for(var i=0,a=this.length;a>i;i++){o.push(t=[]),t.parentNode=(e=this[i]).parentNode;for(var u=0,l=e.length;l>u;u++)(r=e[u])&&n.call(r,r.__data__,u,i)&&t.push(r)}return A(o)},_a.order=function(){for(var n=-1,t=this.length;++n<t;)for(var e,r=this[n],o=r.length-1,i=r[o];--o>=0;)(e=r[o])&&(i&&i!==e.nextSibling&&i.parentNode.insertBefore(e,i),i=e);return this},_a.sort=function(n){n=O.apply(this,arguments);for(var t=-1,e=this.length;++t<e;)this[t].sort(n);return this.order()},_a.each=function(n){return H(this,function(t,e,r){n.call(t,t.__data__,e,r)})},_a.call=function(n){var t=oa(arguments);return n.apply(t[0]=this,t),this},_a.empty=function(){return!this.node()},_a.node=function(){for(var n=0,t=this.length;t>n;n++)for(var e=this[n],r=0,o=e.length;o>r;r++){var i=e[r];if(i)return i}return null},_a.size=function(){var n=0;return H(this,function(){++n}),n};var Ca=[];ea.selection.enter=Y,ea.selection.enter.prototype=Ca,Ca.append=_a.append,Ca.empty=_a.empty,Ca.node=_a.node,Ca.call=_a.call,Ca.size=_a.size,Ca.select=function(n){for(var t,e,r,o,i,a=[],u=-1,l=this.length;++u<l;){r=(o=this[u]).update,a.push(t=[]),t.parentNode=o.parentNode;for(var c=-1,s=o.length;++c<s;)(i=o[c])?(t.push(r[c]=e=n.call(o.parentNode,i.__data__,c,u)),e.__data__=i.__data__):t.push(null)}return A(a)},Ca.insert=function(n,t){return arguments.length<2&&(t=B(this)),_a.insert.call(this,n,t)},ea.select=function(t){var e;return"string"==typeof t?(e=[xa(t,ia)],e.parentNode=ia.documentElement):(e=[t],e.parentNode=n(t)),A([e])},ea.selectAll=function(n){var t;return"string"==typeof n?(t=oa(wa(n,ia)),t.parentNode=ia.documentElement):(t=n,t.parentNode=null),A([t])},_a.on=function(n,t,e){var r=arguments.length;if(3>r){if("string"!=typeof n){2>r&&(t=!1);for(e in n)this.each(Z(e,n[e],t));return this}if(2>r)return(r=this.node()["__on"+n])&&r._;e=!1}return this.each(Z(n,t,e))};var Sa=ea.map({mouseenter:"mouseover",mouseleave:"mouseout"});ia&&Sa.forEach(function(n){"on"+n in ia&&Sa.remove(n)});var Aa,Ea=0;ea.mouse=function(n){return G(n,C())};var qa=this.navigator&&/WebKit/.test(this.navigator.userAgent)?-1:0;ea.touch=function(n,t,e){if(arguments.length<3&&(e=t,t=C().changedTouches),t)for(var r,o=0,i=t.length;i>o;++o)if((r=t[o]).identifier===e)return G(n,r)},ea.behavior.drag=function(){function n(){this.on("mousedown.drag",i).on("touchstart.drag",a)}function e(n,t,e,i,a){return function(){function u(){var n,e,r=t(h,d);r&&(n=r[0]-M[0],e=r[1]-M[1],p|=n|e,M=r,g({type:"drag",x:r[0]+c[0],y:r[1]+c[1],dx:n,dy:e}))}function l(){t(h,d)&&(v.on(i+m,null).on(a+m,null),y(p&&ea.event.target===f),g({type:"dragend"}))}var c,s=this,f=ea.event.target,h=s.parentNode,g=r.of(s,arguments),p=0,d=n(),m=".drag"+(null==d?"":"-"+d),v=ea.select(e(f)).on(i+m,u).on(a+m,l),y=W(f),M=t(h,d);o?(c=o.apply(s,arguments),c=[c.x-M[0],c.y-M[1]]):c=[0,0],g({type:"dragstart"})}}var r=S(n,"drag","dragstart","dragend"),o=null,i=e(w,ea.mouse,t,"mousemove","mouseup"),a=e(J,ea.touch,y,"touchmove","touchend");return n.origin=function(t){return arguments.length?(o=t,n):o},ea.rebind(n,r,"on")},ea.touches=function(n,t){return arguments.length<2&&(t=C().touches),t?oa(t).map(function(t){var e=G(n,t);return e.identifier=t.identifier,e}):[]};var Na=1e-6,La=Na*Na,Da=Math.PI,Pa=2*Da,Ta=Pa-Na,za=Da/2,Ra=Da/180,$a=180/Da,Ua=Math.SQRT2,ja=2,Ia=4;ea.interpolateZoom=function(n,t){function e(n){var t=n*y;if(v){var e=rn(d),a=i/(ja*h)*(e*on(Ua*t+d)-en(d));return[r+a*c,o+a*s,i*e/rn(Ua*t+d)]}return[r+n*c,o+n*s,i*Math.exp(Ua*t)]}var r=n[0],o=n[1],i=n[2],a=t[0],u=t[1],l=t[2],c=a-r,s=u-o,f=c*c+s*s,h=Math.sqrt(f),g=(l*l-i*i+Ia*f)/(2*i*ja*h),p=(l*l-i*i-Ia*f)/(2*l*ja*h),d=Math.log(Math.sqrt(g*g+1)-g),m=Math.log(Math.sqrt(p*p+1)-p),v=m-d,y=(v||Math.log(l/i))/Ua;return e.duration=1e3*y,e},ea.behavior.zoom=function(){function n(n){n.on(L,f).on(Oa+".zoom",g).on("dblclick.zoom",p).on(T,h)}function e(n){return[(n[0]-C.x)/C.k,(n[1]-C.y)/C.k]}function r(n){return[n[0]*C.k+C.x,n[1]*C.k+C.y]}function o(n){C.k=Math.max(E[0],Math.min(E[1],n))}function i(n,t){t=r(t),C.x+=n[0]-t[0],C.y+=n[1]-t[1]}function a(t,e,r,a){t.__chart__={x:C.x,y:C.y,k:C.k},o(Math.pow(2,a)),i(m=e,r),t=ea.select(t),q>0&&(t=t.transition().duration(q)),t.call(n.event)}function u(){w&&w.domain(x.range().map(function(n){return(n-C.x)/C.k}).map(x.invert)),_&&_.domain(b.range().map(function(n){return(n-C.y)/C.k}).map(b.invert))}function l(n){N++||n({type:"zoomstart"})}function c(n){u(),n({type:"zoom",scale:C.k,translate:[C.x,C.y]})}function s(n){--N||n({type:"zoomend"}),m=null}function f(){function n(){f=1,i(ea.mouse(o),g),c(u)}function r(){h.on(D,null).on(P,null),p(f&&ea.event.target===a),s(u)}var o=this,a=ea.event.target,u=z.of(o,arguments),f=0,h=ea.select(t(o)).on(D,n).on(P,r),g=e(ea.mouse(o)),p=W(o);Rl.call(o),l(u)}function h(){function n(){var n=ea.touches(p);return g=C.k,n.forEach(function(n){n.identifier in m&&(m[n.identifier]=e(n))}),n}function t(){var t=ea.event.target;ea.select(t).on(x,r).on(w,u),b.push(t);for(var e=ea.event.changedTouches,o=0,i=e.length;i>o;++o)m[e[o].identifier]=null;var l=n(),c=Date.now();if(1===l.length){if(500>c-M){var s=l[0];a(p,s,m[s.identifier],Math.floor(Math.log(C.k)/Math.LN2)+1),k()}M=c}else if(l.length>1){var s=l[0],f=l[1],h=s[0]-f[0],g=s[1]-f[1];v=h*h+g*g}}function r(){var n,t,e,r,a=ea.touches(p);Rl.call(p);for(var u=0,l=a.length;l>u;++u,r=null)if(e=a[u],r=m[e.identifier]){if(t)break;n=e,t=r}if(r){var s=(s=e[0]-n[0])*s+(s=e[1]-n[1])*s,f=v&&Math.sqrt(s/v);n=[(n[0]+e[0])/2,(n[1]+e[1])/2],t=[(t[0]+r[0])/2,(t[1]+r[1])/2],o(f*g)}M=null,i(n,t),c(d)}function u(){if(ea.event.touches.length){for(var t=ea.event.changedTouches,e=0,r=t.length;r>e;++e)delete m[t[e].identifier];for(var o in m)return void n()}ea.selectAll(b).on(y,null),_.on(L,f).on(T,h),S(),s(d)}var g,p=this,d=z.of(p,arguments),m={},v=0,y=".zoom-"+ea.event.changedTouches[0].identifier,x="touchmove"+y,w="touchend"+y,b=[],_=ea.select(p),S=W(p);t(),l(d),_.on(L,null).on(T,t)}function g(){var n=z.of(this,arguments);y?clearTimeout(y):(d=e(m=v||ea.mouse(this)),Rl.call(this),l(n)),y=setTimeout(function(){y=null,s(n)},50),k(),o(Math.pow(2,.002*Fa())*C.k),i(m,d),c(n)}function p(){var n=ea.mouse(this),t=Math.log(C.k)/Math.LN2;a(this,n,e(n),ea.event.shiftKey?Math.ceil(t)-1:Math.floor(t)+1)}var d,m,v,y,M,x,w,b,_,C={x:0,y:0,k:1},A=[960,500],E=Ha,q=250,N=0,L="mousedown.zoom",D="mousemove.zoom",P="mouseup.zoom",T="touchstart.zoom",z=S(n,"zoomstart","zoom","zoomend");return Oa||(Oa="onwheel"in ia?(Fa=function(){return-ea.event.deltaY*(ea.event.deltaMode?120:1)},"wheel"):"onmousewheel"in ia?(Fa=function(){return ea.event.wheelDelta},"mousewheel"):(Fa=function(){return-ea.event.detail},"MozMousePixelScroll")),n.event=function(n){n.each(function(){var n=z.of(this,arguments),t=C;Tl?ea.select(this).transition().each("start.zoom",function(){C=this.__chart__||{x:0,y:0,k:1},l(n)}).tween("zoom:zoom",function(){var e=A[0],r=A[1],o=m?m[0]:e/2,i=m?m[1]:r/2,a=ea.interpolateZoom([(o-C.x)/C.k,(i-C.y)/C.k,e/C.k],[(o-t.x)/t.k,(i-t.y)/t.k,e/t.k]);return function(t){var r=a(t),u=e/r[2];this.__chart__=C={x:o-r[0]*u,y:i-r[1]*u,k:u},c(n)}}).each("interrupt.zoom",function(){s(n)}).each("end.zoom",function(){s(n)}):(this.__chart__=C,l(n),c(n),s(n))})},n.translate=function(t){return arguments.length?(C={x:+t[0],y:+t[1],k:C.k},u(),n):[C.x,C.y]},n.scale=function(t){return arguments.length?(C={x:C.x,y:C.y,k:+t},u(),n):C.k},n.scaleExtent=function(t){return arguments.length?(E=null==t?Ha:[+t[0],+t[1]],n):E},n.center=function(t){return arguments.length?(v=t&&[+t[0],+t[1]],n):v},n.size=function(t){return arguments.length?(A=t&&[+t[0],+t[1]],n):A},n.duration=function(t){return arguments.length?(q=+t,n):q},n.x=function(t){return arguments.length?(w=t,x=t.copy(),C={x:0,y:0,k:1},n):w},n.y=function(t){return arguments.length?(_=t,b=t.copy(),C={x:0,y:0,k:1},n):_},ea.rebind(n,z,"on")};var Fa,Oa,Ha=[0,1/0];ea.color=un,un.prototype.toString=function(){return this.rgb()+""},ea.hsl=ln;var Ya=ln.prototype=new un;Ya.brighter=function(n){return n=Math.pow(.7,arguments.length?n:1),new ln(this.h,this.s,this.l/n)},Ya.darker=function(n){return n=Math.pow(.7,arguments.length?n:1),new ln(this.h,this.s,n*this.l)},Ya.rgb=function(){return cn(this.h,this.s,this.l)},ea.hcl=sn;var Ba=sn.prototype=new un;Ba.brighter=function(n){return new sn(this.h,this.c,Math.min(100,this.l+Za*(arguments.length?n:1)))},Ba.darker=function(n){return new sn(this.h,this.c,Math.max(0,this.l-Za*(arguments.length?n:1)))},Ba.rgb=function(){return fn(this.h,this.c,this.l).rgb()},ea.lab=hn;var Za=18,Va=.95047,Xa=1,Wa=1.08883,Ga=hn.prototype=new un;Ga.brighter=function(n){return new hn(Math.min(100,this.l+Za*(arguments.length?n:1)),this.a,this.b)},Ga.darker=function(n){return new hn(Math.max(0,this.l-Za*(arguments.length?n:1)),this.a,this.b)},Ga.rgb=function(){return gn(this.l,this.a,this.b)},ea.rgb=yn;var Ja=yn.prototype=new un;Ja.brighter=function(n){n=Math.pow(.7,arguments.length?n:1);var t=this.r,e=this.g,r=this.b,o=30;return t||e||r?(t&&o>t&&(t=o),e&&o>e&&(e=o),r&&o>r&&(r=o),new yn(Math.min(255,t/n),Math.min(255,e/n),Math.min(255,r/n))):new yn(o,o,o)},Ja.darker=function(n){return n=Math.pow(.7,arguments.length?n:1),new yn(n*this.r,n*this.g,n*this.b)},Ja.hsl=function(){return _n(this.r,this.g,this.b)},Ja.toString=function(){return"#"+wn(this.r)+wn(this.g)+wn(this.b)};var Ka=ea.map({aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074});Ka.forEach(function(n,t){Ka.set(n,Mn(t))}),ea.functor=An,ea.xhr=En(y),ea.dsv=function(n,t){function e(n,e,i){arguments.length<3&&(i=e,e=null);var a=qn(n,t,null==e?r:o(e),i);return a.row=function(n){return arguments.length?a.response(null==(e=n)?r:o(n)):e},a}function r(n){return e.parse(n.responseText)}function o(n){return function(t){return e.parse(t.responseText,n)}}function i(t){return t.map(a).join(n)}function a(n){return u.test(n)?'"'+n.replace(/\"/g,'""')+'"':n}var u=new RegExp('["'+n+"\n]"),l=n.charCodeAt(0);return e.parse=function(n,t){var r;return e.parseRows(n,function(n,e){if(r)return r(n,e-1);var o=new Function("d","return {"+n.map(function(n,t){return JSON.stringify(n)+": d["+t+"]"}).join(",")+"}");r=t?function(n,e){return t(o(n),e)}:o})},e.parseRows=function(n,t){function e(){if(s>=c)return a;if(o)return o=!1,i;var t=s;if(34===n.charCodeAt(t)){for(var e=t;e++<c;)if(34===n.charCodeAt(e)){if(34!==n.charCodeAt(e+1))break;++e}s=e+2;var r=n.charCodeAt(e+1);return 13===r?(o=!0,10===n.charCodeAt(e+2)&&++s):10===r&&(o=!0),n.slice(t+1,e).replace(/""/g,'"')}for(;c>s;){var r=n.charCodeAt(s++),u=1;if(10===r)o=!0;else if(13===r)o=!0,10===n.charCodeAt(s)&&(++s,++u);else if(r!==l)continue;return n.slice(t,s-u)}return n.slice(t)}for(var r,o,i={},a={},u=[],c=n.length,s=0,f=0;(r=e())!==a;){for(var h=[];r!==i&&r!==a;)h.push(r),r=e();t&&null==(h=t(h,f++))||u.push(h)}return u},e.format=function(t){if(Array.isArray(t[0]))return e.formatRows(t);var r=new v,o=[];return t.forEach(function(n){for(var t in n)r.has(t)||o.push(r.add(t))}),[o.map(a).join(n)].concat(t.map(function(t){return o.map(function(n){return a(t[n])}).join(n)})).join("\n")},e.formatRows=function(n){return n.map(i).join("\n")},e},ea.csv=ea.dsv(",","text/csv"),ea.tsv=ea.dsv(" ","text/tab-separated-values");var Qa,nu,tu,eu,ru,ou=this[x(this,"requestAnimationFrame")]||function(n){setTimeout(n,17)};ea.timer=function(n,t,e){var r=arguments.length;2>r&&(t=0),3>r&&(e=Date.now());var o=e+t,i={c:n,t:o,f:!1,n:null};nu?nu.n=i:Qa=i,nu=i,tu||(eu=clearTimeout(eu),tu=1,ou(Dn))},ea.timer.flush=function(){Pn(),Tn()},ea.round=function(n,t){return t?Math.round(n*(t=Math.pow(10,t)))/t:Math.round(n)};var iu=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"].map(Rn);ea.formatPrefix=function(n,t){var e=0;return n&&(0>n&&(n*=-1),t&&(n=ea.round(n,zn(n,t))),e=1+Math.floor(1e-12+Math.log(n)/Math.LN10),e=Math.max(-24,Math.min(24,3*Math.floor((e-1)/3)))),iu[8+e/3]};var au=/(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i,uu=ea.map({b:function(n){return n.toString(2)},c:function(n){return String.fromCharCode(n)},o:function(n){return n.toString(8)},x:function(n){return n.toString(16)},X:function(n){return n.toString(16).toUpperCase()},g:function(n,t){return n.toPrecision(t)},e:function(n,t){return n.toExponential(t)},f:function(n,t){return n.toFixed(t)},r:function(n,t){return(n=ea.round(n,zn(n,t))).toFixed(Math.max(0,Math.min(20,zn(n*(1+1e-15),t))))}}),lu=ea.time={},cu=Date;jn.prototype={getDate:function(){return this._.getUTCDate()},getDay:function(){return this._.getUTCDay()},getFullYear:function(){return this._.getUTCFullYear()},getHours:function(){return this._.getUTCHours()},getMilliseconds:function(){return this._.getUTCMilliseconds()},getMinutes:function(){
return this._.getUTCMinutes()},getMonth:function(){return this._.getUTCMonth()},getSeconds:function(){return this._.getUTCSeconds()},getTime:function(){return this._.getTime()},getTimezoneOffset:function(){return 0},valueOf:function(){return this._.valueOf()},setDate:function(){su.setUTCDate.apply(this._,arguments)},setDay:function(){su.setUTCDay.apply(this._,arguments)},setFullYear:function(){su.setUTCFullYear.apply(this._,arguments)},setHours:function(){su.setUTCHours.apply(this._,arguments)},setMilliseconds:function(){su.setUTCMilliseconds.apply(this._,arguments)},setMinutes:function(){su.setUTCMinutes.apply(this._,arguments)},setMonth:function(){su.setUTCMonth.apply(this._,arguments)},setSeconds:function(){su.setUTCSeconds.apply(this._,arguments)},setTime:function(){su.setTime.apply(this._,arguments)}};var su=Date.prototype;lu.year=In(function(n){return n=lu.day(n),n.setMonth(0,1),n},function(n,t){n.setFullYear(n.getFullYear()+t)},function(n){return n.getFullYear()}),lu.years=lu.year.range,lu.years.utc=lu.year.utc.range,lu.day=In(function(n){var t=new cu(2e3,0);return t.setFullYear(n.getFullYear(),n.getMonth(),n.getDate()),t},function(n,t){n.setDate(n.getDate()+t)},function(n){return n.getDate()-1}),lu.days=lu.day.range,lu.days.utc=lu.day.utc.range,lu.dayOfYear=function(n){var t=lu.year(n);return Math.floor((n-t-6e4*(n.getTimezoneOffset()-t.getTimezoneOffset()))/864e5)},["sunday","monday","tuesday","wednesday","thursday","friday","saturday"].forEach(function(n,t){t=7-t;var e=lu[n]=In(function(n){return(n=lu.day(n)).setDate(n.getDate()-(n.getDay()+t)%7),n},function(n,t){n.setDate(n.getDate()+7*Math.floor(t))},function(n){var e=lu.year(n).getDay();return Math.floor((lu.dayOfYear(n)+(e+t)%7)/7)-(e!==t)});lu[n+"s"]=e.range,lu[n+"s"].utc=e.utc.range,lu[n+"OfYear"]=function(n){var e=lu.year(n).getDay();return Math.floor((lu.dayOfYear(n)+(e+t)%7)/7)}}),lu.week=lu.sunday,lu.weeks=lu.sunday.range,lu.weeks.utc=lu.sunday.utc.range,lu.weekOfYear=lu.sundayOfYear;var fu={"-":"",_:" ",0:"0"},hu=/^\s*\d+/,gu=/^%/;ea.locale=function(n){return{numberFormat:$n(n),timeFormat:On(n)}};var pu=ea.locale({decimal:".",thousands:",",grouping:[3],currency:["$",""],dateTime:"%a %b %e %X %Y",date:"%m/%d/%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});ea.format=pu.numberFormat,ea.geo={},ct.prototype={s:0,t:0,add:function(n){st(n,this.t,du),st(du.s,this.s,this),this.s?this.t+=du.t:this.s=du.t},reset:function(){this.s=this.t=0},valueOf:function(){return this.s}};var du=new ct;ea.geo.stream=function(n,t){n&&mu.hasOwnProperty(n.type)?mu[n.type](n,t):ft(n,t)};var mu={Feature:function(n,t){ft(n.geometry,t)},FeatureCollection:function(n,t){for(var e=n.features,r=-1,o=e.length;++r<o;)ft(e[r].geometry,t)}},vu={Sphere:function(n,t){t.sphere()},Point:function(n,t){n=n.coordinates,t.point(n[0],n[1],n[2])},MultiPoint:function(n,t){for(var e=n.coordinates,r=-1,o=e.length;++r<o;)n=e[r],t.point(n[0],n[1],n[2])},LineString:function(n,t){ht(n.coordinates,t,0)},MultiLineString:function(n,t){for(var e=n.coordinates,r=-1,o=e.length;++r<o;)ht(e[r],t,0)},Polygon:function(n,t){gt(n.coordinates,t)},MultiPolygon:function(n,t){for(var e=n.coordinates,r=-1,o=e.length;++r<o;)gt(e[r],t)},GeometryCollection:function(n,t){for(var e=n.geometries,r=-1,o=e.length;++r<o;)ft(e[r],t)}};ea.geo.area=function(n){return yu=0,ea.geo.stream(n,xu),yu};var yu,Mu=new ct,xu={sphere:function(){yu+=4*Da},point:w,lineStart:w,lineEnd:w,polygonStart:function(){Mu.reset(),xu.lineStart=pt},polygonEnd:function(){var n=2*Mu;yu+=0>n?4*Da+n:n,xu.lineStart=xu.lineEnd=xu.point=w}};ea.geo.bounds=function(){function n(n,t){M.push(x=[s=n,h=n]),f>t&&(f=t),t>g&&(g=t)}function t(t,e){var r=dt([t*Ra,e*Ra]);if(v){var o=vt(v,r),i=[o[1],-o[0],0],a=vt(i,o);xt(a),a=wt(a);var l=t-p,c=l>0?1:-1,d=a[0]*$a*c,m=pa(l)>180;if(m^(d>c*p&&c*t>d)){var y=a[1]*$a;y>g&&(g=y)}else if(d=(d+360)%360-180,m^(d>c*p&&c*t>d)){var y=-a[1]*$a;f>y&&(f=y)}else f>e&&(f=e),e>g&&(g=e);m?p>t?u(s,t)>u(s,h)&&(h=t):u(t,h)>u(s,h)&&(s=t):h>=s?(s>t&&(s=t),t>h&&(h=t)):t>p?u(s,t)>u(s,h)&&(h=t):u(t,h)>u(s,h)&&(s=t)}else n(t,e);v=r,p=t}function e(){w.point=t}function r(){x[0]=s,x[1]=h,w.point=n,v=null}function o(n,e){if(v){var r=n-p;y+=pa(r)>180?r+(r>0?360:-360):r}else d=n,m=e;xu.point(n,e),t(n,e)}function i(){xu.lineStart()}function a(){o(d,m),xu.lineEnd(),pa(y)>Na&&(s=-(h=180)),x[0]=s,x[1]=h,v=null}function u(n,t){return(t-=n)<0?t+360:t}function l(n,t){return n[0]-t[0]}function c(n,t){return t[0]<=t[1]?t[0]<=n&&n<=t[1]:n<t[0]||t[1]<n}var s,f,h,g,p,d,m,v,y,M,x,w={point:n,lineStart:e,lineEnd:r,polygonStart:function(){w.point=o,w.lineStart=i,w.lineEnd=a,y=0,xu.polygonStart()},polygonEnd:function(){xu.polygonEnd(),w.point=n,w.lineStart=e,w.lineEnd=r,0>Mu?(s=-(h=180),f=-(g=90)):y>Na?g=90:-Na>y&&(f=-90),x[0]=s,x[1]=h}};return function(n){g=h=-(s=f=1/0),M=[],ea.geo.stream(n,w);var t=M.length;if(t){M.sort(l);for(var e,r=1,o=M[0],i=[o];t>r;++r)e=M[r],c(e[0],o)||c(e[1],o)?(u(o[0],e[1])>u(o[0],o[1])&&(o[1]=e[1]),u(e[0],o[1])>u(o[0],o[1])&&(o[0]=e[0])):i.push(o=e);for(var a,e,p=-(1/0),t=i.length-1,r=0,o=i[t];t>=r;o=e,++r)e=i[r],(a=u(o[1],e[0]))>p&&(p=a,s=e[0],h=o[1])}return M=x=null,s===1/0||f===1/0?[[0/0,0/0],[0/0,0/0]]:[[s,f],[h,g]]}}(),ea.geo.centroid=function(n){wu=bu=_u=ku=Cu=Su=Au=Eu=qu=Nu=Lu=0,ea.geo.stream(n,Du);var t=qu,e=Nu,r=Lu,o=t*t+e*e+r*r;return La>o&&(t=Su,e=Au,r=Eu,Na>bu&&(t=_u,e=ku,r=Cu),o=t*t+e*e+r*r,La>o)?[0/0,0/0]:[Math.atan2(e,t)*$a,tn(r/Math.sqrt(o))*$a]};var wu,bu,_u,ku,Cu,Su,Au,Eu,qu,Nu,Lu,Du={sphere:w,point:_t,lineStart:Ct,lineEnd:St,polygonStart:function(){Du.lineStart=At},polygonEnd:function(){Du.lineStart=Ct}},Pu=Pt(qt,$t,jt,[-Da,-Da/2]),Tu=1e9;ea.geo.clipExtent=function(){var n,t,e,r,o,i,a={stream:function(n){return o&&(o.valid=!1),o=i(n),o.valid=!0,o},extent:function(u){return arguments.length?(i=Ht(n=+u[0][0],t=+u[0][1],e=+u[1][0],r=+u[1][1]),o&&(o.valid=!1,o=null),a):[[n,t],[e,r]]}};return a.extent([[0,0],[960,500]])},(ea.geo.conicEqualArea=function(){return Yt(Bt)}).raw=Bt,ea.geo.albers=function(){return ea.geo.conicEqualArea().rotate([96,0]).center([-.6,38.7]).parallels([29.5,45.5]).scale(1070)},ea.geo.albersUsa=function(){function n(n){var i=n[0],a=n[1];return t=null,e(i,a),t||(r(i,a),t)||o(i,a),t}var t,e,r,o,i=ea.geo.albers(),a=ea.geo.conicEqualArea().rotate([154,0]).center([-2,58.5]).parallels([55,65]),u=ea.geo.conicEqualArea().rotate([157,0]).center([-3,19.9]).parallels([8,18]),l={point:function(n,e){t=[n,e]}};return n.invert=function(n){var t=i.scale(),e=i.translate(),r=(n[0]-e[0])/t,o=(n[1]-e[1])/t;return(o>=.12&&.234>o&&r>=-.425&&-.214>r?a:o>=.166&&.234>o&&r>=-.214&&-.115>r?u:i).invert(n)},n.stream=function(n){var t=i.stream(n),e=a.stream(n),r=u.stream(n);return{point:function(n,o){t.point(n,o),e.point(n,o),r.point(n,o)},sphere:function(){t.sphere(),e.sphere(),r.sphere()},lineStart:function(){t.lineStart(),e.lineStart(),r.lineStart()},lineEnd:function(){t.lineEnd(),e.lineEnd(),r.lineEnd()},polygonStart:function(){t.polygonStart(),e.polygonStart(),r.polygonStart()},polygonEnd:function(){t.polygonEnd(),e.polygonEnd(),r.polygonEnd()}}},n.precision=function(t){return arguments.length?(i.precision(t),a.precision(t),u.precision(t),n):i.precision()},n.scale=function(t){return arguments.length?(i.scale(t),a.scale(.35*t),u.scale(t),n.translate(i.translate())):i.scale()},n.translate=function(t){if(!arguments.length)return i.translate();var c=i.scale(),s=+t[0],f=+t[1];return e=i.translate(t).clipExtent([[s-.455*c,f-.238*c],[s+.455*c,f+.238*c]]).stream(l).point,r=a.translate([s-.307*c,f+.201*c]).clipExtent([[s-.425*c+Na,f+.12*c+Na],[s-.214*c-Na,f+.234*c-Na]]).stream(l).point,o=u.translate([s-.205*c,f+.212*c]).clipExtent([[s-.214*c+Na,f+.166*c+Na],[s-.115*c-Na,f+.234*c-Na]]).stream(l).point,n},n.scale(1070)};var zu,Ru,$u,Uu,ju,Iu,Fu={point:w,lineStart:w,lineEnd:w,polygonStart:function(){Ru=0,Fu.lineStart=Zt},polygonEnd:function(){Fu.lineStart=Fu.lineEnd=Fu.point=w,zu+=pa(Ru/2)}},Ou={point:Vt,lineStart:w,lineEnd:w,polygonStart:w,polygonEnd:w},Hu={point:Gt,lineStart:Jt,lineEnd:Kt,polygonStart:function(){Hu.lineStart=Qt},polygonEnd:function(){Hu.point=Gt,Hu.lineStart=Jt,Hu.lineEnd=Kt}};ea.geo.path=function(){function n(n){return n&&("function"==typeof u&&i.pointRadius(+u.apply(this,arguments)),a&&a.valid||(a=o(i)),ea.geo.stream(n,a)),i.result()}function t(){return a=null,n}var e,r,o,i,a,u=4.5;return n.area=function(n){return zu=0,ea.geo.stream(n,o(Fu)),zu},n.centroid=function(n){return _u=ku=Cu=Su=Au=Eu=qu=Nu=Lu=0,ea.geo.stream(n,o(Hu)),Lu?[qu/Lu,Nu/Lu]:Eu?[Su/Eu,Au/Eu]:Cu?[_u/Cu,ku/Cu]:[0/0,0/0]},n.bounds=function(n){return ju=Iu=-($u=Uu=1/0),ea.geo.stream(n,o(Ou)),[[$u,Uu],[ju,Iu]]},n.projection=function(n){return arguments.length?(o=(e=n)?n.stream||ee(n):y,t()):e},n.context=function(n){return arguments.length?(i=null==(r=n)?new Xt:new ne(n),"function"!=typeof u&&i.pointRadius(u),t()):r},n.pointRadius=function(t){return arguments.length?(u="function"==typeof t?t:(i.pointRadius(+t),+t),n):u},n.projection(ea.geo.albersUsa()).context(null)},ea.geo.transform=function(n){return{stream:function(t){var e=new re(t);for(var r in n)e[r]=n[r];return e}}},re.prototype={point:function(n,t){this.stream.point(n,t)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}},ea.geo.projection=ie,ea.geo.projectionMutator=ae,(ea.geo.equirectangular=function(){return ie(le)}).raw=le.invert=le,ea.geo.rotation=function(n){function t(t){return t=n(t[0]*Ra,t[1]*Ra),t[0]*=$a,t[1]*=$a,t}return n=se(n[0]%360*Ra,n[1]*Ra,n.length>2?n[2]*Ra:0),t.invert=function(t){return t=n.invert(t[0]*Ra,t[1]*Ra),t[0]*=$a,t[1]*=$a,t},t},ce.invert=le,ea.geo.circle=function(){function n(){var n="function"==typeof r?r.apply(this,arguments):r,t=se(-n[0]*Ra,-n[1]*Ra,0).invert,o=[];return e(null,null,1,{point:function(n,e){o.push(n=t(n,e)),n[0]*=$a,n[1]*=$a}}),{type:"Polygon",coordinates:[o]}}var t,e,r=[0,0],o=6;return n.origin=function(t){return arguments.length?(r=t,n):r},n.angle=function(r){return arguments.length?(e=pe((t=+r)*Ra,o*Ra),n):t},n.precision=function(r){return arguments.length?(e=pe(t*Ra,(o=+r)*Ra),n):o},n.angle(90)},ea.geo.distance=function(n,t){var e,r=(t[0]-n[0])*Ra,o=n[1]*Ra,i=t[1]*Ra,a=Math.sin(r),u=Math.cos(r),l=Math.sin(o),c=Math.cos(o),s=Math.sin(i),f=Math.cos(i);return Math.atan2(Math.sqrt((e=f*a)*e+(e=c*s-l*f*u)*e),l*s+c*f*u)},ea.geo.graticule=function(){function n(){return{type:"MultiLineString",coordinates:t()}}function t(){return ea.range(Math.ceil(i/m)*m,o,m).map(h).concat(ea.range(Math.ceil(c/v)*v,l,v).map(g)).concat(ea.range(Math.ceil(r/p)*p,e,p).filter(function(n){return pa(n%m)>Na}).map(s)).concat(ea.range(Math.ceil(u/d)*d,a,d).filter(function(n){return pa(n%v)>Na}).map(f))}var e,r,o,i,a,u,l,c,s,f,h,g,p=10,d=p,m=90,v=360,y=2.5;return n.lines=function(){return t().map(function(n){return{type:"LineString",coordinates:n}})},n.outline=function(){return{type:"Polygon",coordinates:[h(i).concat(g(l).slice(1),h(o).reverse().slice(1),g(c).reverse().slice(1))]}},n.extent=function(t){return arguments.length?n.majorExtent(t).minorExtent(t):n.minorExtent()},n.majorExtent=function(t){return arguments.length?(i=+t[0][0],o=+t[1][0],c=+t[0][1],l=+t[1][1],i>o&&(t=i,i=o,o=t),c>l&&(t=c,c=l,l=t),n.precision(y)):[[i,c],[o,l]]},n.minorExtent=function(t){return arguments.length?(r=+t[0][0],e=+t[1][0],u=+t[0][1],a=+t[1][1],r>e&&(t=r,r=e,e=t),u>a&&(t=u,u=a,a=t),n.precision(y)):[[r,u],[e,a]]},n.step=function(t){return arguments.length?n.majorStep(t).minorStep(t):n.minorStep()},n.majorStep=function(t){return arguments.length?(m=+t[0],v=+t[1],n):[m,v]},n.minorStep=function(t){return arguments.length?(p=+t[0],d=+t[1],n):[p,d]},n.precision=function(t){return arguments.length?(y=+t,s=me(u,a,90),f=ve(r,e,y),h=me(c,l,90),g=ve(i,o,y),n):y},n.majorExtent([[-180,-90+Na],[180,90-Na]]).minorExtent([[-180,-80-Na],[180,80+Na]])},ea.geo.greatArc=function(){function n(){return{type:"LineString",coordinates:[t||r.apply(this,arguments),e||o.apply(this,arguments)]}}var t,e,r=ye,o=Me;return n.distance=function(){return ea.geo.distance(t||r.apply(this,arguments),e||o.apply(this,arguments))},n.source=function(e){return arguments.length?(r=e,t="function"==typeof e?null:e,n):r},n.target=function(t){return arguments.length?(o=t,e="function"==typeof t?null:t,n):o},n.precision=function(){return arguments.length?n:0},n},ea.geo.interpolate=function(n,t){return xe(n[0]*Ra,n[1]*Ra,t[0]*Ra,t[1]*Ra)},ea.geo.length=function(n){return Yu=0,ea.geo.stream(n,Bu),Yu};var Yu,Bu={sphere:w,point:w,lineStart:we,lineEnd:w,polygonStart:w,polygonEnd:w},Zu=be(function(n){return Math.sqrt(2/(1+n))},function(n){return 2*Math.asin(n/2)});(ea.geo.azimuthalEqualArea=function(){return ie(Zu)}).raw=Zu;var Vu=be(function(n){var t=Math.acos(n);return t&&t/Math.sin(t)},y);(ea.geo.azimuthalEquidistant=function(){return ie(Vu)}).raw=Vu,(ea.geo.conicConformal=function(){return Yt(_e)}).raw=_e,(ea.geo.conicEquidistant=function(){return Yt(ke)}).raw=ke;var Xu=be(function(n){return 1/n},Math.atan);(ea.geo.gnomonic=function(){return ie(Xu)}).raw=Xu,Ce.invert=function(n,t){return[n,2*Math.atan(Math.exp(t))-za]},(ea.geo.mercator=function(){return Se(Ce)}).raw=Ce;var Wu=be(function(){return 1},Math.asin);(ea.geo.orthographic=function(){return ie(Wu)}).raw=Wu;var Gu=be(function(n){return 1/(1+n)},function(n){return 2*Math.atan(n)});(ea.geo.stereographic=function(){return ie(Gu)}).raw=Gu,Ae.invert=function(n,t){return[-t,2*Math.atan(Math.exp(n))-za]},(ea.geo.transverseMercator=function(){var n=Se(Ae),t=n.center,e=n.rotate;return n.center=function(n){return n?t([-n[1],n[0]]):(n=t(),[n[1],-n[0]])},n.rotate=function(n){return n?e([n[0],n[1],n.length>2?n[2]+90:90]):(n=e(),[n[0],n[1],n[2]-90])},e([0,0,90])}).raw=Ae,ea.geom={},ea.geom.hull=function(n){function t(n){if(n.length<3)return[];var t,o=An(e),i=An(r),a=n.length,u=[],l=[];for(t=0;a>t;t++)u.push([+o.call(this,n[t],t),+i.call(this,n[t],t),t]);for(u.sort(Le),t=0;a>t;t++)l.push([u[t][0],-u[t][1]]);var c=Ne(u),s=Ne(l),f=s[0]===c[0],h=s[s.length-1]===c[c.length-1],g=[];for(t=c.length-1;t>=0;--t)g.push(n[u[c[t]][2]]);for(t=+f;t<s.length-h;++t)g.push(n[u[s[t]][2]]);return g}var e=Ee,r=qe;return arguments.length?t(n):(t.x=function(n){return arguments.length?(e=n,t):e},t.y=function(n){return arguments.length?(r=n,t):r},t)},ea.geom.polygon=function(n){return Ma(n,Ju),n};var Ju=ea.geom.polygon.prototype=[];Ju.area=function(){for(var n,t=-1,e=this.length,r=this[e-1],o=0;++t<e;)n=r,r=this[t],o+=n[1]*r[0]-n[0]*r[1];return.5*o},Ju.centroid=function(n){var t,e,r=-1,o=this.length,i=0,a=0,u=this[o-1];for(arguments.length||(n=-1/(6*this.area()));++r<o;)t=u,u=this[r],e=t[0]*u[1]-u[0]*t[1],i+=(t[0]+u[0])*e,a+=(t[1]+u[1])*e;return[i*n,a*n]},Ju.clip=function(n){for(var t,e,r,o,i,a,u=Te(n),l=-1,c=this.length-Te(this),s=this[c-1];++l<c;){for(t=n.slice(),n.length=0,o=this[l],i=t[(r=t.length-u)-1],e=-1;++e<r;)a=t[e],De(a,s,o)?(De(i,s,o)||n.push(Pe(i,a,s,o)),n.push(a)):De(i,s,o)&&n.push(Pe(i,a,s,o)),i=a;u&&n.push(n[0]),s=o}return n};var Ku,Qu,nl,tl,el,rl=[],ol=[];Oe.prototype.prepare=function(){for(var n,t=this.edges,e=t.length;e--;)n=t[e].edge,n.b&&n.a||t.splice(e,1);return t.sort(Ye),t.length},nr.prototype={start:function(){return this.edge.l===this.site?this.edge.a:this.edge.b},end:function(){return this.edge.l===this.site?this.edge.b:this.edge.a}},tr.prototype={insert:function(n,t){var e,r,o;if(n){if(t.P=n,t.N=n.N,n.N&&(n.N.P=t),n.N=t,n.R){for(n=n.R;n.L;)n=n.L;n.L=t}else n.R=t;e=n}else this._?(n=ir(this._),t.P=null,t.N=n,n.P=n.L=t,e=n):(t.P=t.N=null,this._=t,e=null);for(t.L=t.R=null,t.U=e,t.C=!0,n=t;e&&e.C;)r=e.U,e===r.L?(o=r.R,o&&o.C?(e.C=o.C=!1,r.C=!0,n=r):(n===e.R&&(rr(this,e),n=e,e=n.U),e.C=!1,r.C=!0,or(this,r))):(o=r.L,o&&o.C?(e.C=o.C=!1,r.C=!0,n=r):(n===e.L&&(or(this,e),n=e,e=n.U),e.C=!1,r.C=!0,rr(this,r))),e=n.U;this._.C=!1},remove:function(n){n.N&&(n.N.P=n.P),n.P&&(n.P.N=n.N),n.N=n.P=null;var t,e,r,o=n.U,i=n.L,a=n.R;if(e=i?a?ir(a):i:a,o?o.L===n?o.L=e:o.R=e:this._=e,i&&a?(r=e.C,e.C=n.C,e.L=i,i.U=e,e!==a?(o=e.U,e.U=n.U,n=e.R,o.L=n,e.R=a,a.U=e):(e.U=o,o=e,n=e.R)):(r=n.C,n=e),n&&(n.U=o),!r){if(n&&n.C)return void(n.C=!1);do{if(n===this._)break;if(n===o.L){if(t=o.R,t.C&&(t.C=!1,o.C=!0,rr(this,o),t=o.R),t.L&&t.L.C||t.R&&t.R.C){t.R&&t.R.C||(t.L.C=!1,t.C=!0,or(this,t),t=o.R),t.C=o.C,o.C=t.R.C=!1,rr(this,o),n=this._;break}}else if(t=o.L,t.C&&(t.C=!1,o.C=!0,or(this,o),t=o.L),t.L&&t.L.C||t.R&&t.R.C){t.L&&t.L.C||(t.R.C=!1,t.C=!0,rr(this,t),t=o.L),t.C=o.C,o.C=t.L.C=!1,or(this,o),n=this._;break}t.C=!0,n=o,o=o.U}while(!n.C);n&&(n.C=!1)}}},ea.geom.voronoi=function(n){function t(n){var t=new Array(n.length),r=u[0][0],o=u[0][1],i=u[1][0],a=u[1][1];return ar(e(n),u).cells.forEach(function(e,u){var l=e.edges,c=e.site,s=t[u]=l.length?l.map(function(n){var t=n.start();return[t.x,t.y]}):c.x>=r&&c.x<=i&&c.y>=o&&c.y<=a?[[r,a],[i,a],[i,o],[r,o]]:[];s.point=n[u]}),t}function e(n){return n.map(function(n,t){return{x:Math.round(i(n,t)/Na)*Na,y:Math.round(a(n,t)/Na)*Na,i:t}})}var r=Ee,o=qe,i=r,a=o,u=il;return n?t(n):(t.links=function(n){return ar(e(n)).edges.filter(function(n){return n.l&&n.r}).map(function(t){return{source:n[t.l.i],target:n[t.r.i]}})},t.triangles=function(n){var t=[];return ar(e(n)).cells.forEach(function(e,r){for(var o,i,a=e.site,u=e.edges.sort(Ye),l=-1,c=u.length,s=u[c-1].edge,f=s.l===a?s.r:s.l;++l<c;)o=s,i=f,s=u[l].edge,f=s.l===a?s.r:s.l,r<i.i&&r<f.i&&lr(a,i,f)<0&&t.push([n[r],n[i.i],n[f.i]])}),t},t.x=function(n){return arguments.length?(i=An(r=n),t):r},t.y=function(n){return arguments.length?(a=An(o=n),t):o},t.clipExtent=function(n){return arguments.length?(u=null==n?il:n,t):u===il?null:u},t.size=function(n){return arguments.length?t.clipExtent(n&&[[0,0],n]):u===il?null:u&&u[1]},t)};var il=[[-1e6,-1e6],[1e6,1e6]];ea.geom.delaunay=function(n){return ea.geom.voronoi().triangles(n)},ea.geom.quadtree=function(n,t,e,r,o){function i(n){function i(n,t,e,r,o,i,a,u){if(!isNaN(e)&&!isNaN(r))if(n.leaf){var l=n.x,s=n.y;if(null!=l)if(pa(l-e)+pa(s-r)<.01)c(n,t,e,r,o,i,a,u);else{var f=n.point;n.x=n.y=n.point=null,c(n,f,l,s,o,i,a,u),c(n,t,e,r,o,i,a,u)}else n.x=e,n.y=r,n.point=t}else c(n,t,e,r,o,i,a,u)}function c(n,t,e,r,o,a,u,l){var c=.5*(o+u),s=.5*(a+l),f=e>=c,h=r>=s,g=h<<1|f;n.leaf=!1,n=n.nodes[g]||(n.nodes[g]=fr()),f?o=c:u=c,h?a=s:l=s,i(n,t,e,r,o,a,u,l)}var s,f,h,g,p,d,m,v,y,M=An(u),x=An(l);if(null!=t)d=t,m=e,v=r,y=o;else if(v=y=-(d=m=1/0),f=[],h=[],p=n.length,a)for(g=0;p>g;++g)s=n[g],s.x<d&&(d=s.x),s.y<m&&(m=s.y),s.x>v&&(v=s.x),s.y>y&&(y=s.y),f.push(s.x),h.push(s.y);else for(g=0;p>g;++g){var w=+M(s=n[g],g),b=+x(s,g);d>w&&(d=w),m>b&&(m=b),w>v&&(v=w),b>y&&(y=b),f.push(w),h.push(b)}var _=v-d,k=y-m;_>k?y=m+_:v=d+k;var C=fr();if(C.add=function(n){i(C,n,+M(n,++g),+x(n,g),d,m,v,y)},C.visit=function(n){hr(n,C,d,m,v,y)},C.find=function(n){return gr(C,n[0],n[1],d,m,v,y)},g=-1,null==t){for(;++g<p;)i(C,n[g],f[g],h[g],d,m,v,y);--g}else n.forEach(C.add);return f=h=n=s=null,C}var a,u=Ee,l=qe;return(a=arguments.length)?(u=cr,l=sr,3===a&&(o=e,r=t,e=t=0),i(n)):(i.x=function(n){return arguments.length?(u=n,i):u},i.y=function(n){return arguments.length?(l=n,i):l},i.extent=function(n){return arguments.length?(null==n?t=e=r=o=null:(t=+n[0][0],e=+n[0][1],r=+n[1][0],o=+n[1][1]),i):null==t?null:[[t,e],[r,o]]},i.size=function(n){return arguments.length?(null==n?t=e=r=o=null:(t=e=0,r=+n[0],o=+n[1]),i):null==t?null:[r-t,o-e]},i)},ea.interpolateRgb=pr,ea.interpolateObject=dr,ea.interpolateNumber=mr,ea.interpolateString=vr;var al=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,ul=new RegExp(al.source,"g");ea.interpolate=yr,ea.interpolators=[function(n,t){var e=typeof t;return("string"===e?Ka.has(t)||/^(#|rgb\(|hsl\()/.test(t)?pr:vr:t instanceof un?pr:Array.isArray(t)?Mr:"object"===e&&isNaN(t)?dr:mr)(n,t)}],ea.interpolateArray=Mr;var ll=function(){return y},cl=ea.map({linear:ll,poly:Sr,quad:function(){return _r},cubic:function(){return kr},sin:function(){return Ar},exp:function(){return Er},circle:function(){return qr},elastic:Nr,back:Lr,bounce:function(){return Dr}}),sl=ea.map({"in":y,out:wr,"in-out":br,"out-in":function(n){return br(wr(n))}});ea.ease=function(n){var t=n.indexOf("-"),e=t>=0?n.slice(0,t):n,r=t>=0?n.slice(t+1):"in";return e=cl.get(e)||ll,r=sl.get(r)||y,xr(r(e.apply(null,ra.call(arguments,1))))},ea.interpolateHcl=Pr,ea.interpolateHsl=Tr,ea.interpolateLab=zr,ea.interpolateRound=Rr,ea.transform=function(n){var t=ia.createElementNS(ea.ns.prefix.svg,"g");return(ea.transform=function(n){if(null!=n){t.setAttribute("transform",n);var e=t.transform.baseVal.consolidate()}return new $r(e?e.matrix:fl)})(n)},$r.prototype.toString=function(){return"translate("+this.translate+")rotate("+this.rotate+")skewX("+this.skew+")scale("+this.scale+")"};var fl={a:1,b:0,c:0,d:1,e:0,f:0};ea.interpolateTransform=Fr,ea.layout={},ea.layout.bundle=function(){return function(n){for(var t=[],e=-1,r=n.length;++e<r;)t.push(Yr(n[e]));return t}},ea.layout.chord=function(){function n(){var n,c,f,h,g,p={},d=[],m=ea.range(i),v=[];for(e=[],r=[],n=0,h=-1;++h<i;){for(c=0,g=-1;++g<i;)c+=o[h][g];d.push(c),v.push(ea.range(i)),n+=c}for(a&&m.sort(function(n,t){return a(d[n],d[t])}),u&&v.forEach(function(n,t){n.sort(function(n,e){return u(o[t][n],o[t][e])})}),n=(Pa-s*i)/n,c=0,h=-1;++h<i;){for(f=c,g=-1;++g<i;){var y=m[h],M=v[y][g],x=o[y][M],w=c,b=c+=x*n;p[y+"-"+M]={index:y,subindex:M,startAngle:w,endAngle:b,value:x}}r[y]={index:y,startAngle:f,endAngle:c,value:(c-f)/n},c+=s}for(h=-1;++h<i;)for(g=h-1;++g<i;){var _=p[h+"-"+g],k=p[g+"-"+h];(_.value||k.value)&&e.push(_.value<k.value?{source:k,target:_}:{source:_,target:k})}l&&t()}function t(){e.sort(function(n,t){return l((n.source.value+n.target.value)/2,(t.source.value+t.target.value)/2)})}var e,r,o,i,a,u,l,c={},s=0;return c.matrix=function(n){return arguments.length?(i=(o=n)&&o.length,e=r=null,c):o},c.padding=function(n){return arguments.length?(s=n,e=r=null,c):s},c.sortGroups=function(n){return arguments.length?(a=n,e=r=null,c):a},c.sortSubgroups=function(n){return arguments.length?(u=n,e=null,c):u},c.sortChords=function(n){return arguments.length?(l=n,e&&t(),c):l},c.chords=function(){return e||n(),e},c.groups=function(){return r||n(),r},c},ea.layout.force=function(){function n(n){return function(t,e,r,o){if(t.point!==n){var i=t.cx-n.x,a=t.cy-n.y,u=o-e,l=i*i+a*a;if(l>u*u/m){if(p>l){var c=t.charge/l;n.px-=i*c,n.py-=a*c}return!0}if(t.point&&l&&p>l){var c=t.pointCharge/l;n.px-=i*c,n.py-=a*c}}return!t.charge}}function t(n){n.px=ea.event.x,n.py=ea.event.y,u.resume()}var e,r,o,i,a,u={},l=ea.dispatch("start","tick","end"),c=[1,1],s=.9,f=hl,h=gl,g=-30,p=pl,d=.1,m=.64,v=[],M=[];return u.tick=function(){if((r*=.99)<.005)return l.end({type:"end",alpha:r=0}),!0;var t,e,u,f,h,p,m,y,x,w=v.length,b=M.length;for(e=0;b>e;++e)u=M[e],f=u.source,h=u.target,y=h.x-f.x,x=h.y-f.y,(p=y*y+x*x)&&(p=r*i[e]*((p=Math.sqrt(p))-o[e])/p,y*=p,x*=p,h.x-=y*(m=f.weight/(h.weight+f.weight)),h.y-=x*m,f.x+=y*(m=1-m),f.y+=x*m);if((m=r*d)&&(y=c[0]/2,x=c[1]/2,e=-1,m))for(;++e<w;)u=v[e],u.x+=(y-u.x)*m,u.y+=(x-u.y)*m;if(g)for(Jr(t=ea.geom.quadtree(v),r,a),e=-1;++e<w;)(u=v[e]).fixed||t.visit(n(u));for(e=-1;++e<w;)u=v[e],u.fixed?(u.x=u.px,u.y=u.py):(u.x-=(u.px-(u.px=u.x))*s,u.y-=(u.py-(u.py=u.y))*s);l.tick({type:"tick",alpha:r})},u.nodes=function(n){return arguments.length?(v=n,u):v},u.links=function(n){return arguments.length?(M=n,u):M},u.size=function(n){return arguments.length?(c=n,u):c},u.linkDistance=function(n){return arguments.length?(f="function"==typeof n?n:+n,u):f},u.distance=u.linkDistance,u.linkStrength=function(n){return arguments.length?(h="function"==typeof n?n:+n,u):h},u.friction=function(n){return arguments.length?(s=+n,u):s},u.charge=function(n){return arguments.length?(g="function"==typeof n?n:+n,u):g},u.chargeDistance=function(n){return arguments.length?(p=n*n,u):Math.sqrt(p)},u.gravity=function(n){return arguments.length?(d=+n,u):d},u.theta=function(n){return arguments.length?(m=n*n,u):Math.sqrt(m)},u.alpha=function(n){return arguments.length?(n=+n,r?r=n>0?n:0:n>0&&(l.start({type:"start",alpha:r=n}),ea.timer(u.tick)),u):r},u.start=function(){function n(n,r){if(!e){for(e=new Array(l),u=0;l>u;++u)e[u]=[];for(u=0;s>u;++u){var o=M[u];e[o.source.index].push(o.target),e[o.target.index].push(o.source)}}for(var i,a=e[t],u=-1,c=a.length;++u<c;)if(!isNaN(i=a[u][n]))return i;return Math.random()*r}var t,e,r,l=v.length,s=M.length,p=c[0],d=c[1];for(t=0;l>t;++t)(r=v[t]).index=t,r.weight=0;for(t=0;s>t;++t)r=M[t],"number"==typeof r.source&&(r.source=v[r.source]),"number"==typeof r.target&&(r.target=v[r.target]),++r.source.weight,++r.target.weight;for(t=0;l>t;++t)r=v[t],isNaN(r.x)&&(r.x=n("x",p)),isNaN(r.y)&&(r.y=n("y",d)),isNaN(r.px)&&(r.px=r.x),isNaN(r.py)&&(r.py=r.y);if(o=[],"function"==typeof f)for(t=0;s>t;++t)o[t]=+f.call(this,M[t],t);else for(t=0;s>t;++t)o[t]=f;if(i=[],"function"==typeof h)for(t=0;s>t;++t)i[t]=+h.call(this,M[t],t);else for(t=0;s>t;++t)i[t]=h;if(a=[],"function"==typeof g)for(t=0;l>t;++t)a[t]=+g.call(this,v[t],t);else for(t=0;l>t;++t)a[t]=g;return u.resume()},u.resume=function(){return u.alpha(.1)},u.stop=function(){return u.alpha(0)},u.drag=function(){return e||(e=ea.behavior.drag().origin(y).on("dragstart.force",Vr).on("drag.force",t).on("dragend.force",Xr)),arguments.length?void this.on("mouseover.force",Wr).on("mouseout.force",Gr).call(e):e},ea.rebind(u,l,"on")};var hl=20,gl=1,pl=1/0;ea.layout.hierarchy=function(){function n(o){var i,a=[o],u=[];for(o.depth=0;null!=(i=a.pop());)if(u.push(i),(c=e.call(n,i,i.depth))&&(l=c.length)){for(var l,c,s;--l>=0;)a.push(s=c[l]),s.parent=i,s.depth=i.depth+1;r&&(i.value=0),i.children=c}else r&&(i.value=+r.call(n,i,i.depth)||0),delete i.children;return no(o,function(n){var e,o;t&&(e=n.children)&&e.sort(t),r&&(o=n.parent)&&(o.value+=n.value)}),u}var t=ro,e=to,r=eo;return n.sort=function(e){return arguments.length?(t=e,n):t},n.children=function(t){return arguments.length?(e=t,n):e},n.value=function(t){return arguments.length?(r=t,n):r},n.revalue=function(t){return r&&(Qr(t,function(n){n.children&&(n.value=0)}),no(t,function(t){var e;t.children||(t.value=+r.call(n,t,t.depth)||0),(e=t.parent)&&(e.value+=t.value)})),t},n},ea.layout.partition=function(){function n(t,e,r,o){var i=t.children;if(t.x=e,t.y=t.depth*o,t.dx=r,t.dy=o,i&&(a=i.length)){var a,u,l,c=-1;for(r=t.value?r/t.value:0;++c<a;)n(u=i[c],e,l=u.value*r,o),e+=l}}function t(n){var e=n.children,r=0;if(e&&(o=e.length))for(var o,i=-1;++i<o;)r=Math.max(r,t(e[i]));return 1+r}function e(e,i){var a=r.call(this,e,i);return n(a[0],0,o[0],o[1]/t(a[0])),a}var r=ea.layout.hierarchy(),o=[1,1];return e.size=function(n){return arguments.length?(o=n,e):o},Kr(e,r)},ea.layout.pie=function(){function n(a){var u,l=a.length,c=a.map(function(e,r){return+t.call(n,e,r)}),s=+("function"==typeof r?r.apply(this,arguments):r),f=("function"==typeof o?o.apply(this,arguments):o)-s,h=Math.min(Math.abs(f)/l,+("function"==typeof i?i.apply(this,arguments):i)),g=h*(0>f?-1:1),p=(f-l*g)/ea.sum(c),d=ea.range(l),m=[];return null!=e&&d.sort(e===dl?function(n,t){return c[t]-c[n]}:function(n,t){return e(a[n],a[t])}),d.forEach(function(n){m[n]={data:a[n],value:u=c[n],startAngle:s,endAngle:s+=u*p+g,padAngle:h}}),m}var t=Number,e=dl,r=0,o=Pa,i=0;return n.value=function(e){return arguments.length?(t=e,n):t},n.sort=function(t){return arguments.length?(e=t,n):e},n.startAngle=function(t){return arguments.length?(r=t,n):r},n.endAngle=function(t){return arguments.length?(o=t,n):o},n.padAngle=function(t){return arguments.length?(i=t,n):i},n};var dl={};ea.layout.stack=function(){function n(u,l){if(!(h=u.length))return u;var c=u.map(function(e,r){return t.call(n,e,r)}),s=c.map(function(t){return t.map(function(t,e){return[i.call(n,t,e),a.call(n,t,e)]})}),f=e.call(n,s,l);c=ea.permute(c,f),s=ea.permute(s,f);var h,g,p,d,m=r.call(n,s,l),v=c[0].length;for(p=0;v>p;++p)for(o.call(n,c[0][p],d=m[p],s[0][p][1]),g=1;h>g;++g)o.call(n,c[g][p],d+=s[g-1][p][1],s[g][p][1]);return u}var t=y,e=lo,r=co,o=uo,i=io,a=ao;return n.values=function(e){return arguments.length?(t=e,n):t},n.order=function(t){return arguments.length?(e="function"==typeof t?t:ml.get(t)||lo,n):e},n.offset=function(t){return arguments.length?(r="function"==typeof t?t:vl.get(t)||co,n):r},n.x=function(t){return arguments.length?(i=t,n):i},n.y=function(t){return arguments.length?(a=t,n):a},n.out=function(t){return arguments.length?(o=t,n):o},n};var ml=ea.map({"inside-out":function(n){var t,e,r=n.length,o=n.map(so),i=n.map(fo),a=ea.range(r).sort(function(n,t){return o[n]-o[t]}),u=0,l=0,c=[],s=[];for(t=0;r>t;++t)e=a[t],l>u?(u+=i[e],c.push(e)):(l+=i[e],s.push(e));return s.reverse().concat(c)},reverse:function(n){return ea.range(n.length).reverse()},"default":lo}),vl=ea.map({silhouette:function(n){var t,e,r,o=n.length,i=n[0].length,a=[],u=0,l=[];for(e=0;i>e;++e){for(t=0,r=0;o>t;t++)r+=n[t][e][1];r>u&&(u=r),a.push(r)}for(e=0;i>e;++e)l[e]=(u-a[e])/2;return l},wiggle:function(n){var t,e,r,o,i,a,u,l,c,s=n.length,f=n[0],h=f.length,g=[];for(g[0]=l=c=0,e=1;h>e;++e){for(t=0,o=0;s>t;++t)o+=n[t][e][1];for(t=0,i=0,u=f[e][0]-f[e-1][0];s>t;++t){for(r=0,a=(n[t][e][1]-n[t][e-1][1])/(2*u);t>r;++r)a+=(n[r][e][1]-n[r][e-1][1])/u;i+=a*n[t][e][1]}g[e]=l-=o?i/o*u:0,c>l&&(c=l)}for(e=0;h>e;++e)g[e]-=c;return g},expand:function(n){var t,e,r,o=n.length,i=n[0].length,a=1/o,u=[];for(e=0;i>e;++e){for(t=0,r=0;o>t;t++)r+=n[t][e][1];if(r)for(t=0;o>t;t++)n[t][e][1]/=r;else for(t=0;o>t;t++)n[t][e][1]=a}for(e=0;i>e;++e)u[e]=0;return u},zero:co});ea.layout.histogram=function(){function n(n,i){for(var a,u,l=[],c=n.map(e,this),s=r.call(this,c,i),f=o.call(this,s,c,i),i=-1,h=c.length,g=f.length-1,p=t?1:1/h;++i<g;)a=l[i]=[],a.dx=f[i+1]-(a.x=f[i]),a.y=0;if(g>0)for(i=-1;++i<h;)u=c[i],u>=s[0]&&u<=s[1]&&(a=l[ea.bisect(f,u,1,g)-1],a.y+=p,a.push(n[i]));return l}var t=!0,e=Number,r=mo,o=go;return n.value=function(t){return arguments.length?(e=t,n):e},n.range=function(t){return arguments.length?(r=An(t),n):r},n.bins=function(t){return arguments.length?(o="number"==typeof t?function(n){return po(n,t)}:An(t),n):o},n.frequency=function(e){return arguments.length?(t=!!e,n):t},n},ea.layout.pack=function(){function n(n,i){var a=e.call(this,n,i),u=a[0],l=o[0],c=o[1],s=null==t?Math.sqrt:"function"==typeof t?t:function(){return t};if(u.x=u.y=0,no(u,function(n){n.r=+s(n.value)}),no(u,wo),r){var f=r*(t?1:Math.max(2*u.r/l,2*u.r/c))/2;no(u,function(n){n.r+=f}),no(u,wo),no(u,function(n){n.r-=f})}return ko(u,l/2,c/2,t?1:1/Math.max(2*u.r/l,2*u.r/c)),a}var t,e=ea.layout.hierarchy().sort(vo),r=0,o=[1,1];return n.size=function(t){return arguments.length?(o=t,n):o},n.radius=function(e){return arguments.length?(t=null==e||"function"==typeof e?e:+e,n):t},n.padding=function(t){return arguments.length?(r=+t,n):r},Kr(n,e)},ea.layout.tree=function(){function n(n,o){var s=a.call(this,n,o),f=s[0],h=t(f);if(no(h,e),h.parent.m=-h.z,Qr(h,r),c)Qr(f,i);else{var g=f,p=f,d=f;Qr(f,function(n){n.x<g.x&&(g=n),n.x>p.x&&(p=n),n.depth>d.depth&&(d=n)});var m=u(g,p)/2-g.x,v=l[0]/(p.x+u(p,g)/2+m),y=l[1]/(d.depth||1);Qr(f,function(n){n.x=(n.x+m)*v,n.y=n.depth*y})}return s}function t(n){for(var t,e={A:null,children:[n]},r=[e];null!=(t=r.pop());)for(var o,i=t.children,a=0,u=i.length;u>a;++a)r.push((i[a]=o={_:i[a],parent:t,children:(o=i[a].children)&&o.slice()||[],A:null,a:null,z:0,m:0,c:0,s:0,t:null,i:a}).a=o);return e.children[0]}function e(n){var t=n.children,e=n.parent.children,r=n.i?e[n.i-1]:null;if(t.length){No(n);var i=(t[0].z+t[t.length-1].z)/2;r?(n.z=r.z+u(n._,r._),n.m=n.z-i):n.z=i}else r&&(n.z=r.z+u(n._,r._));n.parent.A=o(n,r,n.parent.A||e[0])}function r(n){n._.x=n.z+n.parent.m,n.m+=n.parent.m}function o(n,t,e){if(t){for(var r,o=n,i=n,a=t,l=o.parent.children[0],c=o.m,s=i.m,f=a.m,h=l.m;a=Eo(a),
o=Ao(o),a&&o;)l=Ao(l),i=Eo(i),i.a=n,r=a.z+f-o.z-c+u(a._,o._),r>0&&(qo(Lo(a,n,e),n,r),c+=r,s+=r),f+=a.m,c+=o.m,h+=l.m,s+=i.m;a&&!Eo(i)&&(i.t=a,i.m+=f-s),o&&!Ao(l)&&(l.t=o,l.m+=c-h,e=n)}return e}function i(n){n.x*=l[0],n.y=n.depth*l[1]}var a=ea.layout.hierarchy().sort(null).value(null),u=So,l=[1,1],c=null;return n.separation=function(t){return arguments.length?(u=t,n):u},n.size=function(t){return arguments.length?(c=null==(l=t)?i:null,n):c?null:l},n.nodeSize=function(t){return arguments.length?(c=null==(l=t)?null:i,n):c?l:null},Kr(n,a)},ea.layout.cluster=function(){function n(n,i){var a,u=t.call(this,n,i),l=u[0],c=0;no(l,function(n){var t=n.children;t&&t.length?(n.x=Po(t),n.y=Do(t)):(n.x=a?c+=e(n,a):0,n.y=0,a=n)});var s=To(l),f=zo(l),h=s.x-e(s,f)/2,g=f.x+e(f,s)/2;return no(l,o?function(n){n.x=(n.x-l.x)*r[0],n.y=(l.y-n.y)*r[1]}:function(n){n.x=(n.x-h)/(g-h)*r[0],n.y=(1-(l.y?n.y/l.y:1))*r[1]}),u}var t=ea.layout.hierarchy().sort(null).value(null),e=So,r=[1,1],o=!1;return n.separation=function(t){return arguments.length?(e=t,n):e},n.size=function(t){return arguments.length?(o=null==(r=t),n):o?null:r},n.nodeSize=function(t){return arguments.length?(o=null!=(r=t),n):o?r:null},Kr(n,t)},ea.layout.treemap=function(){function n(n,t){for(var e,r,o=-1,i=n.length;++o<i;)r=(e=n[o]).value*(0>t?0:t),e.area=isNaN(r)||0>=r?0:r}function t(e){var i=e.children;if(i&&i.length){var a,u,l,c=f(e),s=[],h=i.slice(),p=1/0,d="slice"===g?c.dx:"dice"===g?c.dy:"slice-dice"===g?1&e.depth?c.dy:c.dx:Math.min(c.dx,c.dy);for(n(h,c.dx*c.dy/e.value),s.area=0;(l=h.length)>0;)s.push(a=h[l-1]),s.area+=a.area,"squarify"!==g||(u=r(s,d))<=p?(h.pop(),p=u):(s.area-=s.pop().area,o(s,d,c,!1),d=Math.min(c.dx,c.dy),s.length=s.area=0,p=1/0);s.length&&(o(s,d,c,!0),s.length=s.area=0),i.forEach(t)}}function e(t){var r=t.children;if(r&&r.length){var i,a=f(t),u=r.slice(),l=[];for(n(u,a.dx*a.dy/t.value),l.area=0;i=u.pop();)l.push(i),l.area+=i.area,null!=i.z&&(o(l,i.z?a.dx:a.dy,a,!u.length),l.length=l.area=0);r.forEach(e)}}function r(n,t){for(var e,r=n.area,o=0,i=1/0,a=-1,u=n.length;++a<u;)(e=n[a].area)&&(i>e&&(i=e),e>o&&(o=e));return r*=r,t*=t,r?Math.max(t*o*p/r,r/(t*i*p)):1/0}function o(n,t,e,r){var o,i=-1,a=n.length,u=e.x,c=e.y,s=t?l(n.area/t):0;if(t==e.dx){for((r||s>e.dy)&&(s=e.dy);++i<a;)o=n[i],o.x=u,o.y=c,o.dy=s,u+=o.dx=Math.min(e.x+e.dx-u,s?l(o.area/s):0);o.z=!0,o.dx+=e.x+e.dx-u,e.y+=s,e.dy-=s}else{for((r||s>e.dx)&&(s=e.dx);++i<a;)o=n[i],o.x=u,o.y=c,o.dx=s,c+=o.dy=Math.min(e.y+e.dy-c,s?l(o.area/s):0);o.z=!1,o.dy+=e.y+e.dy-c,e.x+=s,e.dx-=s}}function i(r){var o=a||u(r),i=o[0];return i.x=0,i.y=0,i.dx=c[0],i.dy=c[1],a&&u.revalue(i),n([i],i.dx*i.dy/i.value),(a?e:t)(i),h&&(a=o),o}var a,u=ea.layout.hierarchy(),l=Math.round,c=[1,1],s=null,f=Ro,h=!1,g="squarify",p=.5*(1+Math.sqrt(5));return i.size=function(n){return arguments.length?(c=n,i):c},i.padding=function(n){function t(t){var e=n.call(i,t,t.depth);return null==e?Ro(t):$o(t,"number"==typeof e?[e,e,e,e]:e)}function e(t){return $o(t,n)}if(!arguments.length)return s;var r;return f=null==(s=n)?Ro:"function"==(r=typeof n)?t:"number"===r?(n=[n,n,n,n],e):e,i},i.round=function(n){return arguments.length?(l=n?Math.round:Number,i):l!=Number},i.sticky=function(n){return arguments.length?(h=n,a=null,i):h},i.ratio=function(n){return arguments.length?(p=n,i):p},i.mode=function(n){return arguments.length?(g=n+"",i):g},Kr(i,u)},ea.random={normal:function(n,t){var e=arguments.length;return 2>e&&(t=1),1>e&&(n=0),function(){var e,r,o;do e=2*Math.random()-1,r=2*Math.random()-1,o=e*e+r*r;while(!o||o>1);return n+t*e*Math.sqrt(-2*Math.log(o)/o)}},logNormal:function(){var n=ea.random.normal.apply(ea,arguments);return function(){return Math.exp(n())}},bates:function(n){var t=ea.random.irwinHall(n);return function(){return t()/n}},irwinHall:function(n){return function(){for(var t=0,e=0;n>e;e++)t+=Math.random();return t}}},ea.scale={};var yl={floor:y,ceil:y};ea.scale.linear=function(){return Yo([0,1],[0,1],yr,!1)};var Ml={s:1,g:1,p:1,r:1,e:1};ea.scale.log=function(){return Ko(ea.scale.linear().domain([0,1]),10,!0,[1,10])};var xl=ea.format(".0e"),wl={floor:function(n){return-Math.ceil(-n)},ceil:function(n){return-Math.floor(-n)}};ea.scale.pow=function(){return Qo(ea.scale.linear(),1,[0,1])},ea.scale.sqrt=function(){return ea.scale.pow().exponent(.5)},ea.scale.ordinal=function(){return ti([],{t:"range",a:[[]]})},ea.scale.category10=function(){return ea.scale.ordinal().range(bl)},ea.scale.category20=function(){return ea.scale.ordinal().range(_l)},ea.scale.category20b=function(){return ea.scale.ordinal().range(kl)},ea.scale.category20c=function(){return ea.scale.ordinal().range(Cl)};var bl=[2062260,16744206,2924588,14034728,9725885,9197131,14907330,8355711,12369186,1556175].map(xn),_l=[2062260,11454440,16744206,16759672,2924588,10018698,14034728,16750742,9725885,12955861,9197131,12885140,14907330,16234194,8355711,13092807,12369186,14408589,1556175,10410725].map(xn),kl=[3750777,5395619,7040719,10264286,6519097,9216594,11915115,13556636,9202993,12426809,15186514,15190932,8666169,11356490,14049643,15177372,8077683,10834324,13528509,14589654].map(xn),Cl=[3244733,7057110,10406625,13032431,15095053,16616764,16625259,16634018,3253076,7652470,10607003,13101504,7695281,10394312,12369372,14342891,6513507,9868950,12434877,14277081].map(xn);ea.scale.quantile=function(){return ei([],[])},ea.scale.quantize=function(){return ri(0,1,[0,1])},ea.scale.threshold=function(){return oi([.5],[0,1])},ea.scale.identity=function(){return ii([0,1])},ea.svg={},ea.svg.arc=function(){function n(){var n=Math.max(0,+e.apply(this,arguments)),c=Math.max(0,+r.apply(this,arguments)),s=a.apply(this,arguments)-za,f=u.apply(this,arguments)-za,h=Math.abs(f-s),g=s>f?0:1;if(n>c&&(p=c,c=n,n=p),h>=Ta)return t(c,g)+(n?t(n,1-g):"")+"Z";var p,d,m,v,y,M,x,w,b,_,k,C,S=0,A=0,E=[];if((v=(+l.apply(this,arguments)||0)/2)&&(m=i===Sl?Math.sqrt(n*n+c*c):+i.apply(this,arguments),g||(A*=-1),c&&(A=tn(m/c*Math.sin(v))),n&&(S=tn(m/n*Math.sin(v)))),c){y=c*Math.cos(s+A),M=c*Math.sin(s+A),x=c*Math.cos(f-A),w=c*Math.sin(f-A);var q=Math.abs(f-s-2*A)<=Da?0:1;if(A&&hi(y,M,x,w)===g^q){var N=(s+f)/2;y=c*Math.cos(N),M=c*Math.sin(N),x=w=null}}else y=M=0;if(n){b=n*Math.cos(f-S),_=n*Math.sin(f-S),k=n*Math.cos(s+S),C=n*Math.sin(s+S);var L=Math.abs(s-f+2*S)<=Da?0:1;if(S&&hi(b,_,k,C)===1-g^L){var D=(s+f)/2;b=n*Math.cos(D),_=n*Math.sin(D),k=C=null}}else b=_=0;if((p=Math.min(Math.abs(c-n)/2,+o.apply(this,arguments)))>.001){d=c>n^g?0:1;var P=null==k?[b,_]:null==x?[y,M]:Pe([y,M],[k,C],[x,w],[b,_]),T=y-P[0],z=M-P[1],R=x-P[0],$=w-P[1],U=1/Math.sin(Math.acos((T*R+z*$)/(Math.sqrt(T*T+z*z)*Math.sqrt(R*R+$*$)))/2),j=Math.sqrt(P[0]*P[0]+P[1]*P[1]);if(null!=x){var I=Math.min(p,(c-j)/(U+1)),F=gi(null==k?[b,_]:[k,C],[y,M],c,I,g),O=gi([x,w],[b,_],c,I,g);p===I?E.push("M",F[0],"A",I,",",I," 0 0,",d," ",F[1],"A",c,",",c," 0 ",1-g^hi(F[1][0],F[1][1],O[1][0],O[1][1]),",",g," ",O[1],"A",I,",",I," 0 0,",d," ",O[0]):E.push("M",F[0],"A",I,",",I," 0 1,",d," ",O[0])}else E.push("M",y,",",M);if(null!=k){var H=Math.min(p,(n-j)/(U-1)),Y=gi([y,M],[k,C],n,-H,g),B=gi([b,_],null==x?[y,M]:[x,w],n,-H,g);p===H?E.push("L",B[0],"A",H,",",H," 0 0,",d," ",B[1],"A",n,",",n," 0 ",g^hi(B[1][0],B[1][1],Y[1][0],Y[1][1]),",",1-g," ",Y[1],"A",H,",",H," 0 0,",d," ",Y[0]):E.push("L",B[0],"A",H,",",H," 0 0,",d," ",Y[0])}else E.push("L",b,",",_)}else E.push("M",y,",",M),null!=x&&E.push("A",c,",",c," 0 ",q,",",g," ",x,",",w),E.push("L",b,",",_),null!=k&&E.push("A",n,",",n," 0 ",L,",",1-g," ",k,",",C);return E.push("Z"),E.join("")}function t(n,t){return"M0,"+n+"A"+n+","+n+" 0 1,"+t+" 0,"+-n+"A"+n+","+n+" 0 1,"+t+" 0,"+n}var e=ui,r=li,o=ai,i=Sl,a=ci,u=si,l=fi;return n.innerRadius=function(t){return arguments.length?(e=An(t),n):e},n.outerRadius=function(t){return arguments.length?(r=An(t),n):r},n.cornerRadius=function(t){return arguments.length?(o=An(t),n):o},n.padRadius=function(t){return arguments.length?(i=t==Sl?Sl:An(t),n):i},n.startAngle=function(t){return arguments.length?(a=An(t),n):a},n.endAngle=function(t){return arguments.length?(u=An(t),n):u},n.padAngle=function(t){return arguments.length?(l=An(t),n):l},n.centroid=function(){var n=(+e.apply(this,arguments)+ +r.apply(this,arguments))/2,t=(+a.apply(this,arguments)+ +u.apply(this,arguments))/2-za;return[Math.cos(t)*n,Math.sin(t)*n]},n};var Sl="auto";ea.svg.line=function(){return pi(y)};var Al=ea.map({linear:di,"linear-closed":mi,step:vi,"step-before":yi,"step-after":Mi,basis:Ci,"basis-open":Si,"basis-closed":Ai,bundle:Ei,cardinal:bi,"cardinal-open":xi,"cardinal-closed":wi,monotone:Ti});Al.forEach(function(n,t){t.key=n,t.closed=/-closed$/.test(n)});var El=[0,2/3,1/3,0],ql=[0,1/3,2/3,0],Nl=[0,1/6,2/3,1/6];ea.svg.line.radial=function(){var n=pi(zi);return n.radius=n.x,delete n.x,n.angle=n.y,delete n.y,n},yi.reverse=Mi,Mi.reverse=yi,ea.svg.area=function(){return Ri(y)},ea.svg.area.radial=function(){var n=Ri(zi);return n.radius=n.x,delete n.x,n.innerRadius=n.x0,delete n.x0,n.outerRadius=n.x1,delete n.x1,n.angle=n.y,delete n.y,n.startAngle=n.y0,delete n.y0,n.endAngle=n.y1,delete n.y1,n},ea.svg.chord=function(){function n(n,u){var l=t(this,i,n,u),c=t(this,a,n,u);return"M"+l.p0+r(l.r,l.p1,l.a1-l.a0)+(e(l,c)?o(l.r,l.p1,l.r,l.p0):o(l.r,l.p1,c.r,c.p0)+r(c.r,c.p1,c.a1-c.a0)+o(c.r,c.p1,l.r,l.p0))+"Z"}function t(n,t,e,r){var o=t.call(n,e,r),i=u.call(n,o,r),a=l.call(n,o,r)-za,s=c.call(n,o,r)-za;return{r:i,a0:a,a1:s,p0:[i*Math.cos(a),i*Math.sin(a)],p1:[i*Math.cos(s),i*Math.sin(s)]}}function e(n,t){return n.a0==t.a0&&n.a1==t.a1}function r(n,t,e){return"A"+n+","+n+" 0 "+ +(e>Da)+",1 "+t}function o(n,t,e,r){return"Q 0,0 "+r}var i=ye,a=Me,u=$i,l=ci,c=si;return n.radius=function(t){return arguments.length?(u=An(t),n):u},n.source=function(t){return arguments.length?(i=An(t),n):i},n.target=function(t){return arguments.length?(a=An(t),n):a},n.startAngle=function(t){return arguments.length?(l=An(t),n):l},n.endAngle=function(t){return arguments.length?(c=An(t),n):c},n},ea.svg.diagonal=function(){function n(n,o){var i=t.call(this,n,o),a=e.call(this,n,o),u=(i.y+a.y)/2,l=[i,{x:i.x,y:u},{x:a.x,y:u},a];return l=l.map(r),"M"+l[0]+"C"+l[1]+" "+l[2]+" "+l[3]}var t=ye,e=Me,r=Ui;return n.source=function(e){return arguments.length?(t=An(e),n):t},n.target=function(t){return arguments.length?(e=An(t),n):e},n.projection=function(t){return arguments.length?(r=t,n):r},n},ea.svg.diagonal.radial=function(){var n=ea.svg.diagonal(),t=Ui,e=n.projection;return n.projection=function(n){return arguments.length?e(ji(t=n)):t},n},ea.svg.symbol=function(){function n(n,r){return(Ll.get(t.call(this,n,r))||Oi)(e.call(this,n,r))}var t=Fi,e=Ii;return n.type=function(e){return arguments.length?(t=An(e),n):t},n.size=function(t){return arguments.length?(e=An(t),n):e},n};var Ll=ea.map({circle:Oi,cross:function(n){var t=Math.sqrt(n/5)/2;return"M"+-3*t+","+-t+"H"+-t+"V"+-3*t+"H"+t+"V"+-t+"H"+3*t+"V"+t+"H"+t+"V"+3*t+"H"+-t+"V"+t+"H"+-3*t+"Z"},diamond:function(n){var t=Math.sqrt(n/(2*Pl)),e=t*Pl;return"M0,"+-t+"L"+e+",0 0,"+t+" "+-e+",0Z"},square:function(n){var t=Math.sqrt(n)/2;return"M"+-t+","+-t+"L"+t+","+-t+" "+t+","+t+" "+-t+","+t+"Z"},"triangle-down":function(n){var t=Math.sqrt(n/Dl),e=t*Dl/2;return"M0,"+e+"L"+t+","+-e+" "+-t+","+-e+"Z"},"triangle-up":function(n){var t=Math.sqrt(n/Dl),e=t*Dl/2;return"M0,"+-e+"L"+t+","+e+" "+-t+","+e+"Z"}});ea.svg.symbolTypes=Ll.keys();var Dl=Math.sqrt(3),Pl=Math.tan(30*Ra);_a.transition=function(n){for(var t,e,r=Tl||++Ul,o=Vi(n),i=[],a=zl||{time:Date.now(),ease:Cr,delay:0,duration:250},u=-1,l=this.length;++u<l;){i.push(t=[]);for(var c=this[u],s=-1,f=c.length;++s<f;)(e=c[s])&&Xi(e,s,o,r,a),t.push(e)}return Yi(i,o,r)},_a.interrupt=function(n){return this.each(null==n?Rl:Hi(Vi(n)))};var Tl,zl,Rl=Hi(Vi()),$l=[],Ul=0;$l.call=_a.call,$l.empty=_a.empty,$l.node=_a.node,$l.size=_a.size,ea.transition=function(n,t){return n&&n.transition?Tl?n.transition(t):n:ea.selection().transition(n)},ea.transition.prototype=$l,$l.select=function(n){var t,e,r,o=this.id,i=this.namespace,a=[];n=E(n);for(var u=-1,l=this.length;++u<l;){a.push(t=[]);for(var c=this[u],s=-1,f=c.length;++s<f;)(r=c[s])&&(e=n.call(r,r.__data__,s,u))?("__data__"in r&&(e.__data__=r.__data__),Xi(e,s,i,o,r[i][o]),t.push(e)):t.push(null)}return Yi(a,i,o)},$l.selectAll=function(n){var t,e,r,o,i,a=this.id,u=this.namespace,l=[];n=q(n);for(var c=-1,s=this.length;++c<s;)for(var f=this[c],h=-1,g=f.length;++h<g;)if(r=f[h]){i=r[u][a],e=n.call(r,r.__data__,h,c),l.push(t=[]);for(var p=-1,d=e.length;++p<d;)(o=e[p])&&Xi(o,p,u,a,i),t.push(o)}return Yi(l,u,a)},$l.filter=function(n){var t,e,r,o=[];"function"!=typeof n&&(n=F(n));for(var i=0,a=this.length;a>i;i++){o.push(t=[]);for(var e=this[i],u=0,l=e.length;l>u;u++)(r=e[u])&&n.call(r,r.__data__,u,i)&&t.push(r)}return Yi(o,this.namespace,this.id)},$l.tween=function(n,t){var e=this.id,r=this.namespace;return arguments.length<2?this.node()[r][e].tween.get(n):H(this,null==t?function(t){t[r][e].tween.remove(n)}:function(o){o[r][e].tween.set(n,t)})},$l.attr=function(n,t){function e(){this.removeAttribute(u)}function r(){this.removeAttributeNS(u.space,u.local)}function o(n){return null==n?e:(n+="",function(){var t,e=this.getAttribute(u);return e!==n&&(t=a(e,n),function(n){this.setAttribute(u,t(n))})})}function i(n){return null==n?r:(n+="",function(){var t,e=this.getAttributeNS(u.space,u.local);return e!==n&&(t=a(e,n),function(n){this.setAttributeNS(u.space,u.local,t(n))})})}if(arguments.length<2){for(t in n)this.attr(t,n[t]);return this}var a="transform"==n?Fr:yr,u=ea.ns.qualify(n);return Bi(this,"attr."+n,t,u.local?i:o)},$l.attrTween=function(n,t){function e(n,e){var r=t.call(this,n,e,this.getAttribute(o));return r&&function(n){this.setAttribute(o,r(n))}}function r(n,e){var r=t.call(this,n,e,this.getAttributeNS(o.space,o.local));return r&&function(n){this.setAttributeNS(o.space,o.local,r(n))}}var o=ea.ns.qualify(n);return this.tween("attr."+n,o.local?r:e)},$l.style=function(n,e,r){function o(){this.style.removeProperty(n)}function i(e){return null==e?o:(e+="",function(){var o,i=t(this).getComputedStyle(this,null).getPropertyValue(n);return i!==e&&(o=yr(i,e),function(t){this.style.setProperty(n,o(t),r)})})}var a=arguments.length;if(3>a){if("string"!=typeof n){2>a&&(e="");for(r in n)this.style(r,n[r],e);return this}r=""}return Bi(this,"style."+n,e,i)},$l.styleTween=function(n,e,r){function o(o,i){var a=e.call(this,o,i,t(this).getComputedStyle(this,null).getPropertyValue(n));return a&&function(t){this.style.setProperty(n,a(t),r)}}return arguments.length<3&&(r=""),this.tween("style."+n,o)},$l.text=function(n){return Bi(this,"text",n,Zi)},$l.remove=function(){var n=this.namespace;return this.each("end.transition",function(){var t;this[n].count<2&&(t=this.parentNode)&&t.removeChild(this)})},$l.ease=function(n){var t=this.id,e=this.namespace;return arguments.length<1?this.node()[e][t].ease:("function"!=typeof n&&(n=ea.ease.apply(ea,arguments)),H(this,function(r){r[e][t].ease=n}))},$l.delay=function(n){var t=this.id,e=this.namespace;return arguments.length<1?this.node()[e][t].delay:H(this,"function"==typeof n?function(r,o,i){r[e][t].delay=+n.call(r,r.__data__,o,i)}:(n=+n,function(r){r[e][t].delay=n}))},$l.duration=function(n){var t=this.id,e=this.namespace;return arguments.length<1?this.node()[e][t].duration:H(this,"function"==typeof n?function(r,o,i){r[e][t].duration=Math.max(1,n.call(r,r.__data__,o,i))}:(n=Math.max(1,n),function(r){r[e][t].duration=n}))},$l.each=function(n,t){var e=this.id,r=this.namespace;if(arguments.length<2){var o=zl,i=Tl;try{Tl=e,H(this,function(t,o,i){zl=t[r][e],n.call(t,t.__data__,o,i)})}finally{zl=o,Tl=i}}else H(this,function(o){var i=o[r][e];(i.event||(i.event=ea.dispatch("start","end","interrupt"))).on(n,t)});return this},$l.transition=function(){for(var n,t,e,r,o=this.id,i=++Ul,a=this.namespace,u=[],l=0,c=this.length;c>l;l++){u.push(n=[]);for(var t=this[l],s=0,f=t.length;f>s;s++)(e=t[s])&&(r=e[a][o],Xi(e,s,a,i,{time:r.time,ease:r.ease,delay:r.delay+r.duration,duration:r.duration})),n.push(e)}return Yi(u,a,i)},ea.svg.axis=function(){function n(n){n.each(function(){var n,c=ea.select(this),s=this.__chart__||e,f=this.__chart__=e.copy(),h=null==l?f.ticks?f.ticks.apply(f,u):f.domain():l,g=null==t?f.tickFormat?f.tickFormat.apply(f,u):y:t,p=c.selectAll(".tick").data(h,f),d=p.enter().insert("g",".domain").attr("class","tick").style("opacity",Na),m=ea.transition(p.exit()).style("opacity",Na).remove(),v=ea.transition(p.order()).style("opacity",1),M=Math.max(o,0)+a,x=jo(f),w=c.selectAll(".domain").data([0]),b=(w.enter().append("path").attr("class","domain"),ea.transition(w));d.append("line"),d.append("text");var _,k,C,S,A=d.select("line"),E=v.select("line"),q=p.select("text").text(g),N=d.select("text"),L=v.select("text"),D="top"===r||"left"===r?-1:1;if("bottom"===r||"top"===r?(n=Wi,_="x",C="y",k="x2",S="y2",q.attr("dy",0>D?"0em":".71em").style("text-anchor","middle"),b.attr("d","M"+x[0]+","+D*i+"V0H"+x[1]+"V"+D*i)):(n=Gi,_="y",C="x",k="y2",S="x2",q.attr("dy",".32em").style("text-anchor",0>D?"end":"start"),b.attr("d","M"+D*i+","+x[0]+"H0V"+x[1]+"H"+D*i)),A.attr(S,D*o),N.attr(C,D*M),E.attr(k,0).attr(S,D*o),L.attr(_,0).attr(C,D*M),f.rangeBand){var P=f,T=P.rangeBand()/2;s=f=function(n){return P(n)+T}}else s.rangeBand?s=f:m.call(n,f,s);d.call(n,s,f),v.call(n,f,f)})}var t,e=ea.scale.linear(),r=jl,o=6,i=6,a=3,u=[10],l=null;return n.scale=function(t){return arguments.length?(e=t,n):e},n.orient=function(t){return arguments.length?(r=t in Il?t+"":jl,n):r},n.ticks=function(){return arguments.length?(u=arguments,n):u},n.tickValues=function(t){return arguments.length?(l=t,n):l},n.tickFormat=function(e){return arguments.length?(t=e,n):t},n.tickSize=function(t){var e=arguments.length;return e?(o=+t,i=+arguments[e-1],n):o},n.innerTickSize=function(t){return arguments.length?(o=+t,n):o},n.outerTickSize=function(t){return arguments.length?(i=+t,n):i},n.tickPadding=function(t){return arguments.length?(a=+t,n):a},n.tickSubdivide=function(){return arguments.length&&n},n};var jl="bottom",Il={top:1,right:1,bottom:1,left:1};ea.svg.brush=function(){function n(t){t.each(function(){var t=ea.select(this).style("pointer-events","all").style("-webkit-tap-highlight-color","rgba(0,0,0,0)").on("mousedown.brush",i).on("touchstart.brush",i),a=t.selectAll(".background").data([0]);a.enter().append("rect").attr("class","background").style("visibility","hidden").style("cursor","crosshair"),t.selectAll(".extent").data([0]).enter().append("rect").attr("class","extent").style("cursor","move");var u=t.selectAll(".resize").data(d,y);u.exit().remove(),u.enter().append("g").attr("class",function(n){return"resize "+n}).style("cursor",function(n){return Fl[n]}).append("rect").attr("x",function(n){return/[ew]$/.test(n)?-3:null}).attr("y",function(n){return/^[ns]/.test(n)?-3:null}).attr("width",6).attr("height",6).style("visibility","hidden"),u.style("display",n.empty()?"none":null);var l,f=ea.transition(t),h=ea.transition(a);c&&(l=jo(c),h.attr("x",l[0]).attr("width",l[1]-l[0]),r(f)),s&&(l=jo(s),h.attr("y",l[0]).attr("height",l[1]-l[0]),o(f)),e(f)})}function e(n){n.selectAll(".resize").attr("transform",function(n){return"translate("+f[+/e$/.test(n)]+","+h[+/^s/.test(n)]+")"})}function r(n){n.select(".extent").attr("x",f[0]),n.selectAll(".extent,.n>rect,.s>rect").attr("width",f[1]-f[0])}function o(n){n.select(".extent").attr("y",h[0]),n.selectAll(".extent,.e>rect,.w>rect").attr("height",h[1]-h[0])}function i(){function i(){32==ea.event.keyCode&&(q||(M=null,L[0]-=f[1],L[1]-=h[1],q=2),k())}function d(){32==ea.event.keyCode&&2==q&&(L[0]+=f[1],L[1]+=h[1],q=0,k())}function m(){var n=ea.mouse(w),t=!1;x&&(n[0]+=x[0],n[1]+=x[1]),q||(ea.event.altKey?(M||(M=[(f[0]+f[1])/2,(h[0]+h[1])/2]),L[0]=f[+(n[0]<M[0])],L[1]=h[+(n[1]<M[1])]):M=null),A&&v(n,c,0)&&(r(C),t=!0),E&&v(n,s,1)&&(o(C),t=!0),t&&(e(C),_({type:"brush",mode:q?"move":"resize"}))}function v(n,t,e){var r,o,i=jo(t),l=i[0],c=i[1],s=L[e],d=e?h:f,m=d[1]-d[0];return q&&(l-=s,c-=m+s),r=(e?p:g)?Math.max(l,Math.min(c,n[e])):n[e],q?o=(r+=s)+m:(M&&(s=Math.max(l,Math.min(c,2*M[e]-r))),r>s?(o=r,r=s):o=s),d[0]!=r||d[1]!=o?(e?u=null:a=null,d[0]=r,d[1]=o,!0):void 0}function y(){m(),C.style("pointer-events","all").selectAll(".resize").style("display",n.empty()?"none":null),ea.select("body").style("cursor",null),D.on("mousemove.brush",null).on("mouseup.brush",null).on("touchmove.brush",null).on("touchend.brush",null).on("keydown.brush",null).on("keyup.brush",null),N(),_({type:"brushend"})}var M,x,w=this,b=ea.select(ea.event.target),_=l.of(w,arguments),C=ea.select(w),S=b.datum(),A=!/^(n|s)$/.test(S)&&c,E=!/^(e|w)$/.test(S)&&s,q=b.classed("extent"),N=W(w),L=ea.mouse(w),D=ea.select(t(w)).on("keydown.brush",i).on("keyup.brush",d);if(ea.event.changedTouches?D.on("touchmove.brush",m).on("touchend.brush",y):D.on("mousemove.brush",m).on("mouseup.brush",y),C.interrupt().selectAll("*").interrupt(),q)L[0]=f[0]-L[0],L[1]=h[0]-L[1];else if(S){var P=+/w$/.test(S),T=+/^n/.test(S);x=[f[1-P]-L[0],h[1-T]-L[1]],L[0]=f[P],L[1]=h[T]}else ea.event.altKey&&(M=L.slice());C.style("pointer-events","none").selectAll(".resize").style("display",null),ea.select("body").style("cursor",b.style("cursor")),_({type:"brushstart"}),m()}var a,u,l=S(n,"brushstart","brush","brushend"),c=null,s=null,f=[0,0],h=[0,0],g=!0,p=!0,d=Ol[0];return n.event=function(n){n.each(function(){var n=l.of(this,arguments),t={x:f,y:h,i:a,j:u},e=this.__chart__||t;this.__chart__=t,Tl?ea.select(this).transition().each("start.brush",function(){a=e.i,u=e.j,f=e.x,h=e.y,n({type:"brushstart"})}).tween("brush:brush",function(){var e=Mr(f,t.x),r=Mr(h,t.y);return a=u=null,function(o){f=t.x=e(o),h=t.y=r(o),n({type:"brush",mode:"resize"})}}).each("end.brush",function(){a=t.i,u=t.j,n({type:"brush",mode:"resize"}),n({type:"brushend"})}):(n({type:"brushstart"}),n({type:"brush",mode:"resize"}),n({type:"brushend"}))})},n.x=function(t){return arguments.length?(c=t,d=Ol[!c<<1|!s],n):c},n.y=function(t){return arguments.length?(s=t,d=Ol[!c<<1|!s],n):s},n.clamp=function(t){return arguments.length?(c&&s?(g=!!t[0],p=!!t[1]):c?g=!!t:s&&(p=!!t),n):c&&s?[g,p]:c?g:s?p:null},n.extent=function(t){var e,r,o,i,l;return arguments.length?(c&&(e=t[0],r=t[1],s&&(e=e[0],r=r[0]),a=[e,r],c.invert&&(e=c(e),r=c(r)),e>r&&(l=e,e=r,r=l),(e!=f[0]||r!=f[1])&&(f=[e,r])),s&&(o=t[0],i=t[1],c&&(o=o[1],i=i[1]),u=[o,i],s.invert&&(o=s(o),i=s(i)),o>i&&(l=o,o=i,i=l),(o!=h[0]||i!=h[1])&&(h=[o,i])),n):(c&&(a?(e=a[0],r=a[1]):(e=f[0],r=f[1],c.invert&&(e=c.invert(e),r=c.invert(r)),e>r&&(l=e,e=r,r=l))),s&&(u?(o=u[0],i=u[1]):(o=h[0],i=h[1],s.invert&&(o=s.invert(o),i=s.invert(i)),o>i&&(l=o,o=i,i=l))),c&&s?[[e,o],[r,i]]:c?[e,r]:s&&[o,i])},n.clear=function(){return n.empty()||(f=[0,0],h=[0,0],a=u=null),n},n.empty=function(){return!!c&&f[0]==f[1]||!!s&&h[0]==h[1]},ea.rebind(n,l,"on")};var Fl={n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},Ol=[["n","e","s","w","nw","ne","se","sw"],["e","w"],["n","s"],[]],Hl=lu.format=pu.timeFormat,Yl=Hl.utc,Bl=Yl("%Y-%m-%dT%H:%M:%S.%LZ");Hl.iso=Date.prototype.toISOString&&+new Date("2000-01-01T00:00:00.000Z")?Ji:Bl,Ji.parse=function(n){var t=new Date(n);return isNaN(t)?null:t},Ji.toString=Bl.toString,lu.second=In(function(n){return new cu(1e3*Math.floor(n/1e3))},function(n,t){n.setTime(n.getTime()+1e3*Math.floor(t))},function(n){return n.getSeconds()}),lu.seconds=lu.second.range,lu.seconds.utc=lu.second.utc.range,lu.minute=In(function(n){return new cu(6e4*Math.floor(n/6e4))},function(n,t){n.setTime(n.getTime()+6e4*Math.floor(t))},function(n){return n.getMinutes()}),lu.minutes=lu.minute.range,lu.minutes.utc=lu.minute.utc.range,lu.hour=In(function(n){var t=n.getTimezoneOffset()/60;return new cu(36e5*(Math.floor(n/36e5-t)+t))},function(n,t){n.setTime(n.getTime()+36e5*Math.floor(t))},function(n){return n.getHours()}),lu.hours=lu.hour.range,lu.hours.utc=lu.hour.utc.range,lu.month=In(function(n){return n=lu.day(n),n.setDate(1),n},function(n,t){n.setMonth(n.getMonth()+t)},function(n){return n.getMonth()}),lu.months=lu.month.range,lu.months.utc=lu.month.utc.range;var Zl=[1e3,5e3,15e3,3e4,6e4,3e5,9e5,18e5,36e5,108e5,216e5,432e5,864e5,1728e5,6048e5,2592e6,7776e6,31536e6],Vl=[[lu.second,1],[lu.second,5],[lu.second,15],[lu.second,30],[lu.minute,1],[lu.minute,5],[lu.minute,15],[lu.minute,30],[lu.hour,1],[lu.hour,3],[lu.hour,6],[lu.hour,12],[lu.day,1],[lu.day,2],[lu.week,1],[lu.month,1],[lu.month,3],[lu.year,1]],Xl=Hl.multi([[".%L",function(n){return n.getMilliseconds()}],[":%S",function(n){return n.getSeconds()}],["%I:%M",function(n){return n.getMinutes()}],["%I %p",function(n){return n.getHours()}],["%a %d",function(n){return n.getDay()&&1!=n.getDate()}],["%b %d",function(n){return 1!=n.getDate()}],["%B",function(n){return n.getMonth()}],["%Y",qt]]),Wl={range:function(n,t,e){return ea.range(Math.ceil(n/e)*e,+t,e).map(Qi)},floor:y,ceil:y};Vl.year=lu.year,lu.scale=function(){return Ki(ea.scale.linear(),Vl,Xl)};var Gl=Vl.map(function(n){return[n[0].utc,n[1]]}),Jl=Yl.multi([[".%L",function(n){return n.getUTCMilliseconds()}],[":%S",function(n){return n.getUTCSeconds()}],["%I:%M",function(n){return n.getUTCMinutes()}],["%I %p",function(n){return n.getUTCHours()}],["%a %d",function(n){return n.getUTCDay()&&1!=n.getUTCDate()}],["%b %d",function(n){return 1!=n.getUTCDate()}],["%B",function(n){return n.getUTCMonth()}],["%Y",qt]]);return Gl.year=lu.year.utc,lu.scale.utc=function(){return Ki(ea.scale.linear(),Gl,Jl)},ea.text=En(function(n){return n.responseText}),ea.json=function(n,t){return qn(n,"application/json",na,t)},ea.html=function(n,t){return qn(n,"text/html",ta,t)},ea.xml=En(function(n){return n.responseXML}),"function"==typeof define&&define.amd?define(ea):"object"==typeof module&&module.exports&&(module.exports=ea),this.d3=ea,ea}]),angular.module("ionic.utils",[]).factory("$localStorage",["$window",function(n){return{set:function(t,e){n.localStorage[t]=e},get:function(t,e){return n.localStorage[t]||e},setObject:function(t,e){n.localStorage[t]=JSON.stringify(e)},getObject:function(t){return JSON.parse(n.localStorage[t]||"{}")},isSet:function(t){return"undefined"!=typeof n.localStorage[t]},size:function(){return this.keys().length},keys:function(){return Object.keys(n.localStorage)},clear:function(t){delete n.localStorage[t]},clearAll:function(){n.localStorage.clear()}}}]);
//# sourceMappingURL=data:application/json;base64,